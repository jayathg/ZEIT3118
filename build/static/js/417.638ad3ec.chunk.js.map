{"version":3,"file":"static/js/417.638ad3ec.chunk.js","mappings":"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GAAK,CAAC,MAAM,GAAK,CAAC,MAAM,GAAK,CAAC,MAAM,GAAK,CAAC,MAAM,GAAK,CAAC,MAAM,GAAK,CAAC,MAAM,GAAK,CAAC,MAAM,GAAK,CAAC,MAAM,GAAK,CAAC,MAAM,GAAK,CAAC,MAAM,GAAK,CAAC,KAAK,KAAK,MAAM,GAAK,CAAC,MAAM,GAAK,CAAC,MAAM,GAAK,CAAC,MAAM,GAAK,CAAC,MAAM,GAAK,CAAC,MAAM,GAAK,CAAC,MAAM,GAAK,CAAC,MAAM,GAAK,CAAC,MAAM,GAAK,CAAC,MAAM,GAAK,CAAC,MAAM,GAAK,CAAC,MAAM,GAAK,CAAC,MAAM,GAAK,CAAC,MAAM,GAAK,CAAC,MAAM,GAAK,CAAC,MAAM,GAAK,CAAC,MAAM,IAAM,CAAC,MAAM,IAAM,CAAC,KAAK,MAAM,IAAM,CAAC,MAAM,IAAM,CAAC,MAAM,IAAM,CAAC,MAAM,IAAM,CAAC,MAAM,IAAM,CAAC,MAAM,IAAM,CAAC,MAAM,IAAM,CAAC,MAAM,IAAM,CAAC,MAAM,IAAM,CAAC,MAAM,IAAM,CAAC,MAAM,IAAM,CAAC,MAAM,IAAM,CAAC,MAAM,IAAM,CAAC,MAAM,IAAM,CAAC,MAAM,IAAM,CAAC,MAAM,IAAM,CAAC,MAAM,IAAM,CAAC,MAAM,IAAM,CAAC,MAAM,IAAM,CAAC,MAAM,IAAM,CAAC,MAAM,IAAM,CAAC,MAAM,IAAM,CAAC,MAAM,IAAM,CAAC,MAAM,IAAM,CAAC,MAAM,IAAM,CAAC,MAAM,IAAM,CAAC,MAAM,IAAM,CAAC,MAAM,IAAM,CAAC,MAAM,IAAM,CAAC,MAAM,IAAM,CAAC,MAAM,IAAM,CAAC,MAAM,IAAM,CAAC,MAAM,IAAM,CAAC,MAAM,IAAM,CAAC,MAAM,IAAM,CAAC,MAAM,IAAM,CAAC,MAAM,IAAM,CAAC,MAAM,IAAM,CAAC,MAAM,IAAM,CAAC,MAAM,IAAM,CAAC,MAAM,IAAM,CAAC,MAAM,IAAM,CAAC,MAAM,IAAM,CAAC,MAAM,IAAM,CAAC,MAAM,IAAM,CAAC,KAAK,MAAM,IAAM,CAAC,MAAM,IAAM,CAAC,MAAM,IAAM,CAAC,MAAM,IAAM,CAAC,MAAM,IAAM,CAAC,MAAM,IAAM,CAAC,MAAM,IAAM,CAAC,MAAM,IAAM,CAAC,KAAK,MAAM,IAAM,CAAC,MAAM,IAAM,CAAC,MAAM,IAAM,CAAC,MAAM,IAAM,CAAC,MAAM,IAAM,CAAC,MAAM,IAAM,CAAC,MAAM,IAAM,CAAC,MAAM,IAAM,CAAC,MAAM,IAAM,CAAC,MAAM,IAAM,CAAC,MAAM,IAAM,CAAC,MAAM,IAAM,CAAC,MAAM,IAAM,CAAC,KAAK,MAAM,IAAM,CAAC,MAAM,IAAM,CAAC,MAAM,IAAM,CAAC,MAAM,IAAM,CAAC,MAAM,IAAM,CAAC,MAAM,IAAM,CAAC,MAAM,IAAM,CAAC,MAAM,IAAM,CAAC,MAAM,IAAM,CAAC,MAAM,IAAM,CAAC,MAAM,IAAM,CAAC,MAAM,IAAM,CAAC,MAAM,IAAM,CAAC,MAAM,IAAM,CAAC,MAAM,IAAM,CAAC,MAAM,IAAM,CAAC,MAAM,IAAM,CAAC,MAAM,IAAM,CAAC,MAAM,IAAM,CAAC,MAAM,IAAM,CAAC,MAAM,IAAM,CAAC,MAAM,IAAM,CAAC,MAAM,IAAM,CAAC,MAAM,IAAM,CAAC,MAAM,IAAM,CAAC,MAAM,IAAM,CAAC,MAAM,IAAM,CAAC,MAAM,IAAM,CAAC,MAAM,IAAM,CAAC,MAAM,IAAM,CAAC,MAAM,IAAM,CAAC,MAAM,IAAM,CAAC,KAAK,KAAK,MAAM,IAAM,CAAC,MAAM,IAAM,CAAC,MAAM,IAAM,CAAC,MAAM,IAAM,CAAC,MAAM,IAAM,CAAC,MAAM,IAAM,CAAC,MAAM,IAAM,CAAC,MAAM,IAAM,CAAC,MAAM,IAAM,CAAC,KAAK,MAAM,IAAM,CAAC,MAAM,IAAM,CAAC,MAAM,IAAM,CAAC,MAAM,IAAM,CAAC,MAAM,IAAM,CAAC,MAAM,IAAM,CAAC,MAAM,IAAM,CAAC,MAAM,IAAM,CAAC,MAAM,IAAM,CAAC,MAAM,IAAM,CAAC,MAAM,IAAM,CAAC,MAAM,IAAM,CAAC,MAAM,IAAM,CAAC,MAAM,IAAM,CAAC,MAAM,IAAM,CAAC,MAAM,IAAM,CAAC,MAAM,IAAM,CAAC,MAAM,IAAM,CAAC,MAAM,IAAM,CAAC,MAAM,IAAM,CAAC,MAAM,IAAM,CAAC,MAAM,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","sources":["../node_modules/@descope/user-management-widget/node_modules/@descope/sdk-mixins/src/mixins/loggerMixin/loggerMixin.ts","../node_modules/@descope/user-management-widget/node_modules/@descope/sdk-mixins/src/constants.ts","../node_modules/@descope/user-management-widget/node_modules/@descope/sdk-mixins/src/mixins/staticResourcesMixin/constants.ts","../node_modules/@descope/user-management-widget/node_modules/@descope/sdk-mixins/src/mixins/createValidateAttributesMixin/commonValidators.ts","../node_modules/@descope/user-management-widget/node_modules/@descope/sdk-mixins/src/mixins/initLifecycleMixin.ts","../node_modules/@descope/user-management-widget/node_modules/@descope/sdk-mixins/src/mixins/observeAttributesMixin/observeAttributesMixin.ts","../node_modules/@descope/user-management-widget/node_modules/@descope/sdk-mixins/src/mixins/observeAttributesMixin/helpers.ts","../node_modules/@descope/user-management-widget/node_modules/@descope/sdk-mixins/src/mixins/createValidateAttributesMixin/createValidateAttributesMixin.ts","../node_modules/@descope/user-management-widget/node_modules/@descope/sdk-mixins/src/mixins/projectIdMixin.ts","../node_modules/@descope/user-management-widget/node_modules/@descope/sdk-mixins/src/mixins/staticResourcesMixin/staticResourcesMixin.ts","../node_modules/@descope/user-management-widget/node_modules/@descope/sdk-mixins/src/mixins/configMixin/configMixin.ts","../node_modules/@descope/user-management-widget/node_modules/@descope/sdk-mixins/src/mixins/configMixin/constants.ts","../node_modules/@descope/user-management-widget/node_modules/@descope/sdk-mixins/src/mixins/debuggerMixin/debuggerMixin.ts","../node_modules/@descope/user-management-widget/node_modules/@descope/sdk-mixins/src/mixins/descopeUiMixin/constants.ts","../node_modules/@descope/user-management-widget/node_modules/@descope/sdk-mixins/src/mixins/descopeUiMixin/helpers.ts","../node_modules/@descope/user-management-widget/node_modules/@descope/sdk-mixins/src/mixins/descopeUiMixin/descopeUiMixin.ts","../node_modules/@descope/user-management-widget/node_modules/@descope/sdk-mixins/src/mixins/initElementMixin.ts","../node_modules/@descope/user-management-widget/node_modules/@descope/sdk-mixins/src/mixins/modalMixin/constants.ts","../node_modules/@descope/user-management-widget/node_modules/@descope/sdk-mixins/src/mixins/modalMixin/modalMixin.ts","../node_modules/@descope/user-management-widget/node_modules/@descope/sdk-mixins/src/mixins/modalMixin/helpers.ts","../node_modules/@descope/user-management-widget/node_modules/@descope/sdk-mixins/src/mixins/notificationsMixin/constants.ts","../node_modules/@descope/user-management-widget/node_modules/@descope/sdk-mixins/src/mixins/notificationsMixin/notificationsMixin.ts","../node_modules/@descope/user-management-widget/node_modules/@descope/sdk-mixins/src/mixins/notificationsMixin/helpers.ts","../node_modules/@descope/user-management-widget/node_modules/@descope/sdk-mixins/src/mixins/themeMixin/themeMixin.ts","../node_modules/@descope/user-management-widget/node_modules/@descope/sdk-mixins/src/mixins/themeMixin/constants.ts","../node_modules/@descope/user-management-widget/node_modules/@descope/sdk-mixins/src/mixins/themeMixin/helpers.ts","../node_modules/@descope/user-management-widget/node_modules/@descope/sdk-mixins/src/mixins/createStateManagementMixin.ts","../node_modules/@descope/user-management-widget/node_modules/@descope/sdk-mixins/src/mixins/formMixin.ts","../node_modules/@descope/user-management-widget/node_modules/@descope/sdk-mixins/src/mixins/debuggerMixin/helpers.ts","../node_modules/@descope/user-management-widget/node_modules/@descope/sdk-mixins/src/mixins/debuggerMixin/debugger-wc.ts","../node_modules/libphonenumber-js/metadata.min.json.js","../node_modules/libphonenumber-js/source/helpers/isObject.js","../node_modules/libphonenumber-js/source/normalizeArguments.js","../node_modules/libphonenumber-js/source/constants.js","../node_modules/libphonenumber-js/source/ParseError.js","../node_modules/libphonenumber-js/source/tools/semver-compare.js","../node_modules/libphonenumber-js/source/metadata.js","../node_modules/libphonenumber-js/source/helpers/extension/createExtensionPattern.js","../node_modules/libphonenumber-js/source/helpers/isViablePhoneNumber.js","../node_modules/libphonenumber-js/source/helpers/extension/extractExtension.js","../node_modules/libphonenumber-js/source/helpers/parseDigits.js","../node_modules/libphonenumber-js/source/parseIncompletePhoneNumber.js","../node_modules/libphonenumber-js/source/helpers/checkNumberLength.js","../node_modules/libphonenumber-js/source/helpers/mergeArrays.js","../node_modules/libphonenumber-js/source/isPossible.js","../node_modules/libphonenumber-js/source/helpers/matchesEntirely.js","../node_modules/libphonenumber-js/source/helpers/getNumberType.js","../node_modules/libphonenumber-js/source/helpers/getPossibleCountriesForNumber.js","../node_modules/libphonenumber-js/source/helpers/formatNationalNumberUsingFormat.js","../node_modules/libphonenumber-js/source/helpers/applyInternationalSeparatorStyle.js","../node_modules/libphonenumber-js/source/helpers/getIddPrefix.js","../node_modules/libphonenumber-js/source/format.js","../node_modules/libphonenumber-js/source/helpers/RFC3966.js","../node_modules/libphonenumber-js/source/PhoneNumber.js","../node_modules/libphonenumber-js/source/isValid.js","../node_modules/libphonenumber-js/source/helpers/stripIddPrefix.js","../node_modules/libphonenumber-js/source/helpers/extractNationalNumber.js","../node_modules/libphonenumber-js/source/helpers/extractNationalNumberFromPossiblyIncompleteNumber.js","../node_modules/libphonenumber-js/source/helpers/extractCountryCallingCode.js","../node_modules/libphonenumber-js/source/helpers/extractCountryCallingCodeFromInternationalNumberWithoutPlusSign.js","../node_modules/libphonenumber-js/source/helpers/getCountryByCallingCode.js","../node_modules/libphonenumber-js/source/helpers/getCountryByNationalNumber.js","../node_modules/libphonenumber-js/source/helpers/extractPhoneContext.js","../node_modules/libphonenumber-js/source/helpers/extractFormattedPhoneNumberFromPossibleRfc3966NumberUri.js","../node_modules/libphonenumber-js/source/parse.js","../node_modules/libphonenumber-js/source/parsePhoneNumber_.js","../node_modules/libphonenumber-js/source/parsePhoneNumberWithError_.js","../node_modules/libphonenumber-js/source/parsePhoneNumber.js","../node_modules/libphonenumber-js/min/exports/parsePhoneNumber.js","../node_modules/libphonenumber-js/min/exports/withMetadataArgument.js","../node_modules/@descope/user-management-widget/src/lib/widget/state/constants.ts","../node_modules/@descope/user-management-widget/src/lib/widget/state/selectors.ts","../node_modules/@descope/user-management-widget/src/lib/widget/state/asyncActions/helpers.ts","../node_modules/@descope/user-management-widget/src/lib/widget/state/asyncActions/createUser.ts","../node_modules/@descope/user-management-widget/src/lib/widget/state/asyncActions/deleteUser.ts","../node_modules/@descope/user-management-widget/src/lib/widget/state/asyncActions/setTempUserPassword.ts","../node_modules/@descope/user-management-widget/src/lib/widget/state/asyncActions/getCustomAttributes.ts","../node_modules/@descope/user-management-widget/src/lib/widget/state/asyncActions/searchUsers.ts","../node_modules/@descope/user-management-widget/src/lib/widget/state/asyncActions/getTenantRoles.ts","../node_modules/@descope/user-management-widget/src/lib/widget/state/asyncActions/updateUser.ts","../node_modules/@descope/user-management-widget/src/lib/widget/state/asyncActions/enableUser.ts","../node_modules/@descope/user-management-widget/src/lib/widget/state/asyncActions/disableUser.ts","../node_modules/@descope/user-management-widget/src/lib/widget/state/asyncActions/removePasskey.ts","../node_modules/@descope/user-management-widget/src/lib/widget/state/initialState.ts","../node_modules/@descope/user-management-widget/src/lib/widget/api/apiPaths.ts","../node_modules/@descope/user-management-widget/src/lib/widget/api/sdk/helpers.ts","../node_modules/@descope/user-management-widget/src/lib/widget/api/sdk/createUserSdk.ts","../node_modules/@descope/user-management-widget/src/lib/widget/api/sdk/mocks.ts","../node_modules/@descope/user-management-widget/src/lib/widget/api/sdk/createTenantSdk.ts","../node_modules/@descope/user-management-widget/src/lib/widget/mixins/apiMixin.ts","../node_modules/@descope/user-management-widget/src/lib/widget/api/sdk/index.ts","../node_modules/@descope/user-management-widget/src/lib/widget/mixins/stateManagementMixin.ts","../node_modules/@descope/user-management-widget/src/lib/widget/mixins/fetchWidgetPagesMixin.ts","../node_modules/@descope/user-management-widget/src/lib/widget/mixins/initMixin/initComponentsMixins/initWidgetRootMixin.ts","../node_modules/@descope/user-management-widget/src/lib/widget/mixins/initMixin/initComponentsMixins/initCreateUserModalMixin.ts","../node_modules/@descope/user-management-widget/src/lib/widget/mixins/initMixin/initComponentsMixins/initCreateUserButtonMixin.ts","../node_modules/@descope/user-management-widget/src/lib/widget/mixins/initMixin/initComponentsMixins/initDeleteUsersModalMixin.ts","../node_modules/@descope/user-management-widget/src/lib/widget/mixins/initMixin/initComponentsMixins/initDeleteUsersButtonMixin.ts","../node_modules/@descope/user-management-widget/src/lib/widget/mixins/initMixin/initComponentsMixins/initDisableUserModalMixin.ts","../node_modules/@descope/user-management-widget/src/lib/widget/mixins/initMixin/initComponentsMixins/initDisableUserButtonMixin.ts","../node_modules/@descope/user-management-widget/src/lib/widget/mixins/initMixin/initComponentsMixins/initEditUserModalMixin.ts","../node_modules/@descope/user-management-widget/src/lib/widget/mixins/initMixin/initComponentsMixins/initEditUsersButtonMixin.ts","../node_modules/@descope/user-management-widget/src/lib/widget/mixins/initMixin/initComponentsMixins/initEnableUserModalMixin.ts","../node_modules/@descope/user-management-widget/src/lib/widget/mixins/initMixin/initComponentsMixins/initEnableUserButtonMixin.ts","../node_modules/@descope/user-management-widget/src/lib/widget/mixins/initMixin/initComponentsMixins/initFilterUsersInputMixin.ts","../node_modules/@descope/user-management-widget/src/lib/widget/mixins/initMixin/initComponentsMixins/initNotificationsMixin.ts","../node_modules/@descope/user-management-widget/src/lib/widget/mixins/initMixin/initComponentsMixins/initRemovePasskeyModalMixin.ts","../node_modules/@descope/user-management-widget/src/lib/widget/mixins/initMixin/initComponentsMixins/initRemovePasskeyButtonMixin.ts","../node_modules/@descope/user-management-widget/src/lib/widget/mixins/initMixin/initComponentsMixins/initUsersTableMixin.ts","../node_modules/@descope/user-management-widget/src/lib/widget/mixins/initMixin/initComponentsMixins/initGeneratedPasswordModalMixin.ts","../node_modules/@descope/user-management-widget/src/lib/widget/mixins/initMixin/initComponentsMixins/initResetPasswordModalMixin.ts","../node_modules/@descope/user-management-widget/src/lib/widget/mixins/initMixin/initComponentsMixins/initResetPasswordButtonMixin.ts","../node_modules/@descope/user-management-widget/src/lib/widget/mixins/initMixin/initMixin.ts","../node_modules/@descope/user-management-widget/src/lib/widget/index.ts","../node_modules/@descope/user-management-widget/src/lib/index.ts"],"sourcesContent":["import { createSingletonMixin } from '@descope/sdk-helpers';\nimport { Logger } from './types';\n\nconst logLevels = ['error', 'warn', 'info', 'debug'] as const;\n\nexport type LogLevel = (typeof logLevels)[number];\n\nexport const loggerMixin = createSingletonMixin(\n  <T extends CustomElementConstructor>(superclass: T) =>\n    class LoggerMixinClass extends superclass {\n      #logger: Logger = this.#wrapLogger(console);\n\n      #wrapLogger(logger: Partial<Logger>) {\n        return logLevels.reduce((acc, logLevel) => {\n          acc[logLevel] = (...args: any[]) => {\n            this.onLogEvent(logLevel, args);\n            logger[logLevel]?.(...args);\n          };\n\n          return acc;\n        }, {}) as Logger;\n      }\n\n      set logger(logger: Partial<Logger>) {\n        this.#logger = this.#wrapLogger(logger);\n      }\n\n      get logger(): Logger {\n        return this.#logger;\n      }\n\n      // eslint-disable-next-line class-methods-use-this, @typescript-eslint/no-unused-vars\n      onLogEvent(logLevel: LogLevel, data: any[]) {}\n    },\n);\n","export const IS_LOCAL_STORAGE = typeof localStorage !== 'undefined';\n","import { IS_LOCAL_STORAGE } from '../../constants';\n\nconst BASE_CONTENT_URL_KEY = 'base.content.url';\n\nexport const BASE_CONTENT_URL =\n  (IS_LOCAL_STORAGE && localStorage.getItem(BASE_CONTENT_URL_KEY)) ||\n  'https://static.descope.com/pages';\n\nexport const ASSETS_FOLDER = 'v2-beta';\nexport const PREV_VER_ASSETS_FOLDER = 'v2-alpha';\n","export const missingAttrValidator = (attrName: string, value: string | null) =>\n  !value && `${attrName} cannot be empty`;\n","import { createSingletonMixin } from '@descope/sdk-helpers';\n\nexport const initLifecycleMixin = createSingletonMixin(\n  <T extends CustomElementConstructor>(superclass: T) =>\n    class InitLifecycleMixinClass extends superclass {\n      #isInit = true;\n\n      connectedCallback() {\n        super.connectedCallback?.();\n\n        if (this.shadowRoot?.isConnected) {\n          // the init function is running once, on the first time the component is connected\n          if (this.#isInit) {\n            this.#isInit = false;\n            this.init();\n          }\n        }\n      }\n\n      // eslint-disable-next-line class-methods-use-this, @typescript-eslint/no-empty-function\n      async init() {}\n    },\n);\n","import { createSingletonMixin, compose } from '@descope/sdk-helpers';\nimport { initLifecycleMixin } from '../initLifecycleMixin';\nimport { loggerMixin } from '../loggerMixin';\nimport { attributesObserver } from './helpers';\n\ntype OnAttrChange = (attrName: string, value: string | null) => void;\n\nexport const observeAttributesMixin = createSingletonMixin(\n  <T extends CustomElementConstructor>(superclass: T) => {\n    const BaseClass = compose(loggerMixin, initLifecycleMixin)(superclass);\n    return class ObserveAttributesMixinClass extends BaseClass {\n      #observeMappings = {};\n\n      async init() {\n        await super.init?.();\n\n        attributesObserver(this, (attrName: string) => {\n          this.#observeMappings[attrName]?.forEach((cb: OnAttrChange) => {\n            cb(attrName, this.getAttribute(attrName));\n          });\n        });\n      }\n\n      observeAttribute(attrName: string, onAttrChange: OnAttrChange) {\n        if (!this.#observeMappings[attrName]) {\n          this.#observeMappings[attrName] = [];\n        }\n\n        const idx = this.#observeMappings[attrName].push(onAttrChange);\n\n        return () => this.#observeMappings[attrName].splice(idx, 1);\n      }\n\n      observeAttributes(attrs: string[], cb: OnAttrChange) {\n        const unobserveList = attrs.reduce((acc, attrName) => {\n          acc.push(this.observeAttribute(attrName, cb));\n\n          return acc;\n        }, []);\n\n        return () => unobserveList.forEach((unobserve) => unobserve());\n      }\n    };\n  },\n);\n","export const attributesObserver = (\n  ele: HTMLElement,\n  callback: (attrName: string) => void,\n) => {\n  // sync all attrs on init\n  Array.from(ele.attributes).forEach((attr) => callback(attr.name));\n\n  const observer = new MutationObserver((mutationsList) => {\n    mutationsList.forEach((mutation) => {\n      if (mutation.type === 'attributes') {\n        callback(mutation.attributeName);\n      }\n    });\n  });\n\n  observer.observe(ele, { attributes: true });\n};\n","import { compose } from '@descope/sdk-helpers';\nimport { observeAttributesMixin } from '../observeAttributesMixin';\nimport { initLifecycleMixin } from '../initLifecycleMixin';\nimport { loggerMixin } from '../loggerMixin';\nimport { missingAttrValidator } from './commonValidators';\n\nconst createValidateAttributesMixin =\n  (mappings: Record<string, CheckValueFn | string>) =>\n  <T extends CustomElementConstructor>(superclass: T) => {\n    const BaseClass = compose(\n      loggerMixin,\n      initLifecycleMixin,\n      observeAttributesMixin,\n    )(superclass);\n    const mappingsNames = Object.keys(mappings);\n\n    return class ValidateAttributesMixinClass extends BaseClass {\n      #handleError(attrName: string, newValue: string | null) {\n        const onError = mappings[attrName];\n\n        const error =\n          typeof onError === 'function' ? onError(attrName, newValue) : onError;\n\n        if (error) {\n          this.logger.error(error);\n        }\n      }\n\n      constructor(...args: any) {\n        super(...args);\n\n        this.observeAttributes(mappingsNames, this.#handleError.bind(this));\n      }\n\n      async init() {\n        await super.init?.();\n\n        // check attributes initial values\n        mappingsNames.forEach((attr) =>\n          this.#handleError(attr, this.getAttribute(attr)),\n        );\n      }\n    };\n  };\n\ncreateValidateAttributesMixin.missingAttrValidator = missingAttrValidator;\n\nexport type CheckValueFn = (\n  attrName: string,\n  value: string | null,\n) => false | string;\n\nexport { createValidateAttributesMixin };\n","import { createSingletonMixin, compose } from '@descope/sdk-helpers';\nimport { missingAttrValidator } from './createValidateAttributesMixin/commonValidators';\nimport { createValidateAttributesMixin } from './createValidateAttributesMixin';\n\nexport const projectIdMixin = createSingletonMixin(\n  <T extends CustomElementConstructor>(superclass: T) => {\n    const BaseClass = compose(\n      createValidateAttributesMixin({ 'project-id': missingAttrValidator }),\n    )(superclass);\n\n    return class ProjectIdMixinClass extends BaseClass {\n      get projectId() {\n        return this.getAttribute('project-id');\n      }\n    };\n  },\n);\n","import { pathJoin, compose, createSingletonMixin } from '@descope/sdk-helpers';\nimport { loggerMixin } from '../loggerMixin';\nimport { ASSETS_FOLDER, BASE_CONTENT_URL } from './constants';\nimport { projectIdMixin } from '../projectIdMixin';\n\ntype Format = 'text' | 'json';\n\nexport function getResourceUrl(\n  projectId: string,\n  filename: string,\n  assetsFolder = ASSETS_FOLDER,\n) {\n  const url = new URL(BASE_CONTENT_URL);\n  url.pathname = pathJoin(url.pathname, projectId, assetsFolder, filename);\n\n  return url.toString();\n}\n\nexport const staticResourcesMixin = createSingletonMixin(\n  <T extends CustomElementConstructor>(superclass: T) => {\n    const BaseClass = compose(loggerMixin, projectIdMixin)(superclass);\n\n    return class StaticResourcesMixinClass extends BaseClass {\n      async fetchStaticResource<F extends Format>(\n        filename: string,\n        format: F,\n      ): Promise<{\n        body: F extends 'json' ? Record<string, any> : string;\n        headers: Record<string, string>;\n      }> {\n        const resourceUrl = getResourceUrl(this.projectId, filename);\n        const res = await fetch(resourceUrl, { cache: 'default' });\n        if (!res.ok) {\n          this.logger.error(\n            `Error fetching URL ${resourceUrl} [${res.status}]`,\n          );\n        }\n\n        return {\n          body: await res[format](),\n          headers: Object.fromEntries(res.headers.entries()),\n        };\n      }\n    };\n  },\n);\n","/* eslint-disable no-underscore-dangle */\nimport { compose, createSingletonMixin } from '@descope/sdk-helpers';\nimport { staticResourcesMixin } from '../staticResourcesMixin';\nimport { CONFIG_FILENAME } from './constants';\nimport { ProjectConfiguration } from './types';\n\nexport const configMixin = createSingletonMixin(\n  <T extends CustomElementConstructor>(superclass: T) => {\n    const BaseClass = compose(staticResourcesMixin)(superclass);\n\n    return class ConfigMixinClass extends BaseClass {\n      get config() {\n        if (!this.#_configResource) {\n          this.#_configResource = this.#fetchConfig();\n        }\n\n        return this.#_configResource;\n      }\n\n      #_configResource;\n\n      #fetchConfig = async () => {\n        try {\n          const { body, headers } = await this.fetchStaticResource(\n            CONFIG_FILENAME,\n            'json',\n          );\n          return {\n            projectConfig: body as ProjectConfiguration,\n            executionContext: { geo: headers['x-geo'] },\n          };\n        } catch (e) {\n          this.logger.error(\n            'Cannot fetch config file',\n            'make sure that your projectId & flowId are correct',\n          );\n        }\n\n        return undefined;\n      };\n    };\n  },\n);\n","export const CONFIG_FILENAME = 'config.json';\n","import { compose, createSingletonMixin } from '@descope/sdk-helpers';\nimport { initLifecycleMixin } from '../initLifecycleMixin';\nimport { LogLevel, loggerMixin } from '../loggerMixin';\nimport { DebuggerMessage } from './types';\n\nexport const debuggerMixin = createSingletonMixin(\n  <T extends CustomElementConstructor>(superclass: T) =>\n    class DebuggerMixinClass extends compose(\n      initLifecycleMixin,\n      loggerMixin,\n    )(superclass) {\n      #debuggerEle:\n        | (HTMLElement & {\n            updateData: (data: DebuggerMessage | DebuggerMessage[]) => void;\n          })\n        | null;\n\n      #disableDebugger() {\n        this.#debuggerEle?.remove();\n        this.#debuggerEle = null;\n      }\n\n      async #enableDebugger() {\n        this.#debuggerEle = document.createElement(\n          'descope-debugger',\n        ) as HTMLElement & {\n          updateData: (data: DebuggerMessage | DebuggerMessage[]) => void;\n        };\n\n        Object.assign(this.#debuggerEle.style, {\n          position: 'fixed',\n          top: '0',\n          right: '0',\n          height: '100vh',\n          width: '100vw',\n          pointerEvents: 'none',\n          zIndex: 99999,\n        });\n\n        // we are importing the debugger dynamically so we won't load it when it's not needed\n        await import('./debugger-wc');\n\n        document.body.appendChild(this.#debuggerEle);\n      }\n\n      attributeChangedCallback = (\n        attrName: string,\n        oldValue: string | null,\n        newValue: string | null,\n      ) => {\n        super.attributeChangedCallback?.(attrName, oldValue, newValue);\n\n        if (attrName === 'debug') {\n          this.#handleDebugMode();\n        }\n      };\n\n      get debug() {\n        return this.getAttribute('debug') === 'true';\n      }\n\n      #handleDebugMode() {\n        if (this.debug) this.#enableDebugger();\n        else this.#disableDebugger();\n      }\n\n      onLogEvent(logLevel: LogLevel, args: any[]) {\n        super.onLogEvent?.(logLevel, args);\n        if (logLevel === 'error') {\n          this.#updateDebuggerMessages(args[0] || 'Error', args[1]);\n        }\n      }\n\n      async init() {\n        await super.init?.();\n\n        this.#handleDebugMode();\n      }\n\n      #updateDebuggerMessages(title: string, description: string) {\n        if (title) this.#debuggerEle?.updateData({ title, description });\n      }\n    },\n);\n","import { IS_LOCAL_STORAGE } from '../../constants';\n\nexport const DESCOPE_UI_SCRIPT_ID = 'load-descope-ui';\nexport const DESCOPE_UI_FALLBACK_SCRIPT_ID = 'load-descope-ui-fallback-script';\n\nexport const UI_COMPONENTS_URL_KEY = 'base.ui.components.url';\n\nexport const UI_COMPONENTS_URL =\n  (IS_LOCAL_STORAGE && localStorage.getItem(UI_COMPONENTS_URL_KEY)) ||\n  'https://static.descope.com/npm/@descope/web-components-ui@<version>/dist/umd/index.js';\n\nexport const UI_COMPONENTS_FALLBACK_URL =\n  (IS_LOCAL_STORAGE && localStorage.getItem(UI_COMPONENTS_URL_KEY)) ||\n  'https://cdn.jsdelivr.net/npm/@descope/web-components-ui@<version>/dist/umd/index.js';\n\nexport const UI_COMPONENTS_URL_VERSION_PLACEHOLDER = '<version>';\n","import { UI_COMPONENTS_URL_VERSION_PLACEHOLDER } from './constants';\n\nexport const setupScript = (id: string) => {\n  const scriptEle = document.createElement('script');\n  scriptEle.id = id;\n\n  return scriptEle;\n};\n\nexport const generateScriptUrl = (\n  urlTemplate: string,\n  componentsVersion: string,\n) =>\n  urlTemplate.replace(UI_COMPONENTS_URL_VERSION_PLACEHOLDER, componentsVersion);\n\nexport const getDescopeUiComponentsList = (template: HTMLTemplateElement) => [\n  ...Array.from(template.content.querySelectorAll('*')).reduce<Set<string>>(\n    (acc, el: Element) =>\n      el.localName.startsWith('descope-') ? acc.add(el.localName) : acc,\n    new Set(),\n  ),\n];\n","import { compose, createSingletonMixin } from '@descope/sdk-helpers';\nimport { configMixin } from '../configMixin';\nimport { loggerMixin } from '../loggerMixin';\nimport {\n  DESCOPE_UI_FALLBACK_SCRIPT_ID,\n  DESCOPE_UI_SCRIPT_ID,\n  UI_COMPONENTS_FALLBACK_URL,\n  UI_COMPONENTS_URL,\n} from './constants';\nimport {\n  generateScriptUrl,\n  getDescopeUiComponentsList,\n  setupScript,\n} from './helpers';\n\ntype ErrorCb = (error: string) => void;\ntype LoadCb = () => void;\n\nexport const descopeUiMixin = createSingletonMixin(\n  <T extends CustomElementConstructor>(superclass: T) => {\n    const BaseClass = compose(loggerMixin, configMixin)(superclass);\n\n    return class DescopeUiMixinClass extends BaseClass {\n      #errorCbsSym = Symbol('errorCbs');\n\n      #loadCbsSym = Symbol('loadCbs');\n\n      // eslint-disable-next-line class-methods-use-this\n      async #getComponentsVersion() {\n        const config = await this.config;\n        const componentsVersion = config?.projectConfig?.componentsVersion;\n\n        if (!componentsVersion) {\n          this.logger.error('Could not get components version');\n        } else {\n          this.logger.debug(`Got component version \"${componentsVersion}\"`);\n        }\n\n        return componentsVersion;\n      }\n\n      // in order to allow only single load of DescopeUI across different instances,\n      // and also allow fallback in case the components cannot be loaded from descope domain\n      // we are managing an alternative way to register to the script events\n      #exposeAlternateEvents(scriptEle: HTMLScriptElement) {\n        const errorCbsSym = this.#errorCbsSym;\n        const loadCbsSym = this.#loadCbsSym;\n\n        // eslint-disable-next-line no-param-reassign\n        scriptEle[errorCbsSym] = [];\n        // eslint-disable-next-line no-param-reassign\n        scriptEle[loadCbsSym] = [];\n\n        Object.defineProperty(scriptEle, 'onerror', {\n          set(cb: ErrorCb) {\n            scriptEle[errorCbsSym].push(cb);\n          },\n        });\n\n        Object.defineProperty(scriptEle, 'onload', {\n          set(cb: LoadCb) {\n            scriptEle[loadCbsSym].push(cb);\n          },\n        });\n      }\n\n      async #handleFallbackScript(errorCbs: ErrorCb[], loadCbs: LoadCb[]) {\n        this.logger.debug('Trying to load DescopeUI from a fallback URL');\n        const fallbackScriptEle = setupScript(DESCOPE_UI_FALLBACK_SCRIPT_ID);\n        document.body.append(fallbackScriptEle);\n\n        fallbackScriptEle.addEventListener('error', () => {\n          errorCbs.forEach((cb: ErrorCb) =>\n            cb(\n              `Cannot load DescopeUI from fallback URL, Make sure this URL is valid and return the correct script: \"${fallbackScriptEle.src}\"`,\n            ),\n          );\n        });\n\n        fallbackScriptEle.addEventListener('load', () => {\n          loadCbs.forEach((cb: LoadCb) => cb());\n        });\n\n        fallbackScriptEle.src = generateScriptUrl(\n          UI_COMPONENTS_FALLBACK_URL,\n          await this.#getComponentsVersion(),\n        );\n      }\n\n      #registerEvents(scriptEle: HTMLScriptElement) {\n        scriptEle.addEventListener('error', () => {\n          scriptEle[this.#errorCbsSym].forEach((cb: ErrorCb) =>\n            cb(\n              `Cannot load DescopeUI from main URL, Make sure this URL is valid and return the correct script: \"${scriptEle.src}\"`,\n            ),\n          );\n\n          // in case we could not load DescopeUI from the main URL, we are trying to load it from a fallback URL\n          this.#handleFallbackScript(\n            scriptEle[this.#errorCbsSym],\n            scriptEle[this.#loadCbsSym],\n          );\n        });\n\n        scriptEle.addEventListener('load', () => {\n          scriptEle[this.#loadCbsSym].forEach((cb: LoadCb) => cb());\n        });\n      }\n\n      async #getDescopeUiLoadingScript() {\n        if (!document.querySelector(`script#${DESCOPE_UI_SCRIPT_ID}`)) {\n          this.logger.debug(\n            'DescopeUI loading script does not exist, creating it',\n            this,\n          );\n\n          const scriptEle = setupScript(DESCOPE_UI_SCRIPT_ID);\n\n          document.body.append(scriptEle);\n\n          this.#exposeAlternateEvents(scriptEle);\n          this.#registerEvents(scriptEle);\n\n          scriptEle.src = generateScriptUrl(\n            UI_COMPONENTS_URL,\n            await this.#getComponentsVersion(),\n          );\n        } else {\n          this.logger.debug('DescopeUI loading script already exists', this);\n        }\n\n        return document.getElementById(DESCOPE_UI_SCRIPT_ID);\n      }\n\n      #descopeUi: Promise<any>;\n\n      get descopeUi() {\n        if (!this.#descopeUi) {\n          this.#descopeUi = this.#getDescopeUi();\n        }\n\n        return this.#descopeUi;\n      }\n\n      async #loadDescopeUiComponent(componentName: string) {\n        const isComponentAlreadyDefined = !!customElements.get(componentName);\n\n        if (isComponentAlreadyDefined) {\n          this.logger.debug(\n            `Loading component \"${componentName}\" is skipped as it is already defined`,\n          );\n          return undefined;\n        }\n\n        const descopeUI = await this.descopeUi;\n\n        if (!descopeUI[componentName]) {\n          this.logger.error(\n            `Cannot load UI component \"${componentName}\"`,\n            `Descope UI does not have a component named \"${componentName}\", available components are: \"${Object.keys(\n              descopeUI,\n            ).join(', ')}\"`,\n          );\n          return undefined;\n        }\n\n        try {\n          // eslint-disable-next-line @typescript-eslint/return-await\n          return await descopeUI[componentName]();\n        } catch (e) {\n          // this error is thrown when trying to register a component which is already registered\n          // when running 2 flows on the same page, it might happen that the register fn is called twice\n          // in case it happens, we are silently ignore the error\n          if (e.name === 'NotSupportedError') {\n            // eslint-disable-next-line no-console\n            console.debug(\n              `Encountered an error while attempting to define the \"${componentName}\" component, it is likely that this component is already defined`,\n            );\n          } else {\n            throw e;\n          }\n        }\n\n        return undefined;\n      }\n\n      async loadDescopeUiComponents(\n        templateOrComponentNames: HTMLTemplateElement | string[],\n      ) {\n        const descopeUiComponentsList = Array.isArray(templateOrComponentNames)\n          ? templateOrComponentNames\n          : getDescopeUiComponentsList(templateOrComponentNames);\n\n        return Promise.all(\n          descopeUiComponentsList.map((componentName: string) =>\n            this.#loadDescopeUiComponent(componentName),\n          ),\n        );\n      }\n\n      #getDescopeUi() {\n        return new Promise((res) => {\n          if (globalThis.DescopeUI) {\n            res(globalThis.DescopeUI);\n          }\n\n          this.#getDescopeUiLoadingScript().then((scriptEle) => {\n            // eslint-disable-next-line no-param-reassign\n            scriptEle!.onerror = this.logger.error;\n            // eslint-disable-next-line no-param-reassign\n            scriptEle!.onload = () => {\n              this.logger.debug('DescopeUI was loaded');\n              res(globalThis.DescopeUI);\n            };\n\n            // in case the load event was dispatched before we registered, we have a fallback\n            setTimeout(() => {\n              if (globalThis.DescopeUI) {\n                res(globalThis.DescopeUI);\n              }\n            });\n          });\n        });\n      }\n    };\n  },\n);\n","import { createSingletonMixin } from '@descope/sdk-helpers';\n\nconst CONTENT_ROOT_ID = 'content-root';\nconst ROOT_ID = 'root';\n\nexport const initElementMixin = createSingletonMixin(\n  <T extends CustomElementConstructor>(superclass: T) =>\n    class InitElementMixinClass extends superclass {\n      // the content of contentRootElement is being replaced dynamically\n      // do not place content which is not dynamic inside\n      contentRootElement: HTMLElement;\n\n      rootElement: HTMLElement;\n\n      constructor(...rest) {\n        super(...rest);\n\n        this.attachShadow({ mode: 'open' }).innerHTML = `\n\n          <style>\n            #${ROOT_ID}, #${CONTENT_ROOT_ID} {\n              height: 100%;\n            }\n            #${ROOT_ID} {\n              position: relative;\n              height: fit-content;\n            }\n          </style>\n          <div id=\"${ROOT_ID}\">\n            <div id=\"${CONTENT_ROOT_ID}\"></div>\n          </div>\n          `;\n\n        this.contentRootElement =\n          this.shadowRoot?.getElementById(CONTENT_ROOT_ID)!;\n        this.rootElement = this.shadowRoot?.getElementById(ROOT_ID)!;\n      }\n    },\n);\n","export const MODAL_ELE_TAG = 'descope-modal';\n","// eslint-disable-next-line max-classes-per-file\nimport { createSingletonMixin, compose } from '@descope/sdk-helpers';\nimport { initLifecycleMixin } from '../initLifecycleMixin';\nimport { initElementMixin } from '../initElementMixin';\nimport { descopeUiMixin } from '../descopeUiMixin';\nimport { createModalEle } from './helpers';\nimport { MODAL_ELE_TAG } from './constants';\nimport { ModalDriver } from '@descope/sdk-component-drivers';\n\nexport const modalMixin = createSingletonMixin(\n  <T extends CustomElementConstructor>(superclass: T) => {\n    const BaseClass = compose(\n      initLifecycleMixin,\n      initElementMixin,\n      descopeUiMixin,\n    )(superclass);\n    return class ModalMixinClass extends BaseClass {\n      #ModalDriverWrapper = (() => {\n        const loadDescopeUiComponents = this.loadDescopeUiComponents.bind(this);\n        return class ModalDriverWrapper extends ModalDriver {\n          setContent(template: HTMLTemplateElement) {\n            loadDescopeUiComponents(template);\n            super.setContent(template);\n          }\n        };\n      })();\n\n      createModal(config?: Record<string, string>) {\n        const baseConfig = {};\n\n        const modal = createModalEle({\n          ...baseConfig,\n          ...config,\n        });\n\n        this.rootElement.append(modal);\n\n        return new this.#ModalDriverWrapper(modal, {\n          logger: this.logger,\n        }) as ModalDriver;\n      }\n\n      async init() {\n        this.loadDescopeUiComponents([MODAL_ELE_TAG]);\n        await super.init?.();\n      }\n    };\n  },\n);\n","import { MODAL_ELE_TAG } from './constants';\n\nexport const createModalEle = (config = {}) => {\n  const modal = document.createElement(MODAL_ELE_TAG);\n  Object.keys(config).forEach((key) => {\n    modal.setAttribute(key, config[key]);\n  });\n\n  return modal;\n};\n","export const NOTIFICATION_ELE_TAG = 'descope-notification';\n","// eslint-disable-next-line max-classes-per-file\nimport {\n  createSingletonMixin,\n  compose,\n  createTemplate,\n} from '@descope/sdk-helpers';\nimport { initLifecycleMixin } from '../initLifecycleMixin';\nimport { initElementMixin } from '../initElementMixin';\nimport { descopeUiMixin } from '../descopeUiMixin';\nimport { createNotificationEle } from './helpers';\nimport { NOTIFICATION_ELE_TAG } from './constants';\nimport { NotificationDriver } from '@descope/sdk-component-drivers';\n\nexport const notificationsMixin = createSingletonMixin(\n  <T extends CustomElementConstructor>(superclass: T) => {\n    const BaseClass = compose(\n      initLifecycleMixin,\n      initElementMixin,\n      descopeUiMixin,\n    )(superclass);\n    return class NotificationsMixinClass extends BaseClass {\n      #NotificationDriverWrapper = (() => {\n        const loadDescopeUiComponents = this.loadDescopeUiComponents.bind(this);\n        return class NotificationDriverWrapper extends NotificationDriver {\n          setContent(templateOrString: HTMLTemplateElement | string) {\n            const template =\n              typeof templateOrString === 'string'\n                ? createTemplate(templateOrString)\n                : templateOrString;\n\n            loadDescopeUiComponents(template);\n            super.setContent(template);\n          }\n        };\n      })();\n\n      createNotification(\n        config?: {\n          mode: 'success' | 'error';\n          duration: number;\n          'has-close-button'?: boolean;\n          position?:\n            | 'top-stretch'\n            | 'top-start'\n            | 'top-center'\n            | 'top-end'\n            | 'middle'\n            | 'bottom-start'\n            | 'bottom-center'\n            | 'bottom-end'\n            | 'bottom-stretch';\n          size: 'xs' | 'sm' | 'md' | 'lg';\n          bordered?: boolean;\n        } & {\n          [key: string]: string | boolean | number;\n        },\n      ) {\n        const baseConfig = {};\n\n        const notification = createNotificationEle({\n          ...baseConfig,\n          ...config,\n        });\n\n        this.rootElement.append(notification);\n\n        return new this.#NotificationDriverWrapper(notification, {\n          logger: this.logger,\n        });\n      }\n\n      async init() {\n        await super.init?.();\n        this.loadDescopeUiComponents([NOTIFICATION_ELE_TAG]);\n      }\n    };\n  },\n);\n","import { NOTIFICATION_ELE_TAG } from './constants';\n\nexport const createNotificationEle = (config = {}) => {\n  const notification = document.createElement(NOTIFICATION_ELE_TAG);\n  Object.keys(config).forEach((key) => {\n    notification.setAttribute(key, config[key]);\n  });\n\n  return notification;\n};\n","/* eslint-disable no-underscore-dangle */\nimport { createSingletonMixin, compose } from '@descope/sdk-helpers';\nimport { configMixin } from '../configMixin';\nimport { createValidateAttributesMixin } from '../createValidateAttributesMixin';\nimport { descopeUiMixin } from '../descopeUiMixin';\nimport { initElementMixin } from '../initElementMixin';\nimport { initLifecycleMixin } from '../initLifecycleMixin';\nimport { staticResourcesMixin } from '../staticResourcesMixin';\nimport { THEME_FILENAME } from './constants';\nimport { loadFont } from './helpers';\nimport { observeAttributesMixin } from '../observeAttributesMixin';\n\nconst themeValidation = (_: string, theme: string | null) =>\n  (theme || false) &&\n  theme !== 'light' &&\n  theme !== 'dark' &&\n  'Supported theme values are \"light\", \"dark\", or leave empty for using the OS theme';\n\nexport type ThemeOptions = 'light' | 'dark' | 'os';\n\nexport const themeMixin = createSingletonMixin(\n  <T extends CustomElementConstructor>(superclass: T) => {\n    const BaseClass = compose(\n      createValidateAttributesMixin({ theme: themeValidation }),\n      staticResourcesMixin,\n      initLifecycleMixin,\n      descopeUiMixin,\n      configMixin,\n      initElementMixin,\n      observeAttributesMixin,\n    )(superclass);\n\n    return class ThemeMixinClass extends BaseClass {\n      get theme(): ThemeOptions {\n        const theme = this.getAttribute('theme') as ThemeOptions | null;\n\n        if (theme === 'os') {\n          const isOsDark =\n            window.matchMedia &&\n            window.matchMedia?.('(prefers-color-scheme: dark)')?.matches;\n\n          return isOsDark ? 'dark' : 'light';\n        }\n\n        return theme || 'light';\n      }\n\n      #_themeResource: Promise<void | Record<string, any>>;\n\n      async #fetchTheme() {\n        try {\n          const { body } = await this.fetchStaticResource(\n            THEME_FILENAME,\n            'json',\n          );\n\n          return body;\n        } catch (e) {\n          this.logger.error(\n            'Cannot fetch theme file',\n            'make sure that your projectId & flowId are correct',\n          );\n        }\n\n        return undefined;\n      }\n\n      get #themeResource() {\n        if (!this.#_themeResource) {\n          this.#_themeResource = this.#fetchTheme();\n          this.#_themeResource.then((theme) =>\n            this.logger.debug('Fetched theme', theme),\n          );\n        }\n\n        // eslint-disable-next-line no-underscore-dangle\n        return this.#_themeResource;\n      }\n\n      async #loadGlobalStyle() {\n        const theme = await this.#themeResource;\n        if (!theme) return;\n\n        const styleEle = document.createElement('style');\n        styleEle.innerText =\n          (theme?.light?.globals || '') + (theme?.dark?.globals || '');\n\n        this.shadowRoot!.appendChild(styleEle);\n      }\n\n      async #loadComponentsStyle() {\n        const theme = { ...(await this.#themeResource) } as Record<string, any>;\n        if (!theme) return;\n\n        const descopeUi = await this.descopeUi;\n        if (descopeUi?.componentsThemeManager) {\n          descopeUi.componentsThemeManager.themes = {\n            light: theme?.light?.components,\n            dark: theme?.dark?.components,\n          };\n        }\n      }\n\n      async #loadFonts() {\n        const { projectConfig } = await this.config;\n        const fonts: Record<string, { url?: string }> | undefined =\n          projectConfig?.cssTemplate?.[this.theme]?.fonts;\n        if (fonts) {\n          Object.values(fonts).forEach((font) => {\n            if (font.url) {\n              this.logger.debug(`Loading font from URL \"${font.url}\"`);\n              loadFont(font.url);\n            }\n          });\n        }\n      }\n\n      async #applyTheme() {\n        this.rootElement.setAttribute('data-theme', this.theme);\n        const descopeUi = await this.descopeUi;\n        if (descopeUi?.componentsThemeManager) {\n          descopeUi.componentsThemeManager.currentThemeName = this.theme;\n        }\n      }\n\n      async init() {\n        await super.init?.();\n\n        this.#loadGlobalStyle();\n        this.#loadComponentsStyle();\n        this.#loadFonts();\n        this.#applyTheme();\n\n        this.observeAttributes(['theme'], () => {\n          this.#loadFonts();\n          this.#applyTheme();\n        });\n      }\n    };\n  },\n);\n","// Those files are saved on a new folder to prevent breaking changes\nexport const THEME_FILENAME = 'theme.json';\nexport const CONFIG_FILENAME = 'config.json';\n","export const loadFont = (url: string) => {\n  const font = document.createElement('link');\n  font.href = url;\n  font.rel = 'stylesheet';\n  document.head.appendChild(font);\n};\n","/* eslint-disable no-param-reassign */\nimport { compose, createSingletonMixin } from '@descope/sdk-helpers';\nimport type {\n  CreateSliceOptions,\n  Draft,\n  SliceCaseReducers,\n  SliceSelectors,\n} from '@reduxjs/toolkit';\nimport { configureStore, createSlice, unwrapResult } from '@reduxjs/toolkit';\nimport type { Unsubscribe } from 'redux'; //  workaround for https://github.com/microsoft/TypeScript/issues/42873\nimport { loggerMixin } from './loggerMixin';\n\nexport const createStateManagementMixin = <\n  State,\n  CaseReducers extends SliceCaseReducers<State>,\n  Name extends string,\n  Selectors extends SliceSelectors<State>,\n  ReducerPath extends string = Name,\n  AsyncActions extends Record<string, any> = {},\n>(\n  options: CreateSliceOptions<\n    State,\n    CaseReducers,\n    Name,\n    ReducerPath,\n    Selectors\n  > & { asyncActions?: AsyncActions },\n) =>\n  createSingletonMixin(<T extends CustomElementConstructor>(superclass: T) => {\n    const slice = createSlice(options);\n\n    const allActions = { ...slice.actions, ...options.asyncActions };\n\n    return class StateManagementMixinClass extends compose(loggerMixin)(\n      superclass,\n    ) {\n      actions: typeof allActions;\n\n      subscribe: <SelectorR = State extends Draft<infer S> ? S : State>(\n        cb: (state: SelectorR) => void,\n        selector?: (state: State) => SelectorR,\n      ) => Unsubscribe;\n\n      constructor(...args: any) {\n        super(...args);\n\n        const store = configureStore({\n          reducer: slice.reducer,\n          middleware: (getDefaultMiddleware) =>\n            getDefaultMiddleware({\n              thunk: {\n                extraArgument: this,\n              },\n              serializableCheck: false,\n            }),\n          // change to true if we want to debug redux\n          devTools: false,\n        });\n\n        const wrapAction = <F extends (...args: any[]) => any>(action: F) =>\n          (async (...arg: any[]) => {\n            const result = await store.dispatch(action(...arg));\n\n            // we want to unwrap the result, so in case of an error we can log it\n            try {\n              unwrapResult(result);\n            } catch (e) {\n              this.logger.error(e.message, result.type, e.stack);\n            }\n\n            return result;\n          }) as F;\n\n        const actions = Object.keys(allActions).reduce((acc, actionName) => {\n          acc[actionName] = wrapAction(allActions[actionName]);\n\n          return acc;\n        }, {}) as typeof slice.actions & typeof options.asyncActions;\n\n        this.actions = actions;\n\n        this.subscribe = (cb, selector = (state) => state as any) =>\n          store.subscribe(() => cb(selector(store.getState())));\n      }\n    };\n  });\n","import { createSingletonMixin } from '@descope/sdk-helpers';\nimport { loggerMixin } from './loggerMixin';\n\ntype ElementOrEmpty = Element | null | undefined;\n\nexport const formMixin = createSingletonMixin(\n  <T extends CustomElementConstructor>(superclass: T) =>\n    class FormMixinClass extends loggerMixin(superclass) {\n      validateForm(rootEle: ElementOrEmpty) {\n        return this.getFormInputs(rootEle).every((input: HTMLInputElement) => {\n          input.reportValidity?.();\n          return input.checkValidity?.();\n        });\n      }\n\n      // eslint-disable-next-line class-methods-use-this\n      getFormInputs(rootEle: ElementOrEmpty): HTMLInputElement[] {\n        if (!rootEle) {\n          this.logger.debug(\n            'cannot get form inputs, no root element was received',\n          );\n          return [];\n        }\n        return Array.from(\n          rootEle.querySelectorAll('[name]'),\n        ) as HTMLInputElement[];\n      }\n\n      getFormData(rootEle: ElementOrEmpty): any {\n        return this.getFormInputs(rootEle).reduce(\n          (acc, input) =>\n            Object.assign(acc, { [input.getAttribute('name')!]: input.value }),\n          {},\n        );\n      }\n\n      setFormData(rootEle: ElementOrEmpty, data: Record<string, any>) {\n        this.getFormInputs(rootEle).forEach((input) => {\n          // eslint-disable-next-line no-prototype-builtins\n          if (data.hasOwnProperty(input.getAttribute('name')!)) {\n            // eslint-disable-next-line no-param-reassign\n            input.value = data[input.getAttribute('name')!];\n          }\n        });\n      }\n\n      resetFormData(rootEle: ElementOrEmpty) {\n        this.getFormInputs(rootEle).forEach((input) => {\n          // eslint-disable-next-line no-param-reassign\n          input.value = '';\n          input.checked = false;\n        });\n      }\n\n      getFormFieldNames(rootEle: ElementOrEmpty) {\n        return this.getFormInputs(rootEle).map((ele) => ele.name);\n      }\n\n      disableFormField(rootEle: ElementOrEmpty, name: string) {\n        this.getFormInputs(rootEle)\n          .find((input) => input.name === name)\n          ?.setAttribute('disabled', 'true');\n      }\n\n      removeFormField(rootEle: ElementOrEmpty, name: string) {\n        this.getFormInputs(rootEle)\n          .find((input) => input.name === name)\n          ?.remove();\n      }\n    },\n);\n","import { Boundaries } from './types';\n\ntype Target = {\n  w: number;\n  h: number;\n  offsetWidth: number;\n  offsetHeight: number;\n};\n\nexport const limitCoordinateToScreenBoundaries = (\n  ele: HTMLElement,\n  x: number,\n  y: number,\n  boundaries: Boundaries = {},\n) => [\n  Math.min(\n    Math.max(\n      x,\n      (boundaries.left === 'all' ? ele.offsetWidth : boundaries.left ?? 0) -\n        ele.offsetWidth,\n    ),\n    window.innerWidth -\n      (boundaries.right === 'all' ? ele.offsetWidth : boundaries.right ?? 0),\n  ),\n  Math.min(\n    Math.max(\n      y,\n      (boundaries.top === 'all' ? ele.offsetHeight : boundaries.top ?? 0) -\n        ele.offsetHeight,\n    ),\n    window.innerHeight -\n      (boundaries.bottom === 'all' ? ele.offsetHeight : boundaries.bottom ?? 0),\n  ),\n];\n\nexport const dragElement = (\n  ele: HTMLElement,\n  triggerEle?: HTMLElement,\n  keepVisible?: Boundaries,\n) => {\n  let deltaX = 0;\n  let deltaY = 0;\n  let currentX = 0;\n  let currentY = 0;\n\n  function elementDrag(e: MouseEvent) {\n    e.preventDefault();\n    // calculate the new cursor position:\n    deltaX = currentX - e.clientX;\n    deltaY = currentY - e.clientY;\n    currentX = e.clientX;\n    currentY = e.clientY;\n    // set the element's new position:\n    const [left, top] = limitCoordinateToScreenBoundaries(\n      ele,\n      ele.offsetLeft - deltaX,\n      ele.offsetTop - deltaY,\n      keepVisible,\n    );\n    // eslint-disable-next-line no-param-reassign\n    ele.style.top = `${top}px`;\n    // eslint-disable-next-line no-param-reassign\n    ele.style.left = `${left}px`;\n  }\n\n  function closeDragElement() {\n    // stop moving when mouse button is released:\n    document.onmouseup = null;\n    document.onmousemove = null;\n  }\n\n  function dragMouseDown(e: MouseEvent) {\n    e.preventDefault();\n    // get the mouse cursor position at startup:\n    currentX = e.clientX;\n    currentY = e.clientY;\n    document.onmouseup = closeDragElement;\n    // call a function whenever the cursor moves:\n    document.onmousemove = elementDrag;\n  }\n\n  if (triggerEle) {\n    // if provided, the triggerEle is where you move the div from\n    // eslint-disable-next-line no-param-reassign\n    triggerEle.onmousedown = dragMouseDown;\n  } else {\n    // otherwise, move the DIV from anywhere inside the DIV:\n\n    // eslint-disable-next-line no-param-reassign\n    ele.onmousedown = dragMouseDown;\n  }\n};\n\nexport const addOnResize = (ele: HTMLElement) => {\n  // eslint-disable-next-line no-param-reassign\n  ele.onmousemove = (e) => {\n    // eslint-disable-next-line prefer-destructuring\n    const target: Target = e.target! as EventTarget & Target;\n    if (\n      (target.w && target.w !== target.offsetWidth) ||\n      (target.h && target.h !== target.offsetHeight)\n    ) {\n      ele.onresize?.(e);\n    }\n    target.w = target.offsetWidth;\n    target.h = target.offsetHeight;\n  };\n};\n","/* eslint-disable no-param-reassign */\nimport { State } from '@descope/sdk-helpers';\nimport {\n  addOnResize,\n  dragElement,\n  limitCoordinateToScreenBoundaries,\n} from './helpers';\nimport { DebuggerMessage } from './types';\n\nconst INITIAL_POS_THRESHOLD = 32;\nconst INITIAL_WIDTH = 300;\nconst INITIAL_HEIGHT = 200;\nconst MIN_SIZE = 200;\n\nconst template = document.createElement('template');\ntemplate.innerHTML = `\n<style>\n  .debugger {\n    width: ${INITIAL_WIDTH}px;\n    height: ${INITIAL_HEIGHT}px;\n    background-color: #FAFAFA;\n    position: fixed;\n    font-family: \"Helvetica Neue\", sans-serif;\n    box-shadow: rgba(0, 0, 0, 0.1) 0px 5px 10px;\n    border-radius: 8px;\n    overflow: hidden;\n    border: 1px solid lightgrey;\n    pointer-events: initial;\n    display: flex;\n    flex-direction: column;\n    min-width: ${MIN_SIZE}px;\n    max-width: 600px;\n    max-height: calc(100% - ${INITIAL_POS_THRESHOLD * 2}px);\n    min-height: ${MIN_SIZE}px;\n    resize: both;\n  }\n\n  .header {\n    padding: 8px 16px;\n    display: flex;\n    align-items: center;\n    background-color: #EEEEEE;\n    cursor: move;\n    border-bottom: 1px solid #e0e0e0;\n  }\n\n  .content {\n    font-size: 14px;\n    flex-grow: 1;\n    overflow: auto;\n  }\n\n  .msg {\n    border-bottom: 1px solid lightgrey;\n    padding: 8px 16px;\n    display: flex;\n    gap: 5px;\n    background-color: #FAFAFA;\n  }\n\n  .msg.collapsible {\n    cursor: pointer;\n  }\n\n  .empty-state {\n    padding: 8px 16px;\n    background-color: #FAFAFA;\n  }\n\n\n  .msg.collapsible:not(.collapsed) {\n    background-color: #F5F5F5;\n  }\n\n  .msg_title {\n    padding-bottom: 5px;\n    display: flex;\n    gap: 8px;\n    font-weight: 500;\n  }\n\n  .msg svg {\n    padding: 1px;\n    flex-shrink: 0;\n    margin-top: -2px;\n  }\n\n  .msg_content {\n    overflow: hidden;\n    flex-grow: 1;\n    margin-right:5px;\n  }\n\n  .msg_desc {\n    color: #646464;\n    cursor: initial;\n    word-wrap: break-word;\n  }\n\n  .msg.collapsed .msg_desc {\n    overflow: hidden;\n    text-overflow: ellipsis;\n    white-space: nowrap;\n  }\n\n  .msg.collapsible.collapsed .chevron {\n    transform: rotate(-45deg) translateX(-2px);\n  }\n\n  .msg.collapsible .chevron {\n    content: \"\";\n    width:6px;\n    height:6px;\n    border-bottom: 2px solid grey;\n    border-right: 2px solid grey;\n    transform: rotate(45deg) translateX(-1px);\n    margin: 5px;\n    flex-shrink:0;\n  }\n</style>\n\n<div style=\"top:${INITIAL_POS_THRESHOLD}px; left:${\n  window.innerWidth - INITIAL_WIDTH - INITIAL_POS_THRESHOLD\n}px;\" class=\"debugger\">\n  <div class=\"header\">\n    <span>Debugger messages</span>\n  </div>\n  <div class=\"content\">\n    <div class=\"empty-state\">\n      No errors detected 👀\n    </div>\n  </div>\n</div>\n`;\n\nconst icon = `<svg width=\"18\" height=\"18\" viewBox=\"0 0 18 18\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M5.99984 13.167L8.99984 10.167L11.9998 13.167L13.1665 12.0003L10.1665 9.00033L13.1665 6.00033L11.9998 4.83366L8.99984 7.83366L5.99984 4.83366L4.83317 6.00033L7.83317 9.00033L4.83317 12.0003L5.99984 13.167ZM8.99984 17.3337C7.84706 17.3337 6.76373 17.1148 5.74984 16.677C4.73595 16.2398 3.854 15.6462 3.104 14.8962C2.354 14.1462 1.76039 13.2642 1.32317 12.2503C0.885393 11.2364 0.666504 10.1531 0.666504 9.00033C0.666504 7.84755 0.885393 6.76421 1.32317 5.75033C1.76039 4.73644 2.354 3.85449 3.104 3.10449C3.854 2.35449 4.73595 1.7606 5.74984 1.32283C6.76373 0.885603 7.84706 0.666992 8.99984 0.666992C10.1526 0.666992 11.2359 0.885603 12.2498 1.32283C13.2637 1.7606 14.1457 2.35449 14.8957 3.10449C15.6457 3.85449 16.2393 4.73644 16.6765 5.75033C17.1143 6.76421 17.3332 7.84755 17.3332 9.00033C17.3332 10.1531 17.1143 11.2364 16.6765 12.2503C16.2393 13.2642 15.6457 14.1462 14.8957 14.8962C14.1457 15.6462 13.2637 16.2398 12.2498 16.677C11.2359 17.1148 10.1526 17.3337 8.99984 17.3337ZM8.99984 15.667C10.8609 15.667 12.4373 15.0212 13.729 13.7295C15.0207 12.4378 15.6665 10.8614 15.6665 9.00033C15.6665 7.13921 15.0207 5.56283 13.729 4.27116C12.4373 2.97949 10.8609 2.33366 8.99984 2.33366C7.13873 2.33366 5.56234 2.97949 4.27067 4.27116C2.979 5.56283 2.33317 7.13921 2.33317 9.00033C2.33317 10.8614 2.979 12.4378 4.27067 13.7295C5.56234 15.0212 7.13873 15.667 8.99984 15.667Z\" fill=\"#ED404A\"/>\n</svg>\n`;\n\ntype MessagesState = { messages: DebuggerMessage[] };\n\nclass Debugger extends HTMLElement {\n  #messagesState = new State<MessagesState>({ messages: [] });\n\n  #rootEle: HTMLDivElement;\n\n  #contentEle: HTMLDivElement;\n\n  #headerEle: HTMLDivElement;\n\n  #eventsCbRefs = {\n    resize: this.#onWindowResize.bind(this),\n  };\n\n  constructor() {\n    super();\n\n    this.attachShadow({ mode: 'open' });\n    this.shadowRoot?.appendChild(template.content.cloneNode(true));\n\n    this.#rootEle =\n      this.shadowRoot!.querySelector<HTMLDivElement>('.debugger')!;\n    this.#contentEle = this.#rootEle.querySelector<HTMLDivElement>('.content')!;\n    this.#headerEle = this.#rootEle.querySelector<HTMLDivElement>('.header')!;\n  }\n\n  updateData(data: DebuggerMessage | DebuggerMessage[]) {\n    this.#messagesState.update((state) => ({\n      messages: state.messages.concat(data),\n    }));\n  }\n\n  #onNewMessages(data: MessagesState) {\n    this.#renderMessages(data);\n    this.#setCollapsibleMessages();\n  }\n\n  #renderMessages(data: MessagesState) {\n    this.#contentEle.innerHTML = data.messages\n      .map(\n        (message) => `\n    <div class=\"msg\">\n      ${icon}\n      <div class=\"msg_content\">\n        <div class=\"msg_title\">\n          ${message.title}\n        </div>\n        <div class=\"msg_desc\">\n          ${message.description || ''}\n        </div>\n      </div>\n      <div class=\"chevron\"></div>\n    </div>\n  `,\n      )\n      .join('');\n  }\n\n  #setCollapsibleMessages() {\n    this.#contentEle.querySelectorAll('.msg').forEach((element: Element) => {\n      const ele = element as HTMLElement;\n      const descEle = ele.querySelector('.msg_desc');\n      const lineHeight = 20;\n      const isScroll = descEle!.scrollWidth > descEle!.clientWidth;\n      const isMultiLine = descEle!.clientHeight > lineHeight;\n      const isCollapsible = isScroll || isMultiLine;\n\n      if (isCollapsible) {\n        ele.classList.add('collapsible');\n        ele.onclick = (e: MouseEvent) => {\n          // message description should not toggle collapse\n          if (!(e.target as HTMLElement).classList.contains('msg_desc')) {\n            ele.classList.toggle('collapsed');\n          }\n        };\n      } else {\n        ele.classList.remove('collapsible');\n        ele.onclick = null;\n      }\n    });\n  }\n\n  #onWindowResize() {\n    // when window is resizing we want to make sure debugger is still visible\n    const [left, top] = limitCoordinateToScreenBoundaries(\n      this.#rootEle,\n      Number.parseInt(this.#rootEle.style.left, 10),\n      Number.parseInt(this.#rootEle.style.top, 10),\n      { top: 'all', bottom: 100, left: 100, right: 100 },\n    );\n    this.#rootEle.style.top = `${top}px`;\n    this.#rootEle.style.left = `${left}px`;\n  }\n\n  connectedCallback() {\n    dragElement(this.#rootEle, this.#headerEle, {\n      top: 'all',\n      bottom: 100,\n      left: 100,\n      right: 100,\n    });\n\n    window.addEventListener('resize', this.#eventsCbRefs.resize);\n\n    addOnResize(this.#rootEle);\n    this.#rootEle.onresize = this.#setCollapsibleMessages.bind(this);\n\n    this.#messagesState.subscribe(this.#onNewMessages.bind(this));\n  }\n\n  disconnectedCallback() {\n    this.#messagesState.unsubscribeAll();\n    window.removeEventListener('resize', this.#eventsCbRefs.resize);\n  }\n}\n\nif (!customElements.get('descope-debugger')) {\n  customElements.define('descope-debugger', Debugger);\n}\n\nexport default Debugger;\n","// This file is a workaround for a bug in web browsers' \"native\"\n// ES6 importing system which is uncapable of importing \"*.json\" files.\n// https://github.com/catamphetamine/libphonenumber-js/issues/239\nexport default {\"version\":4,\"country_calling_codes\":{\"1\":[\"US\",\"AG\",\"AI\",\"AS\",\"BB\",\"BM\",\"BS\",\"CA\",\"DM\",\"DO\",\"GD\",\"GU\",\"JM\",\"KN\",\"KY\",\"LC\",\"MP\",\"MS\",\"PR\",\"SX\",\"TC\",\"TT\",\"VC\",\"VG\",\"VI\"],\"7\":[\"RU\",\"KZ\"],\"20\":[\"EG\"],\"27\":[\"ZA\"],\"30\":[\"GR\"],\"31\":[\"NL\"],\"32\":[\"BE\"],\"33\":[\"FR\"],\"34\":[\"ES\"],\"36\":[\"HU\"],\"39\":[\"IT\",\"VA\"],\"40\":[\"RO\"],\"41\":[\"CH\"],\"43\":[\"AT\"],\"44\":[\"GB\",\"GG\",\"IM\",\"JE\"],\"45\":[\"DK\"],\"46\":[\"SE\"],\"47\":[\"NO\",\"SJ\"],\"48\":[\"PL\"],\"49\":[\"DE\"],\"51\":[\"PE\"],\"52\":[\"MX\"],\"53\":[\"CU\"],\"54\":[\"AR\"],\"55\":[\"BR\"],\"56\":[\"CL\"],\"57\":[\"CO\"],\"58\":[\"VE\"],\"60\":[\"MY\"],\"61\":[\"AU\",\"CC\",\"CX\"],\"62\":[\"ID\"],\"63\":[\"PH\"],\"64\":[\"NZ\"],\"65\":[\"SG\"],\"66\":[\"TH\"],\"81\":[\"JP\"],\"82\":[\"KR\"],\"84\":[\"VN\"],\"86\":[\"CN\"],\"90\":[\"TR\"],\"91\":[\"IN\"],\"92\":[\"PK\"],\"93\":[\"AF\"],\"94\":[\"LK\"],\"95\":[\"MM\"],\"98\":[\"IR\"],\"211\":[\"SS\"],\"212\":[\"MA\",\"EH\"],\"213\":[\"DZ\"],\"216\":[\"TN\"],\"218\":[\"LY\"],\"220\":[\"GM\"],\"221\":[\"SN\"],\"222\":[\"MR\"],\"223\":[\"ML\"],\"224\":[\"GN\"],\"225\":[\"CI\"],\"226\":[\"BF\"],\"227\":[\"NE\"],\"228\":[\"TG\"],\"229\":[\"BJ\"],\"230\":[\"MU\"],\"231\":[\"LR\"],\"232\":[\"SL\"],\"233\":[\"GH\"],\"234\":[\"NG\"],\"235\":[\"TD\"],\"236\":[\"CF\"],\"237\":[\"CM\"],\"238\":[\"CV\"],\"239\":[\"ST\"],\"240\":[\"GQ\"],\"241\":[\"GA\"],\"242\":[\"CG\"],\"243\":[\"CD\"],\"244\":[\"AO\"],\"245\":[\"GW\"],\"246\":[\"IO\"],\"247\":[\"AC\"],\"248\":[\"SC\"],\"249\":[\"SD\"],\"250\":[\"RW\"],\"251\":[\"ET\"],\"252\":[\"SO\"],\"253\":[\"DJ\"],\"254\":[\"KE\"],\"255\":[\"TZ\"],\"256\":[\"UG\"],\"257\":[\"BI\"],\"258\":[\"MZ\"],\"260\":[\"ZM\"],\"261\":[\"MG\"],\"262\":[\"RE\",\"YT\"],\"263\":[\"ZW\"],\"264\":[\"NA\"],\"265\":[\"MW\"],\"266\":[\"LS\"],\"267\":[\"BW\"],\"268\":[\"SZ\"],\"269\":[\"KM\"],\"290\":[\"SH\",\"TA\"],\"291\":[\"ER\"],\"297\":[\"AW\"],\"298\":[\"FO\"],\"299\":[\"GL\"],\"350\":[\"GI\"],\"351\":[\"PT\"],\"352\":[\"LU\"],\"353\":[\"IE\"],\"354\":[\"IS\"],\"355\":[\"AL\"],\"356\":[\"MT\"],\"357\":[\"CY\"],\"358\":[\"FI\",\"AX\"],\"359\":[\"BG\"],\"370\":[\"LT\"],\"371\":[\"LV\"],\"372\":[\"EE\"],\"373\":[\"MD\"],\"374\":[\"AM\"],\"375\":[\"BY\"],\"376\":[\"AD\"],\"377\":[\"MC\"],\"378\":[\"SM\"],\"380\":[\"UA\"],\"381\":[\"RS\"],\"382\":[\"ME\"],\"383\":[\"XK\"],\"385\":[\"HR\"],\"386\":[\"SI\"],\"387\":[\"BA\"],\"389\":[\"MK\"],\"420\":[\"CZ\"],\"421\":[\"SK\"],\"423\":[\"LI\"],\"500\":[\"FK\"],\"501\":[\"BZ\"],\"502\":[\"GT\"],\"503\":[\"SV\"],\"504\":[\"HN\"],\"505\":[\"NI\"],\"506\":[\"CR\"],\"507\":[\"PA\"],\"508\":[\"PM\"],\"509\":[\"HT\"],\"590\":[\"GP\",\"BL\",\"MF\"],\"591\":[\"BO\"],\"592\":[\"GY\"],\"593\":[\"EC\"],\"594\":[\"GF\"],\"595\":[\"PY\"],\"596\":[\"MQ\"],\"597\":[\"SR\"],\"598\":[\"UY\"],\"599\":[\"CW\",\"BQ\"],\"670\":[\"TL\"],\"672\":[\"NF\"],\"673\":[\"BN\"],\"674\":[\"NR\"],\"675\":[\"PG\"],\"676\":[\"TO\"],\"677\":[\"SB\"],\"678\":[\"VU\"],\"679\":[\"FJ\"],\"680\":[\"PW\"],\"681\":[\"WF\"],\"682\":[\"CK\"],\"683\":[\"NU\"],\"685\":[\"WS\"],\"686\":[\"KI\"],\"687\":[\"NC\"],\"688\":[\"TV\"],\"689\":[\"PF\"],\"690\":[\"TK\"],\"691\":[\"FM\"],\"692\":[\"MH\"],\"850\":[\"KP\"],\"852\":[\"HK\"],\"853\":[\"MO\"],\"855\":[\"KH\"],\"856\":[\"LA\"],\"880\":[\"BD\"],\"886\":[\"TW\"],\"960\":[\"MV\"],\"961\":[\"LB\"],\"962\":[\"JO\"],\"963\":[\"SY\"],\"964\":[\"IQ\"],\"965\":[\"KW\"],\"966\":[\"SA\"],\"967\":[\"YE\"],\"968\":[\"OM\"],\"970\":[\"PS\"],\"971\":[\"AE\"],\"972\":[\"IL\"],\"973\":[\"BH\"],\"974\":[\"QA\"],\"975\":[\"BT\"],\"976\":[\"MN\"],\"977\":[\"NP\"],\"992\":[\"TJ\"],\"993\":[\"TM\"],\"994\":[\"AZ\"],\"995\":[\"GE\"],\"996\":[\"KG\"],\"998\":[\"UZ\"]},\"countries\":{\"AC\":[\"247\",\"00\",\"(?:[01589]\\\\d|[46])\\\\d{4}\",[5,6]],\"AD\":[\"376\",\"00\",\"(?:1|6\\\\d)\\\\d{7}|[135-9]\\\\d{5}\",[6,8,9],[[\"(\\\\d{3})(\\\\d{3})\",\"$1 $2\",[\"[135-9]\"]],[\"(\\\\d{4})(\\\\d{4})\",\"$1 $2\",[\"1\"]],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"6\"]]]],\"AE\":[\"971\",\"00\",\"(?:[4-7]\\\\d|9[0-689])\\\\d{7}|800\\\\d{2,9}|[2-4679]\\\\d{7}\",[5,6,7,8,9,10,11,12],[[\"(\\\\d{3})(\\\\d{2,9})\",\"$1 $2\",[\"60|8\"]],[\"(\\\\d)(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"[236]|[479][2-8]\"],\"0$1\"],[\"(\\\\d{3})(\\\\d)(\\\\d{5})\",\"$1 $2 $3\",[\"[479]\"]],[\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"5\"],\"0$1\"]],\"0\"],\"AF\":[\"93\",\"00\",\"[2-7]\\\\d{8}\",[9],[[\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"[2-7]\"],\"0$1\"]],\"0\"],\"AG\":[\"1\",\"011\",\"(?:268|[58]\\\\d\\\\d|900)\\\\d{7}\",[10],0,\"1\",0,\"([457]\\\\d{6})$|1\",\"268$1\",0,\"268\"],\"AI\":[\"1\",\"011\",\"(?:264|[58]\\\\d\\\\d|900)\\\\d{7}\",[10],0,\"1\",0,\"([2457]\\\\d{6})$|1\",\"264$1\",0,\"264\"],\"AL\":[\"355\",\"00\",\"(?:700\\\\d\\\\d|900)\\\\d{3}|8\\\\d{5,7}|(?:[2-5]|6\\\\d)\\\\d{7}\",[6,7,8,9],[[\"(\\\\d{3})(\\\\d{3,4})\",\"$1 $2\",[\"80|9\"],\"0$1\"],[\"(\\\\d)(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"4[2-6]\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"[2358][2-5]|4\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{5})\",\"$1 $2\",[\"[23578]\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"6\"],\"0$1\"]],\"0\"],\"AM\":[\"374\",\"00\",\"(?:[1-489]\\\\d|55|60|77)\\\\d{6}\",[8],[[\"(\\\\d{3})(\\\\d{2})(\\\\d{3})\",\"$1 $2 $3\",[\"[89]0\"],\"0 $1\"],[\"(\\\\d{3})(\\\\d{5})\",\"$1 $2\",[\"2|3[12]\"],\"(0$1)\"],[\"(\\\\d{2})(\\\\d{6})\",\"$1 $2\",[\"1|47\"],\"(0$1)\"],[\"(\\\\d{2})(\\\\d{6})\",\"$1 $2\",[\"[3-9]\"],\"0$1\"]],\"0\"],\"AO\":[\"244\",\"00\",\"[29]\\\\d{8}\",[9],[[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"[29]\"]]]],\"AR\":[\"54\",\"00\",\"(?:11|[89]\\\\d\\\\d)\\\\d{8}|[2368]\\\\d{9}\",[10,11],[[\"(\\\\d{4})(\\\\d{2})(\\\\d{4})\",\"$1 $2-$3\",[\"2(?:2[024-9]|3[0-59]|47|6[245]|9[02-8])|3(?:3[28]|4[03-9]|5[2-46-8]|7[1-578]|8[2-9])\",\"2(?:[23]02|6(?:[25]|4[6-8])|9(?:[02356]|4[02568]|72|8[23]))|3(?:3[28]|4(?:[04679]|3[5-8]|5[4-68]|8[2379])|5(?:[2467]|3[237]|8[2-5])|7[1-578]|8(?:[2469]|3[2578]|5[4-8]|7[36-8]|8[5-8]))|2(?:2[24-9]|3[1-59]|47)\",\"2(?:[23]02|6(?:[25]|4(?:64|[78]))|9(?:[02356]|4(?:[0268]|5[2-6])|72|8[23]))|3(?:3[28]|4(?:[04679]|3[78]|5(?:4[46]|8)|8[2379])|5(?:[2467]|3[237]|8[23])|7[1-578]|8(?:[2469]|3[278]|5[56][46]|86[3-6]))|2(?:2[24-9]|3[1-59]|47)|38(?:[58][78]|7[378])|3(?:4[35][56]|58[45]|8(?:[38]5|54|76))[4-6]\",\"2(?:[23]02|6(?:[25]|4(?:64|[78]))|9(?:[02356]|4(?:[0268]|5[2-6])|72|8[23]))|3(?:3[28]|4(?:[04679]|3(?:5(?:4[0-25689]|[56])|[78])|58|8[2379])|5(?:[2467]|3[237]|8(?:[23]|4(?:[45]|60)|5(?:4[0-39]|5|64)))|7[1-578]|8(?:[2469]|3[278]|54(?:4|5[13-7]|6[89])|86[3-6]))|2(?:2[24-9]|3[1-59]|47)|38(?:[58][78]|7[378])|3(?:454|85[56])[46]|3(?:4(?:36|5[56])|8(?:[38]5|76))[4-6]\"],\"0$1\",1],[\"(\\\\d{2})(\\\\d{4})(\\\\d{4})\",\"$1 $2-$3\",[\"1\"],\"0$1\",1],[\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\",\"$1-$2-$3\",[\"[68]\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\",\"$1 $2-$3\",[\"[23]\"],\"0$1\",1],[\"(\\\\d)(\\\\d{4})(\\\\d{2})(\\\\d{4})\",\"$2 15-$3-$4\",[\"9(?:2[2-469]|3[3-578])\",\"9(?:2(?:2[024-9]|3[0-59]|47|6[245]|9[02-8])|3(?:3[28]|4[03-9]|5[2-46-8]|7[1-578]|8[2-9]))\",\"9(?:2(?:[23]02|6(?:[25]|4[6-8])|9(?:[02356]|4[02568]|72|8[23]))|3(?:3[28]|4(?:[04679]|3[5-8]|5[4-68]|8[2379])|5(?:[2467]|3[237]|8[2-5])|7[1-578]|8(?:[2469]|3[2578]|5[4-8]|7[36-8]|8[5-8])))|92(?:2[24-9]|3[1-59]|47)\",\"9(?:2(?:[23]02|6(?:[25]|4(?:64|[78]))|9(?:[02356]|4(?:[0268]|5[2-6])|72|8[23]))|3(?:3[28]|4(?:[04679]|3[78]|5(?:4[46]|8)|8[2379])|5(?:[2467]|3[237]|8[23])|7[1-578]|8(?:[2469]|3[278]|5(?:[56][46]|[78])|7[378]|8(?:6[3-6]|[78]))))|92(?:2[24-9]|3[1-59]|47)|93(?:4[35][56]|58[45]|8(?:[38]5|54|76))[4-6]\",\"9(?:2(?:[23]02|6(?:[25]|4(?:64|[78]))|9(?:[02356]|4(?:[0268]|5[2-6])|72|8[23]))|3(?:3[28]|4(?:[04679]|3(?:5(?:4[0-25689]|[56])|[78])|5(?:4[46]|8)|8[2379])|5(?:[2467]|3[237]|8(?:[23]|4(?:[45]|60)|5(?:4[0-39]|5|64)))|7[1-578]|8(?:[2469]|3[278]|5(?:4(?:4|5[13-7]|6[89])|[56][46]|[78])|7[378]|8(?:6[3-6]|[78]))))|92(?:2[24-9]|3[1-59]|47)|93(?:4(?:36|5[56])|8(?:[38]5|76))[4-6]\"],\"0$1\",0,\"$1 $2 $3-$4\"],[\"(\\\\d)(\\\\d{2})(\\\\d{4})(\\\\d{4})\",\"$2 15-$3-$4\",[\"91\"],\"0$1\",0,\"$1 $2 $3-$4\"],[\"(\\\\d{3})(\\\\d{3})(\\\\d{5})\",\"$1-$2-$3\",[\"8\"],\"0$1\"],[\"(\\\\d)(\\\\d{3})(\\\\d{3})(\\\\d{4})\",\"$2 15-$3-$4\",[\"9\"],\"0$1\",0,\"$1 $2 $3-$4\"]],\"0\",0,\"0?(?:(11|2(?:2(?:02?|[13]|2[13-79]|4[1-6]|5[2457]|6[124-8]|7[1-4]|8[13-6]|9[1267])|3(?:02?|1[467]|2[03-6]|3[13-8]|[49][2-6]|5[2-8]|[67])|4(?:7[3-578]|9)|6(?:[0136]|2[24-6]|4[6-8]?|5[15-8])|80|9(?:0[1-3]|[19]|2\\\\d|3[1-6]|4[02568]?|5[2-4]|6[2-46]|72?|8[23]?))|3(?:3(?:2[79]|6|8[2578])|4(?:0[0-24-9]|[12]|3[5-8]?|4[24-7]|5[4-68]?|6[02-9]|7[126]|8[2379]?|9[1-36-8])|5(?:1|2[1245]|3[237]?|4[1-46-9]|6[2-4]|7[1-6]|8[2-5]?)|6[24]|7(?:[069]|1[1568]|2[15]|3[145]|4[13]|5[14-8]|7[2-57]|8[126])|8(?:[01]|2[15-7]|3[2578]?|4[13-6]|5[4-8]?|6[1-357-9]|7[36-8]?|8[5-8]?|9[124])))15)?\",\"9$1\"],\"AS\":[\"1\",\"011\",\"(?:[58]\\\\d\\\\d|684|900)\\\\d{7}\",[10],0,\"1\",0,\"([267]\\\\d{6})$|1\",\"684$1\",0,\"684\"],\"AT\":[\"43\",\"00\",\"1\\\\d{3,12}|2\\\\d{6,12}|43(?:(?:0\\\\d|5[02-9])\\\\d{3,9}|2\\\\d{4,5}|[3467]\\\\d{4}|8\\\\d{4,6}|9\\\\d{4,7})|5\\\\d{4,12}|8\\\\d{7,12}|9\\\\d{8,12}|(?:[367]\\\\d|4[0-24-9])\\\\d{4,11}\",[4,5,6,7,8,9,10,11,12,13],[[\"(\\\\d)(\\\\d{3,12})\",\"$1 $2\",[\"1(?:11|[2-9])\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{2})\",\"$1 $2\",[\"517\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3,5})\",\"$1 $2\",[\"5[079]\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{3,10})\",\"$1 $2\",[\"(?:31|4)6|51|6(?:5[0-3579]|[6-9])|7(?:20|32|8)|[89]\"],\"0$1\"],[\"(\\\\d{4})(\\\\d{3,9})\",\"$1 $2\",[\"[2-467]|5[2-6]\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{3,4})\",\"$1 $2 $3\",[\"5\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{4})(\\\\d{4,7})\",\"$1 $2 $3\",[\"5\"],\"0$1\"]],\"0\"],\"AU\":[\"61\",\"001[14-689]|14(?:1[14]|34|4[17]|[56]6|7[47]|88)0011\",\"1(?:[0-79]\\\\d{7}(?:\\\\d(?:\\\\d{2})?)?|8[0-24-9]\\\\d{7})|[2-478]\\\\d{8}|1\\\\d{4,7}\",[5,6,7,8,9,10,12],[[\"(\\\\d{2})(\\\\d{3,4})\",\"$1 $2\",[\"16\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{2,4})\",\"$1 $2 $3\",[\"16\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"14|4\"],\"0$1\"],[\"(\\\\d)(\\\\d{4})(\\\\d{4})\",\"$1 $2 $3\",[\"[2378]\"],\"(0$1)\"],[\"(\\\\d{4})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"1(?:30|[89])\"]]],\"0\",0,\"(183[12])|0\",0,0,0,[[\"(?:(?:(?:2(?:[0-26-9]\\\\d|3[0-8]|4[02-9]|5[0135-9])|7(?:[013-57-9]\\\\d|2[0-8]))\\\\d|3(?:(?:[0-3589]\\\\d|6[1-9]|7[0-35-9])\\\\d|4(?:[0-578]\\\\d|90)))\\\\d\\\\d|8(?:51(?:0(?:0[03-9]|[12479]\\\\d|3[2-9]|5[0-8]|6[1-9]|8[0-7])|1(?:[0235689]\\\\d|1[0-69]|4[0-589]|7[0-47-9])|2(?:0[0-79]|[18][13579]|2[14-9]|3[0-46-9]|[4-6]\\\\d|7[89]|9[0-4])|3\\\\d\\\\d)|(?:6[0-8]|[78]\\\\d)\\\\d{3}|9(?:[02-9]\\\\d{3}|1(?:(?:[0-58]\\\\d|6[0135-9])\\\\d|7(?:0[0-24-9]|[1-9]\\\\d)|9(?:[0-46-9]\\\\d|5[0-79])))))\\\\d{3}\",[9]],[\"4(?:(?:79|94)[01]|83[0-389])\\\\d{5}|4(?:[0-3]\\\\d|4[047-9]|5[0-25-9]|6[0-36-9]|7[02-8]|8[0-24-9]|9[0-37-9])\\\\d{6}\",[9]],[\"180(?:0\\\\d{3}|2)\\\\d{3}\",[7,10]],[\"190[0-26]\\\\d{6}\",[10]],0,0,0,[\"163\\\\d{2,6}\",[5,6,7,8,9]],[\"14(?:5(?:1[0458]|[23][458])|71\\\\d)\\\\d{4}\",[9]],[\"13(?:00\\\\d{6}(?:\\\\d{2})?|45[0-4]\\\\d{3})|13\\\\d{4}\",[6,8,10,12]]],\"0011\"],\"AW\":[\"297\",\"00\",\"(?:[25-79]\\\\d\\\\d|800)\\\\d{4}\",[7],[[\"(\\\\d{3})(\\\\d{4})\",\"$1 $2\",[\"[25-9]\"]]]],\"AX\":[\"358\",\"00|99(?:[01469]|5(?:[14]1|3[23]|5[59]|77|88|9[09]))\",\"2\\\\d{4,9}|35\\\\d{4,5}|(?:60\\\\d\\\\d|800)\\\\d{4,6}|7\\\\d{5,11}|(?:[14]\\\\d|3[0-46-9]|50)\\\\d{4,8}\",[5,6,7,8,9,10,11,12],0,\"0\",0,0,0,0,\"18\",0,\"00\"],\"AZ\":[\"994\",\"00\",\"365\\\\d{6}|(?:[124579]\\\\d|60|88)\\\\d{7}\",[9],[[\"(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"90\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"1[28]|2|365|46\",\"1[28]|2|365[45]|46\",\"1[28]|2|365(?:4|5[02])|46\"],\"(0$1)\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"[13-9]\"],\"0$1\"]],\"0\"],\"BA\":[\"387\",\"00\",\"6\\\\d{8}|(?:[35689]\\\\d|49|70)\\\\d{6}\",[8,9],[[\"(\\\\d{2})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"6[1-3]|[7-9]\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{3})\",\"$1 $2-$3\",[\"[3-5]|6[56]\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{3})\",\"$1 $2 $3 $4\",[\"6\"],\"0$1\"]],\"0\"],\"BB\":[\"1\",\"011\",\"(?:246|[58]\\\\d\\\\d|900)\\\\d{7}\",[10],0,\"1\",0,\"([2-9]\\\\d{6})$|1\",\"246$1\",0,\"246\"],\"BD\":[\"880\",\"00\",\"[1-469]\\\\d{9}|8[0-79]\\\\d{7,8}|[2-79]\\\\d{8}|[2-9]\\\\d{7}|[3-9]\\\\d{6}|[57-9]\\\\d{5}\",[6,7,8,9,10],[[\"(\\\\d{2})(\\\\d{4,6})\",\"$1-$2\",[\"31[5-8]|[459]1\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{3,7})\",\"$1-$2\",[\"3(?:[67]|8[013-9])|4(?:6[168]|7|[89][18])|5(?:6[128]|9)|6(?:[15]|28|4[14])|7[2-589]|8(?:0[014-9]|[12])|9[358]|(?:3[2-5]|4[235]|5[2-578]|6[0389]|76|8[3-7]|9[24])1|(?:44|66)[01346-9]\"],\"0$1\"],[\"(\\\\d{4})(\\\\d{3,6})\",\"$1-$2\",[\"[13-9]|22\"],\"0$1\"],[\"(\\\\d)(\\\\d{7,8})\",\"$1-$2\",[\"2\"],\"0$1\"]],\"0\"],\"BE\":[\"32\",\"00\",\"4\\\\d{8}|[1-9]\\\\d{7}\",[8,9],[[\"(\\\\d{3})(\\\\d{2})(\\\\d{3})\",\"$1 $2 $3\",[\"(?:80|9)0\"],\"0$1\"],[\"(\\\\d)(\\\\d{3})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"[239]|4[23]\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"[15-8]\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"4\"],\"0$1\"]],\"0\"],\"BF\":[\"226\",\"00\",\"[025-7]\\\\d{7}\",[8],[[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"[025-7]\"]]]],\"BG\":[\"359\",\"00\",\"00800\\\\d{7}|[2-7]\\\\d{6,7}|[89]\\\\d{6,8}|2\\\\d{5}\",[6,7,8,9,12],[[\"(\\\\d)(\\\\d)(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"2\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{4})\",\"$1 $2\",[\"43[1-6]|70[1-9]\"],\"0$1\"],[\"(\\\\d)(\\\\d{3})(\\\\d{3,4})\",\"$1 $2 $3\",[\"2\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{2,3})\",\"$1 $2 $3\",[\"[356]|4[124-7]|7[1-9]|8[1-6]|9[1-7]\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{2})(\\\\d{3})\",\"$1 $2 $3\",[\"(?:70|8)0\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{3})(\\\\d{2})\",\"$1 $2 $3\",[\"43[1-7]|7\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{3,4})\",\"$1 $2 $3\",[\"[48]|9[08]\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"9\"],\"0$1\"]],\"0\"],\"BH\":[\"973\",\"00\",\"[136-9]\\\\d{7}\",[8],[[\"(\\\\d{4})(\\\\d{4})\",\"$1 $2\",[\"[13679]|8[02-4679]\"]]]],\"BI\":[\"257\",\"00\",\"(?:[267]\\\\d|31)\\\\d{6}\",[8],[[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"[2367]\"]]]],\"BJ\":[\"229\",\"00\",\"[24-689]\\\\d{7}\",[8],[[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"[24-689]\"]]]],\"BL\":[\"590\",\"00\",\"590\\\\d{6}|(?:69|80|9\\\\d)\\\\d{7}\",[9],0,\"0\",0,0,0,0,0,[[\"590(?:2[7-9]|3[3-7]|5[12]|87)\\\\d{4}\"],[\"69(?:0\\\\d\\\\d|1(?:2[2-9]|3[0-5])|4(?:0[89]|1[2-6]|9\\\\d)|6(?:1[016-9]|5[0-4]|[67]\\\\d))\\\\d{4}\"],[\"80[0-5]\\\\d{6}\"],0,0,0,0,0,[\"9(?:(?:39[5-7]|76[018])\\\\d|475[0-5])\\\\d{4}\"]]],\"BM\":[\"1\",\"011\",\"(?:441|[58]\\\\d\\\\d|900)\\\\d{7}\",[10],0,\"1\",0,\"([2-9]\\\\d{6})$|1\",\"441$1\",0,\"441\"],\"BN\":[\"673\",\"00\",\"[2-578]\\\\d{6}\",[7],[[\"(\\\\d{3})(\\\\d{4})\",\"$1 $2\",[\"[2-578]\"]]]],\"BO\":[\"591\",\"00(?:1\\\\d)?\",\"(?:[2-467]\\\\d\\\\d|8001)\\\\d{5}\",[8,9],[[\"(\\\\d)(\\\\d{7})\",\"$1 $2\",[\"[23]|4[46]\"]],[\"(\\\\d{8})\",\"$1\",[\"[67]\"]],[\"(\\\\d{3})(\\\\d{2})(\\\\d{4})\",\"$1 $2 $3\",[\"8\"]]],\"0\",0,\"0(1\\\\d)?\"],\"BQ\":[\"599\",\"00\",\"(?:[34]1|7\\\\d)\\\\d{5}\",[7],0,0,0,0,0,0,\"[347]\"],\"BR\":[\"55\",\"00(?:1[245]|2[1-35]|31|4[13]|[56]5|99)\",\"(?:[1-46-9]\\\\d\\\\d|5(?:[0-46-9]\\\\d|5[0-46-9]))\\\\d{8}|[1-9]\\\\d{9}|[3589]\\\\d{8}|[34]\\\\d{7}\",[8,9,10,11],[[\"(\\\\d{4})(\\\\d{4})\",\"$1-$2\",[\"300|4(?:0[02]|37)\",\"4(?:02|37)0|[34]00\"]],[\"(\\\\d{3})(\\\\d{2,3})(\\\\d{4})\",\"$1 $2 $3\",[\"(?:[358]|90)0\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{4})(\\\\d{4})\",\"$1 $2-$3\",[\"(?:[14689][1-9]|2[12478]|3[1-578]|5[13-5]|7[13-579])[2-57]\"],\"($1)\"],[\"(\\\\d{2})(\\\\d{5})(\\\\d{4})\",\"$1 $2-$3\",[\"[16][1-9]|[2-57-9]\"],\"($1)\"]],\"0\",0,\"(?:0|90)(?:(1[245]|2[1-35]|31|4[13]|[56]5|99)(\\\\d{10,11}))?\",\"$2\"],\"BS\":[\"1\",\"011\",\"(?:242|[58]\\\\d\\\\d|900)\\\\d{7}\",[10],0,\"1\",0,\"([3-8]\\\\d{6})$|1\",\"242$1\",0,\"242\"],\"BT\":[\"975\",\"00\",\"[17]\\\\d{7}|[2-8]\\\\d{6}\",[7,8],[[\"(\\\\d)(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"[2-68]|7[246]\"]],[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"1[67]|7\"]]]],\"BW\":[\"267\",\"00\",\"(?:0800|(?:[37]|800)\\\\d)\\\\d{6}|(?:[2-6]\\\\d|90)\\\\d{5}\",[7,8,10],[[\"(\\\\d{2})(\\\\d{5})\",\"$1 $2\",[\"90\"]],[\"(\\\\d{3})(\\\\d{4})\",\"$1 $2\",[\"[24-6]|3[15-9]\"]],[\"(\\\\d{2})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"[37]\"]],[\"(\\\\d{4})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"0\"]],[\"(\\\\d{3})(\\\\d{4})(\\\\d{3})\",\"$1 $2 $3\",[\"8\"]]]],\"BY\":[\"375\",\"810\",\"(?:[12]\\\\d|33|44|902)\\\\d{7}|8(?:0[0-79]\\\\d{5,7}|[1-7]\\\\d{9})|8(?:1[0-489]|[5-79]\\\\d)\\\\d{7}|8[1-79]\\\\d{6,7}|8[0-79]\\\\d{5}|8\\\\d{5}\",[6,7,8,9,10,11],[[\"(\\\\d{3})(\\\\d{3})\",\"$1 $2\",[\"800\"],\"8 $1\"],[\"(\\\\d{3})(\\\\d{2})(\\\\d{2,4})\",\"$1 $2 $3\",[\"800\"],\"8 $1\"],[\"(\\\\d{4})(\\\\d{2})(\\\\d{3})\",\"$1 $2-$3\",[\"1(?:5[169]|6[3-5]|7[179])|2(?:1[35]|2[34]|3[3-5])\",\"1(?:5[169]|6(?:3[1-3]|4|5[125])|7(?:1[3-9]|7[0-24-6]|9[2-7]))|2(?:1[35]|2[34]|3[3-5])\"],\"8 0$1\"],[\"(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2-$3-$4\",[\"1(?:[56]|7[467])|2[1-3]\"],\"8 0$1\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{2})(\\\\d{2})\",\"$1 $2-$3-$4\",[\"[1-4]\"],\"8 0$1\"],[\"(\\\\d{3})(\\\\d{3,4})(\\\\d{4})\",\"$1 $2 $3\",[\"[89]\"],\"8 $1\"]],\"8\",0,\"0|80?\",0,0,0,0,\"8~10\"],\"BZ\":[\"501\",\"00\",\"(?:0800\\\\d|[2-8])\\\\d{6}\",[7,11],[[\"(\\\\d{3})(\\\\d{4})\",\"$1-$2\",[\"[2-8]\"]],[\"(\\\\d)(\\\\d{3})(\\\\d{4})(\\\\d{3})\",\"$1-$2-$3-$4\",[\"0\"]]]],\"CA\":[\"1\",\"011\",\"(?:[2-8]\\\\d|90)\\\\d{8}|3\\\\d{6}\",[7,10],0,\"1\",0,0,0,0,0,[[\"(?:2(?:04|[23]6|[48]9|50|63)|3(?:06|43|54|6[578]|82)|4(?:03|1[68]|[26]8|3[178]|50|74)|5(?:06|1[49]|48|79|8[147])|6(?:04|[18]3|39|47|72)|7(?:0[59]|42|53|78|8[02])|8(?:[06]7|19|25|73)|90[25])[2-9]\\\\d{6}\",[10]],[\"\",[10]],[\"8(?:00|33|44|55|66|77|88)[2-9]\\\\d{6}\",[10]],[\"900[2-9]\\\\d{6}\",[10]],[\"52(?:3(?:[2-46-9][02-9]\\\\d|5(?:[02-46-9]\\\\d|5[0-46-9]))|4(?:[2-478][02-9]\\\\d|5(?:[034]\\\\d|2[024-9]|5[0-46-9])|6(?:0[1-9]|[2-9]\\\\d)|9(?:[05-9]\\\\d|2[0-5]|49)))\\\\d{4}|52[34][2-9]1[02-9]\\\\d{4}|(?:5(?:00|2[125-9]|33|44|66|77|88)|622)[2-9]\\\\d{6}\",[10]],0,[\"310\\\\d{4}\",[7]],0,[\"600[2-9]\\\\d{6}\",[10]]]],\"CC\":[\"61\",\"001[14-689]|14(?:1[14]|34|4[17]|[56]6|7[47]|88)0011\",\"1(?:[0-79]\\\\d{8}(?:\\\\d{2})?|8[0-24-9]\\\\d{7})|[148]\\\\d{8}|1\\\\d{5,7}\",[6,7,8,9,10,12],0,\"0\",0,\"([59]\\\\d{7})$|0\",\"8$1\",0,0,[[\"8(?:51(?:0(?:02|31|60|89)|1(?:18|76)|223)|91(?:0(?:1[0-2]|29)|1(?:[28]2|50|79)|2(?:10|64)|3(?:[06]8|22)|4[29]8|62\\\\d|70[23]|959))\\\\d{3}\",[9]],[\"4(?:(?:79|94)[01]|83[0-389])\\\\d{5}|4(?:[0-3]\\\\d|4[047-9]|5[0-25-9]|6[0-36-9]|7[02-8]|8[0-24-9]|9[0-37-9])\\\\d{6}\",[9]],[\"180(?:0\\\\d{3}|2)\\\\d{3}\",[7,10]],[\"190[0-26]\\\\d{6}\",[10]],0,0,0,0,[\"14(?:5(?:1[0458]|[23][458])|71\\\\d)\\\\d{4}\",[9]],[\"13(?:00\\\\d{6}(?:\\\\d{2})?|45[0-4]\\\\d{3})|13\\\\d{4}\",[6,8,10,12]]],\"0011\"],\"CD\":[\"243\",\"00\",\"[189]\\\\d{8}|[1-68]\\\\d{6}\",[7,9],[[\"(\\\\d{2})(\\\\d{2})(\\\\d{3})\",\"$1 $2 $3\",[\"88\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{5})\",\"$1 $2\",[\"[1-6]\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"1\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"[89]\"],\"0$1\"]],\"0\"],\"CF\":[\"236\",\"00\",\"(?:[27]\\\\d{3}|8776)\\\\d{4}\",[8],[[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"[278]\"]]]],\"CG\":[\"242\",\"00\",\"222\\\\d{6}|(?:0\\\\d|80)\\\\d{7}\",[9],[[\"(\\\\d)(\\\\d{4})(\\\\d{4})\",\"$1 $2 $3\",[\"8\"]],[\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"[02]\"]]]],\"CH\":[\"41\",\"00\",\"8\\\\d{11}|[2-9]\\\\d{8}\",[9],[[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"8[047]|90\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"[2-79]|81\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{2})(\\\\d{3})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4 $5\",[\"8\"],\"0$1\"]],\"0\"],\"CI\":[\"225\",\"00\",\"[02]\\\\d{9}\",[10],[[\"(\\\\d{2})(\\\\d{2})(\\\\d)(\\\\d{5})\",\"$1 $2 $3 $4\",[\"2\"]],[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{4})\",\"$1 $2 $3 $4\",[\"0\"]]]],\"CK\":[\"682\",\"00\",\"[2-578]\\\\d{4}\",[5],[[\"(\\\\d{2})(\\\\d{3})\",\"$1 $2\",[\"[2-578]\"]]]],\"CL\":[\"56\",\"(?:0|1(?:1[0-69]|2[02-5]|5[13-58]|69|7[0167]|8[018]))0\",\"12300\\\\d{6}|6\\\\d{9,10}|[2-9]\\\\d{8}\",[9,10,11],[[\"(\\\\d{5})(\\\\d{4})\",\"$1 $2\",[\"219\",\"2196\"],\"($1)\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"44\"]],[\"(\\\\d)(\\\\d{4})(\\\\d{4})\",\"$1 $2 $3\",[\"2[1-36]\"],\"($1)\"],[\"(\\\\d)(\\\\d{4})(\\\\d{4})\",\"$1 $2 $3\",[\"9[2-9]\"]],[\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"3[2-5]|[47]|5[1-3578]|6[13-57]|8(?:0[1-9]|[1-9])\"],\"($1)\"],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3,4})\",\"$1 $2 $3\",[\"60|8\"]],[\"(\\\\d{4})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"1\"]],[\"(\\\\d{3})(\\\\d{3})(\\\\d{2})(\\\\d{3})\",\"$1 $2 $3 $4\",[\"60\"]]]],\"CM\":[\"237\",\"00\",\"[26]\\\\d{8}|88\\\\d{6,7}\",[8,9],[[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"88\"]],[\"(\\\\d)(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4 $5\",[\"[26]|88\"]]]],\"CN\":[\"86\",\"00|1(?:[12]\\\\d|79)\\\\d\\\\d00\",\"1[127]\\\\d{8,9}|2\\\\d{9}(?:\\\\d{2})?|[12]\\\\d{6,7}|86\\\\d{6}|(?:1[03-689]\\\\d|6)\\\\d{7,9}|(?:[3-579]\\\\d|8[0-57-9])\\\\d{6,9}\",[7,8,9,10,11,12],[[\"(\\\\d{2})(\\\\d{5,6})\",\"$1 $2\",[\"(?:10|2[0-57-9])[19]\",\"(?:10|2[0-57-9])(?:10|9[56])\",\"10(?:10|9[56])|2[0-57-9](?:100|9[56])\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{5,6})\",\"$1 $2\",[\"3(?:[157]|35|49|9[1-68])|4(?:[17]|2[179]|6[47-9]|8[23])|5(?:[1357]|2[37]|4[36]|6[1-46]|80)|6(?:3[1-5]|6[0238]|9[12])|7(?:01|[1579]|2[248]|3[014-9]|4[3-6]|6[023689])|8(?:1[236-8]|2[5-7]|[37]|8[36-8]|9[1-8])|9(?:0[1-3689]|1[1-79]|[379]|4[13]|5[1-5])|(?:4[35]|59|85)[1-9]\",\"(?:3(?:[157]\\\\d|35|49|9[1-68])|4(?:[17]\\\\d|2[179]|[35][1-9]|6[47-9]|8[23])|5(?:[1357]\\\\d|2[37]|4[36]|6[1-46]|80|9[1-9])|6(?:3[1-5]|6[0238]|9[12])|7(?:01|[1579]\\\\d|2[248]|3[014-9]|4[3-6]|6[023689])|8(?:1[236-8]|2[5-7]|[37]\\\\d|5[1-9]|8[36-8]|9[1-8])|9(?:0[1-3689]|1[1-79]|[379]\\\\d|4[13]|5[1-5]))[19]\",\"85[23](?:10|95)|(?:3(?:[157]\\\\d|35|49|9[1-68])|4(?:[17]\\\\d|2[179]|[35][1-9]|6[47-9]|8[23])|5(?:[1357]\\\\d|2[37]|4[36]|6[1-46]|80|9[1-9])|6(?:3[1-5]|6[0238]|9[12])|7(?:01|[1579]\\\\d|2[248]|3[014-9]|4[3-6]|6[023689])|8(?:1[236-8]|2[5-7]|[37]\\\\d|5[14-9]|8[36-8]|9[1-8])|9(?:0[1-3689]|1[1-79]|[379]\\\\d|4[13]|5[1-5]))(?:10|9[56])\",\"85[23](?:100|95)|(?:3(?:[157]\\\\d|35|49|9[1-68])|4(?:[17]\\\\d|2[179]|[35][1-9]|6[47-9]|8[23])|5(?:[1357]\\\\d|2[37]|4[36]|6[1-46]|80|9[1-9])|6(?:3[1-5]|6[0238]|9[12])|7(?:01|[1579]\\\\d|2[248]|3[014-9]|4[3-6]|6[023689])|8(?:1[236-8]|2[5-7]|[37]\\\\d|5[14-9]|8[36-8]|9[1-8])|9(?:0[1-3689]|1[1-79]|[379]\\\\d|4[13]|5[1-5]))(?:100|9[56])\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"(?:4|80)0\"]],[\"(\\\\d{2})(\\\\d{4})(\\\\d{4})\",\"$1 $2 $3\",[\"10|2(?:[02-57-9]|1[1-9])\",\"10|2(?:[02-57-9]|1[1-9])\",\"10[0-79]|2(?:[02-57-9]|1[1-79])|(?:10|21)8(?:0[1-9]|[1-9])\"],\"0$1\",1],[\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"3(?:[3-59]|7[02-68])|4(?:[26-8]|3[3-9]|5[2-9])|5(?:3[03-9]|[468]|7[028]|9[2-46-9])|6|7(?:[0-247]|3[04-9]|5[0-4689]|6[2368])|8(?:[1-358]|9[1-7])|9(?:[013479]|5[1-5])|(?:[34]1|55|79|87)[02-9]\"],\"0$1\",1],[\"(\\\\d{3})(\\\\d{7,8})\",\"$1 $2\",[\"9\"]],[\"(\\\\d{4})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"80\"],\"0$1\",1],[\"(\\\\d{3})(\\\\d{4})(\\\\d{4})\",\"$1 $2 $3\",[\"[3-578]\"],\"0$1\",1],[\"(\\\\d{3})(\\\\d{4})(\\\\d{4})\",\"$1 $2 $3\",[\"1[3-9]\"]],[\"(\\\\d{2})(\\\\d{3})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3 $4\",[\"[12]\"],\"0$1\",1]],\"0\",0,\"(1(?:[12]\\\\d|79)\\\\d\\\\d)|0\",0,0,0,0,\"00\"],\"CO\":[\"57\",\"00(?:4(?:[14]4|56)|[579])\",\"(?:60\\\\d\\\\d|9101)\\\\d{6}|(?:1\\\\d|3)\\\\d{9}\",[10,11],[[\"(\\\\d{3})(\\\\d{7})\",\"$1 $2\",[\"6\"],\"($1)\"],[\"(\\\\d{3})(\\\\d{7})\",\"$1 $2\",[\"3[0-357]|91\"]],[\"(\\\\d)(\\\\d{3})(\\\\d{7})\",\"$1-$2-$3\",[\"1\"],\"0$1\",0,\"$1 $2 $3\"]],\"0\",0,\"0([3579]|4(?:[14]4|56))?\"],\"CR\":[\"506\",\"00\",\"(?:8\\\\d|90)\\\\d{8}|(?:[24-8]\\\\d{3}|3005)\\\\d{4}\",[8,10],[[\"(\\\\d{4})(\\\\d{4})\",\"$1 $2\",[\"[2-7]|8[3-9]\"]],[\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\",\"$1-$2-$3\",[\"[89]\"]]],0,0,\"(19(?:0[0-2468]|1[09]|20|66|77|99))\"],\"CU\":[\"53\",\"119\",\"[27]\\\\d{6,7}|[34]\\\\d{5,7}|63\\\\d{6}|(?:5|8\\\\d\\\\d)\\\\d{7}\",[6,7,8,10],[[\"(\\\\d{2})(\\\\d{4,6})\",\"$1 $2\",[\"2[1-4]|[34]\"],\"(0$1)\"],[\"(\\\\d)(\\\\d{6,7})\",\"$1 $2\",[\"7\"],\"(0$1)\"],[\"(\\\\d)(\\\\d{7})\",\"$1 $2\",[\"[56]\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{7})\",\"$1 $2\",[\"8\"],\"0$1\"]],\"0\"],\"CV\":[\"238\",\"0\",\"(?:[2-59]\\\\d\\\\d|800)\\\\d{4}\",[7],[[\"(\\\\d{3})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3\",[\"[2-589]\"]]]],\"CW\":[\"599\",\"00\",\"(?:[34]1|60|(?:7|9\\\\d)\\\\d)\\\\d{5}\",[7,8],[[\"(\\\\d{3})(\\\\d{4})\",\"$1 $2\",[\"[3467]\"]],[\"(\\\\d)(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"9[4-8]\"]]],0,0,0,0,0,\"[69]\"],\"CX\":[\"61\",\"001[14-689]|14(?:1[14]|34|4[17]|[56]6|7[47]|88)0011\",\"1(?:[0-79]\\\\d{8}(?:\\\\d{2})?|8[0-24-9]\\\\d{7})|[148]\\\\d{8}|1\\\\d{5,7}\",[6,7,8,9,10,12],0,\"0\",0,\"([59]\\\\d{7})$|0\",\"8$1\",0,0,[[\"8(?:51(?:0(?:01|30|59|88)|1(?:17|46|75)|2(?:22|35))|91(?:00[6-9]|1(?:[28]1|49|78)|2(?:09|63)|3(?:12|26|75)|4(?:56|97)|64\\\\d|7(?:0[01]|1[0-2])|958))\\\\d{3}\",[9]],[\"4(?:(?:79|94)[01]|83[0-389])\\\\d{5}|4(?:[0-3]\\\\d|4[047-9]|5[0-25-9]|6[0-36-9]|7[02-8]|8[0-24-9]|9[0-37-9])\\\\d{6}\",[9]],[\"180(?:0\\\\d{3}|2)\\\\d{3}\",[7,10]],[\"190[0-26]\\\\d{6}\",[10]],0,0,0,0,[\"14(?:5(?:1[0458]|[23][458])|71\\\\d)\\\\d{4}\",[9]],[\"13(?:00\\\\d{6}(?:\\\\d{2})?|45[0-4]\\\\d{3})|13\\\\d{4}\",[6,8,10,12]]],\"0011\"],\"CY\":[\"357\",\"00\",\"(?:[279]\\\\d|[58]0)\\\\d{6}\",[8],[[\"(\\\\d{2})(\\\\d{6})\",\"$1 $2\",[\"[257-9]\"]]]],\"CZ\":[\"420\",\"00\",\"(?:[2-578]\\\\d|60)\\\\d{7}|9\\\\d{8,11}\",[9],[[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"[2-8]|9[015-7]\"]],[\"(\\\\d{2})(\\\\d{3})(\\\\d{3})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"96\"]],[\"(\\\\d{2})(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3 $4\",[\"9\"]],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3 $4\",[\"9\"]]]],\"DE\":[\"49\",\"00\",\"[2579]\\\\d{5,14}|49(?:[34]0|69|8\\\\d)\\\\d\\\\d?|49(?:37|49|60|7[089]|9\\\\d)\\\\d{1,3}|49(?:2[024-9]|3[2-689]|7[1-7])\\\\d{1,8}|(?:1|[368]\\\\d|4[0-8])\\\\d{3,13}|49(?:[015]\\\\d|2[13]|31|[46][1-8])\\\\d{1,9}\",[4,5,6,7,8,9,10,11,12,13,14,15],[[\"(\\\\d{2})(\\\\d{3,13})\",\"$1 $2\",[\"3[02]|40|[68]9\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{3,12})\",\"$1 $2\",[\"2(?:0[1-389]|1[124]|2[18]|3[14])|3(?:[35-9][15]|4[015])|906|(?:2[4-9]|4[2-9]|[579][1-9]|[68][1-8])1\",\"2(?:0[1-389]|12[0-8])|3(?:[35-9][15]|4[015])|906|2(?:[13][14]|2[18])|(?:2[4-9]|4[2-9]|[579][1-9]|[68][1-8])1\"],\"0$1\"],[\"(\\\\d{4})(\\\\d{2,11})\",\"$1 $2\",[\"[24-6]|3(?:[3569][02-46-9]|4[2-4679]|7[2-467]|8[2-46-8])|70[2-8]|8(?:0[2-9]|[1-8])|90[7-9]|[79][1-9]\",\"[24-6]|3(?:3(?:0[1-467]|2[127-9]|3[124578]|7[1257-9]|8[1256]|9[145])|4(?:2[135]|4[13578]|9[1346])|5(?:0[14]|2[1-3589]|6[1-4]|7[13468]|8[13568])|6(?:2[1-489]|3[124-6]|6[13]|7[12579]|8[1-356]|9[135])|7(?:2[1-7]|4[145]|6[1-5]|7[1-4])|8(?:21|3[1468]|6|7[1467]|8[136])|9(?:0[12479]|2[1358]|4[134679]|6[1-9]|7[136]|8[147]|9[1468]))|70[2-8]|8(?:0[2-9]|[1-8])|90[7-9]|[79][1-9]|3[68]4[1347]|3(?:47|60)[1356]|3(?:3[46]|46|5[49])[1246]|3[4579]3[1357]\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{4})\",\"$1 $2\",[\"138\"],\"0$1\"],[\"(\\\\d{5})(\\\\d{2,10})\",\"$1 $2\",[\"3\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{5,11})\",\"$1 $2\",[\"181\"],\"0$1\"],[\"(\\\\d{3})(\\\\d)(\\\\d{4,10})\",\"$1 $2 $3\",[\"1(?:3|80)|9\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{7,8})\",\"$1 $2\",[\"1[67]\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{7,12})\",\"$1 $2\",[\"8\"],\"0$1\"],[\"(\\\\d{5})(\\\\d{6})\",\"$1 $2\",[\"185\",\"1850\",\"18500\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{4})(\\\\d{4})\",\"$1 $2 $3\",[\"7\"],\"0$1\"],[\"(\\\\d{4})(\\\\d{7})\",\"$1 $2\",[\"18[68]\"],\"0$1\"],[\"(\\\\d{4})(\\\\d{7})\",\"$1 $2\",[\"15[1279]\"],\"0$1\"],[\"(\\\\d{5})(\\\\d{6})\",\"$1 $2\",[\"15[03568]\",\"15(?:[0568]|31)\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{8})\",\"$1 $2\",[\"18\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{2})(\\\\d{7,8})\",\"$1 $2 $3\",[\"1(?:6[023]|7)\"],\"0$1\"],[\"(\\\\d{4})(\\\\d{2})(\\\\d{7})\",\"$1 $2 $3\",[\"15[279]\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{2})(\\\\d{8})\",\"$1 $2 $3\",[\"15\"],\"0$1\"]],\"0\"],\"DJ\":[\"253\",\"00\",\"(?:2\\\\d|77)\\\\d{6}\",[8],[[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"[27]\"]]]],\"DK\":[\"45\",\"00\",\"[2-9]\\\\d{7}\",[8],[[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"[2-9]\"]]]],\"DM\":[\"1\",\"011\",\"(?:[58]\\\\d\\\\d|767|900)\\\\d{7}\",[10],0,\"1\",0,\"([2-7]\\\\d{6})$|1\",\"767$1\",0,\"767\"],\"DO\":[\"1\",\"011\",\"(?:[58]\\\\d\\\\d|900)\\\\d{7}\",[10],0,\"1\",0,0,0,0,\"8001|8[024]9\"],\"DZ\":[\"213\",\"00\",\"(?:[1-4]|[5-79]\\\\d|80)\\\\d{7}\",[8,9],[[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"[1-4]\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"9\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"[5-8]\"],\"0$1\"]],\"0\"],\"EC\":[\"593\",\"00\",\"1\\\\d{9,10}|(?:[2-7]|9\\\\d)\\\\d{7}\",[8,9,10,11],[[\"(\\\\d)(\\\\d{3})(\\\\d{4})\",\"$1 $2-$3\",[\"[2-7]\"],\"(0$1)\",0,\"$1-$2-$3\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"9\"],\"0$1\"],[\"(\\\\d{4})(\\\\d{3})(\\\\d{3,4})\",\"$1 $2 $3\",[\"1\"]]],\"0\"],\"EE\":[\"372\",\"00\",\"8\\\\d{9}|[4578]\\\\d{7}|(?:[3-8]\\\\d|90)\\\\d{5}\",[7,8,10],[[\"(\\\\d{3})(\\\\d{4})\",\"$1 $2\",[\"[369]|4[3-8]|5(?:[0-2]|5[0-478]|6[45])|7[1-9]|88\",\"[369]|4[3-8]|5(?:[02]|1(?:[0-8]|95)|5[0-478]|6(?:4[0-4]|5[1-589]))|7[1-9]|88\"]],[\"(\\\\d{4})(\\\\d{3,4})\",\"$1 $2\",[\"[45]|8(?:00|[1-49])\",\"[45]|8(?:00[1-9]|[1-49])\"]],[\"(\\\\d{2})(\\\\d{2})(\\\\d{4})\",\"$1 $2 $3\",[\"7\"]],[\"(\\\\d{4})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"8\"]]]],\"EG\":[\"20\",\"00\",\"[189]\\\\d{8,9}|[24-6]\\\\d{8}|[135]\\\\d{7}\",[8,9,10],[[\"(\\\\d)(\\\\d{7,8})\",\"$1 $2\",[\"[23]\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{6,7})\",\"$1 $2\",[\"1[35]|[4-6]|8[2468]|9[235-7]\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"[89]\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{8})\",\"$1 $2\",[\"1\"],\"0$1\"]],\"0\"],\"EH\":[\"212\",\"00\",\"[5-8]\\\\d{8}\",[9],0,\"0\",0,0,0,0,\"528[89]\"],\"ER\":[\"291\",\"00\",\"[178]\\\\d{6}\",[7],[[\"(\\\\d)(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"[178]\"],\"0$1\"]],\"0\"],\"ES\":[\"34\",\"00\",\"[5-9]\\\\d{8}\",[9],[[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"[89]00\"]],[\"(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"[5-9]\"]]]],\"ET\":[\"251\",\"00\",\"(?:11|[2-579]\\\\d)\\\\d{7}\",[9],[[\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"[1-579]\"],\"0$1\"]],\"0\"],\"FI\":[\"358\",\"00|99(?:[01469]|5(?:[14]1|3[23]|5[59]|77|88|9[09]))\",\"[1-35689]\\\\d{4}|7\\\\d{10,11}|(?:[124-7]\\\\d|3[0-46-9])\\\\d{8}|[1-9]\\\\d{5,8}\",[5,6,7,8,9,10,11,12],[[\"(\\\\d{5})\",\"$1\",[\"20[2-59]\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{3,7})\",\"$1 $2\",[\"(?:[1-3]0|[68])0|70[07-9]\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{4,8})\",\"$1 $2\",[\"[14]|2[09]|50|7[135]\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{6,10})\",\"$1 $2\",[\"7\"],\"0$1\"],[\"(\\\\d)(\\\\d{4,9})\",\"$1 $2\",[\"(?:1[3-79]|[2568])[1-8]|3(?:0[1-9]|[1-9])|9\"],\"0$1\"]],\"0\",0,0,0,0,\"1[03-79]|[2-9]\",0,\"00\"],\"FJ\":[\"679\",\"0(?:0|52)\",\"45\\\\d{5}|(?:0800\\\\d|[235-9])\\\\d{6}\",[7,11],[[\"(\\\\d{3})(\\\\d{4})\",\"$1 $2\",[\"[235-9]|45\"]],[\"(\\\\d{4})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"0\"]]],0,0,0,0,0,0,0,\"00\"],\"FK\":[\"500\",\"00\",\"[2-7]\\\\d{4}\",[5]],\"FM\":[\"691\",\"00\",\"(?:[39]\\\\d\\\\d|820)\\\\d{4}\",[7],[[\"(\\\\d{3})(\\\\d{4})\",\"$1 $2\",[\"[389]\"]]]],\"FO\":[\"298\",\"00\",\"[2-9]\\\\d{5}\",[6],[[\"(\\\\d{6})\",\"$1\",[\"[2-9]\"]]],0,0,\"(10(?:01|[12]0|88))\"],\"FR\":[\"33\",\"00\",\"[1-9]\\\\d{8}\",[9],[[\"(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"8\"],\"0 $1\"],[\"(\\\\d)(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4 $5\",[\"[1-79]\"],\"0$1\"]],\"0\"],\"GA\":[\"241\",\"00\",\"(?:[067]\\\\d|11)\\\\d{6}|[2-7]\\\\d{6}\",[7,8],[[\"(\\\\d)(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"[2-7]\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"0\"]],[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"11|[67]\"],\"0$1\"]],0,0,\"0(11\\\\d{6}|60\\\\d{6}|61\\\\d{6}|6[256]\\\\d{6}|7[467]\\\\d{6})\",\"$1\"],\"GB\":[\"44\",\"00\",\"[1-357-9]\\\\d{9}|[18]\\\\d{8}|8\\\\d{6}\",[7,9,10],[[\"(\\\\d{3})(\\\\d{4})\",\"$1 $2\",[\"800\",\"8001\",\"80011\",\"800111\",\"8001111\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3\",[\"845\",\"8454\",\"84546\",\"845464\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{6})\",\"$1 $2\",[\"800\"],\"0$1\"],[\"(\\\\d{5})(\\\\d{4,5})\",\"$1 $2\",[\"1(?:38|5[23]|69|76|94)\",\"1(?:(?:38|69)7|5(?:24|39)|768|946)\",\"1(?:3873|5(?:242|39[4-6])|(?:697|768)[347]|9467)\"],\"0$1\"],[\"(\\\\d{4})(\\\\d{5,6})\",\"$1 $2\",[\"1(?:[2-69][02-9]|[78])\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{4})(\\\\d{4})\",\"$1 $2 $3\",[\"[25]|7(?:0|6[02-9])\",\"[25]|7(?:0|6(?:[03-9]|2[356]))\"],\"0$1\"],[\"(\\\\d{4})(\\\\d{6})\",\"$1 $2\",[\"7\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"[1389]\"],\"0$1\"]],\"0\",0,0,0,0,0,[[\"(?:1(?:1(?:3(?:[0-58]\\\\d\\\\d|73[0235])|4(?:[0-5]\\\\d\\\\d|69[7-9]|70[0-79])|(?:(?:5[0-26-9]|[78][0-49])\\\\d|6(?:[0-4]\\\\d|50))\\\\d)|(?:2(?:(?:0[024-9]|2[3-9]|3[3-79]|4[1-689]|[58][02-9]|6[0-47-9]|7[013-9]|9\\\\d)\\\\d|1(?:[0-7]\\\\d|8[0-2]))|(?:3(?:0\\\\d|1[0-8]|[25][02-9]|3[02-579]|[468][0-46-9]|7[1-35-79]|9[2-578])|4(?:0[03-9]|[137]\\\\d|[28][02-57-9]|4[02-69]|5[0-8]|[69][0-79])|5(?:0[1-35-9]|[16]\\\\d|2[024-9]|3[015689]|4[02-9]|5[03-9]|7[0-35-9]|8[0-468]|9[0-57-9])|6(?:0[034689]|1\\\\d|2[0-35689]|[38][013-9]|4[1-467]|5[0-69]|6[13-9]|7[0-8]|9[0-24578])|7(?:0[0246-9]|2\\\\d|3[0236-8]|4[03-9]|5[0-46-9]|6[013-9]|7[0-35-9]|8[024-9]|9[02-9])|8(?:0[35-9]|2[1-57-9]|3[02-578]|4[0-578]|5[124-9]|6[2-69]|7\\\\d|8[02-9]|9[02569])|9(?:0[02-589]|[18]\\\\d|2[02-689]|3[1-57-9]|4[2-9]|5[0-579]|6[2-47-9]|7[0-24578]|9[2-57]))\\\\d)\\\\d)|2(?:0[013478]|3[0189]|4[017]|8[0-46-9]|9[0-2])\\\\d{3})\\\\d{4}|1(?:2(?:0(?:46[1-4]|87[2-9])|545[1-79]|76(?:2\\\\d|3[1-8]|6[1-6])|9(?:7(?:2[0-4]|3[2-5])|8(?:2[2-8]|7[0-47-9]|8[3-5])))|3(?:6(?:38[2-5]|47[23])|8(?:47[04-9]|64[0157-9]))|4(?:044[1-7]|20(?:2[23]|8\\\\d)|6(?:0(?:30|5[2-57]|6[1-8]|7[2-8])|140)|8(?:052|87[1-3]))|5(?:2(?:4(?:3[2-79]|6\\\\d)|76\\\\d)|6(?:26[06-9]|686))|6(?:06(?:4\\\\d|7[4-79])|295[5-7]|35[34]\\\\d|47(?:24|61)|59(?:5[08]|6[67]|74)|9(?:55[0-4]|77[23]))|7(?:26(?:6[13-9]|7[0-7])|(?:442|688)\\\\d|50(?:2[0-3]|[3-68]2|76))|8(?:27[56]\\\\d|37(?:5[2-5]|8[239])|843[2-58])|9(?:0(?:0(?:6[1-8]|85)|52\\\\d)|3583|4(?:66[1-8]|9(?:2[01]|81))|63(?:23|3[1-4])|9561))\\\\d{3}\",[9,10]],[\"7(?:457[0-57-9]|700[01]|911[028])\\\\d{5}|7(?:[1-3]\\\\d\\\\d|4(?:[0-46-9]\\\\d|5[0-689])|5(?:0[0-8]|[13-9]\\\\d|2[0-35-9])|7(?:0[1-9]|[1-7]\\\\d|8[02-9]|9[0-689])|8(?:[014-9]\\\\d|[23][0-8])|9(?:[024-9]\\\\d|1[02-9]|3[0-689]))\\\\d{6}\",[10]],[\"80[08]\\\\d{7}|800\\\\d{6}|8001111\"],[\"(?:8(?:4[2-5]|7[0-3])|9(?:[01]\\\\d|8[2-49]))\\\\d{7}|845464\\\\d\",[7,10]],[\"70\\\\d{8}\",[10]],0,[\"(?:3[0347]|55)\\\\d{8}\",[10]],[\"76(?:464|652)\\\\d{5}|76(?:0[0-28]|2[356]|34|4[01347]|5[49]|6[0-369]|77|8[14]|9[139])\\\\d{6}\",[10]],[\"56\\\\d{8}\",[10]]],0,\" x\"],\"GD\":[\"1\",\"011\",\"(?:473|[58]\\\\d\\\\d|900)\\\\d{7}\",[10],0,\"1\",0,\"([2-9]\\\\d{6})$|1\",\"473$1\",0,\"473\"],\"GE\":[\"995\",\"00\",\"(?:[3-57]\\\\d\\\\d|800)\\\\d{6}\",[9],[[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"70\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"32\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"[57]\"]],[\"(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"[348]\"],\"0$1\"]],\"0\"],\"GF\":[\"594\",\"00\",\"[56]94\\\\d{6}|(?:80|9\\\\d)\\\\d{7}\",[9],[[\"(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"[56]|9[47]\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"[89]\"],\"0$1\"]],\"0\"],\"GG\":[\"44\",\"00\",\"(?:1481|[357-9]\\\\d{3})\\\\d{6}|8\\\\d{6}(?:\\\\d{2})?\",[7,9,10],0,\"0\",0,\"([25-9]\\\\d{5})$|0\",\"1481$1\",0,0,[[\"1481[25-9]\\\\d{5}\",[10]],[\"7(?:(?:781|839)\\\\d|911[17])\\\\d{5}\",[10]],[\"80[08]\\\\d{7}|800\\\\d{6}|8001111\"],[\"(?:8(?:4[2-5]|7[0-3])|9(?:[01]\\\\d|8[0-3]))\\\\d{7}|845464\\\\d\",[7,10]],[\"70\\\\d{8}\",[10]],0,[\"(?:3[0347]|55)\\\\d{8}\",[10]],[\"76(?:464|652)\\\\d{5}|76(?:0[0-28]|2[356]|34|4[01347]|5[49]|6[0-369]|77|8[14]|9[139])\\\\d{6}\",[10]],[\"56\\\\d{8}\",[10]]]],\"GH\":[\"233\",\"00\",\"(?:[235]\\\\d{3}|800)\\\\d{5}\",[8,9],[[\"(\\\\d{3})(\\\\d{5})\",\"$1 $2\",[\"8\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"[235]\"],\"0$1\"]],\"0\"],\"GI\":[\"350\",\"00\",\"(?:[25]\\\\d|60)\\\\d{6}\",[8],[[\"(\\\\d{3})(\\\\d{5})\",\"$1 $2\",[\"2\"]]]],\"GL\":[\"299\",\"00\",\"(?:19|[2-689]\\\\d|70)\\\\d{4}\",[6],[[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3\",[\"19|[2-9]\"]]]],\"GM\":[\"220\",\"00\",\"[2-9]\\\\d{6}\",[7],[[\"(\\\\d{3})(\\\\d{4})\",\"$1 $2\",[\"[2-9]\"]]]],\"GN\":[\"224\",\"00\",\"722\\\\d{6}|(?:3|6\\\\d)\\\\d{7}\",[8,9],[[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"3\"]],[\"(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"[67]\"]]]],\"GP\":[\"590\",\"00\",\"590\\\\d{6}|(?:69|80|9\\\\d)\\\\d{7}\",[9],[[\"(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"[569]\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"8\"],\"0$1\"]],\"0\",0,0,0,0,0,[[\"590(?:0[1-68]|[14][0-24-9]|2[0-68]|3[1-9]|5[3-579]|[68][0-689]|7[08]|9\\\\d)\\\\d{4}\"],[\"69(?:0\\\\d\\\\d|1(?:2[2-9]|3[0-5])|4(?:0[89]|1[2-6]|9\\\\d)|6(?:1[016-9]|5[0-4]|[67]\\\\d))\\\\d{4}\"],[\"80[0-5]\\\\d{6}\"],0,0,0,0,0,[\"9(?:(?:39[5-7]|76[018])\\\\d|475[0-5])\\\\d{4}\"]]],\"GQ\":[\"240\",\"00\",\"222\\\\d{6}|(?:3\\\\d|55|[89]0)\\\\d{7}\",[9],[[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"[235]\"]],[\"(\\\\d{3})(\\\\d{6})\",\"$1 $2\",[\"[89]\"]]]],\"GR\":[\"30\",\"00\",\"5005000\\\\d{3}|8\\\\d{9,11}|(?:[269]\\\\d|70)\\\\d{8}\",[10,11,12],[[\"(\\\\d{2})(\\\\d{4})(\\\\d{4})\",\"$1 $2 $3\",[\"21|7\"]],[\"(\\\\d{4})(\\\\d{6})\",\"$1 $2\",[\"2(?:2|3[2-57-9]|4[2-469]|5[2-59]|6[2-9]|7[2-69]|8[2-49])|5\"]],[\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"[2689]\"]],[\"(\\\\d{3})(\\\\d{3,4})(\\\\d{5})\",\"$1 $2 $3\",[\"8\"]]]],\"GT\":[\"502\",\"00\",\"80\\\\d{6}|(?:1\\\\d{3}|[2-7])\\\\d{7}\",[8,11],[[\"(\\\\d{4})(\\\\d{4})\",\"$1 $2\",[\"[2-8]\"]],[\"(\\\\d{4})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"1\"]]]],\"GU\":[\"1\",\"011\",\"(?:[58]\\\\d\\\\d|671|900)\\\\d{7}\",[10],0,\"1\",0,\"([2-9]\\\\d{6})$|1\",\"671$1\",0,\"671\"],\"GW\":[\"245\",\"00\",\"[49]\\\\d{8}|4\\\\d{6}\",[7,9],[[\"(\\\\d{3})(\\\\d{4})\",\"$1 $2\",[\"40\"]],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"[49]\"]]]],\"GY\":[\"592\",\"001\",\"(?:[2-8]\\\\d{3}|9008)\\\\d{3}\",[7],[[\"(\\\\d{3})(\\\\d{4})\",\"$1 $2\",[\"[2-9]\"]]]],\"HK\":[\"852\",\"00(?:30|5[09]|[126-9]?)\",\"8[0-46-9]\\\\d{6,7}|9\\\\d{4,7}|(?:[2-7]|9\\\\d{3})\\\\d{7}\",[5,6,7,8,9,11],[[\"(\\\\d{3})(\\\\d{2,5})\",\"$1 $2\",[\"900\",\"9003\"]],[\"(\\\\d{4})(\\\\d{4})\",\"$1 $2\",[\"[2-7]|8[1-4]|9(?:0[1-9]|[1-8])\"]],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"8\"]],[\"(\\\\d{3})(\\\\d{2})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3 $4\",[\"9\"]]],0,0,0,0,0,0,0,\"00\"],\"HN\":[\"504\",\"00\",\"8\\\\d{10}|[237-9]\\\\d{7}\",[8,11],[[\"(\\\\d{4})(\\\\d{4})\",\"$1-$2\",[\"[237-9]\"]]]],\"HR\":[\"385\",\"00\",\"(?:[24-69]\\\\d|3[0-79])\\\\d{7}|80\\\\d{5,7}|[1-79]\\\\d{7}|6\\\\d{5,6}\",[6,7,8,9],[[\"(\\\\d{2})(\\\\d{2})(\\\\d{2,3})\",\"$1 $2 $3\",[\"6[01]\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{2})(\\\\d{2,3})\",\"$1 $2 $3\",[\"8\"],\"0$1\"],[\"(\\\\d)(\\\\d{4})(\\\\d{3})\",\"$1 $2 $3\",[\"1\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{3,4})\",\"$1 $2 $3\",[\"6|7[245]\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{3,4})\",\"$1 $2 $3\",[\"9\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{3,4})\",\"$1 $2 $3\",[\"[2-57]\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"8\"],\"0$1\"]],\"0\"],\"HT\":[\"509\",\"00\",\"(?:[2-489]\\\\d|55)\\\\d{6}\",[8],[[\"(\\\\d{2})(\\\\d{2})(\\\\d{4})\",\"$1 $2 $3\",[\"[2-589]\"]]]],\"HU\":[\"36\",\"00\",\"[235-7]\\\\d{8}|[1-9]\\\\d{7}\",[8,9],[[\"(\\\\d)(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"1\"],\"(06 $1)\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"[27][2-9]|3[2-7]|4[24-9]|5[2-79]|6|8[2-57-9]|9[2-69]\"],\"(06 $1)\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{3,4})\",\"$1 $2 $3\",[\"[2-9]\"],\"06 $1\"]],\"06\"],\"ID\":[\"62\",\"00[89]\",\"(?:(?:00[1-9]|8\\\\d)\\\\d{4}|[1-36])\\\\d{6}|00\\\\d{10}|[1-9]\\\\d{8,10}|[2-9]\\\\d{7}\",[7,8,9,10,11,12,13],[[\"(\\\\d)(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"15\"]],[\"(\\\\d{2})(\\\\d{5,9})\",\"$1 $2\",[\"2[124]|[36]1\"],\"(0$1)\"],[\"(\\\\d{3})(\\\\d{5,7})\",\"$1 $2\",[\"800\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{5,8})\",\"$1 $2\",[\"[2-79]\"],\"(0$1)\"],[\"(\\\\d{3})(\\\\d{3,4})(\\\\d{3})\",\"$1-$2-$3\",[\"8[1-35-9]\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{6,8})\",\"$1 $2\",[\"1\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"804\"],\"0$1\"],[\"(\\\\d{3})(\\\\d)(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3 $4\",[\"80\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{4})(\\\\d{4,5})\",\"$1-$2-$3\",[\"8\"],\"0$1\"]],\"0\"],\"IE\":[\"353\",\"00\",\"(?:1\\\\d|[2569])\\\\d{6,8}|4\\\\d{6,9}|7\\\\d{8}|8\\\\d{8,9}\",[7,8,9,10],[[\"(\\\\d{2})(\\\\d{5})\",\"$1 $2\",[\"2[24-9]|47|58|6[237-9]|9[35-9]\"],\"(0$1)\"],[\"(\\\\d{3})(\\\\d{5})\",\"$1 $2\",[\"[45]0\"],\"(0$1)\"],[\"(\\\\d)(\\\\d{3,4})(\\\\d{4})\",\"$1 $2 $3\",[\"1\"],\"(0$1)\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{3,4})\",\"$1 $2 $3\",[\"[2569]|4[1-69]|7[14]\"],\"(0$1)\"],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"70\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"81\"],\"(0$1)\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"[78]\"],\"0$1\"],[\"(\\\\d{4})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"1\"]],[\"(\\\\d{2})(\\\\d{4})(\\\\d{4})\",\"$1 $2 $3\",[\"4\"],\"(0$1)\"],[\"(\\\\d{2})(\\\\d)(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3 $4\",[\"8\"],\"0$1\"]],\"0\"],\"IL\":[\"972\",\"0(?:0|1[2-9])\",\"1\\\\d{6}(?:\\\\d{3,5})?|[57]\\\\d{8}|[1-489]\\\\d{7}\",[7,8,9,10,11,12],[[\"(\\\\d{4})(\\\\d{3})\",\"$1-$2\",[\"125\"]],[\"(\\\\d{4})(\\\\d{2})(\\\\d{2})\",\"$1-$2-$3\",[\"121\"]],[\"(\\\\d)(\\\\d{3})(\\\\d{4})\",\"$1-$2-$3\",[\"[2-489]\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\",\"$1-$2-$3\",[\"[57]\"],\"0$1\"],[\"(\\\\d{4})(\\\\d{3})(\\\\d{3})\",\"$1-$2-$3\",[\"12\"]],[\"(\\\\d{4})(\\\\d{6})\",\"$1-$2\",[\"159\"]],[\"(\\\\d)(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1-$2-$3-$4\",[\"1[7-9]\"]],[\"(\\\\d{3})(\\\\d{1,2})(\\\\d{3})(\\\\d{4})\",\"$1-$2 $3-$4\",[\"15\"]]],\"0\"],\"IM\":[\"44\",\"00\",\"1624\\\\d{6}|(?:[3578]\\\\d|90)\\\\d{8}\",[10],0,\"0\",0,\"([25-8]\\\\d{5})$|0\",\"1624$1\",0,\"74576|(?:16|7[56])24\"],\"IN\":[\"91\",\"00\",\"(?:000800|[2-9]\\\\d\\\\d)\\\\d{7}|1\\\\d{7,12}\",[8,9,10,11,12,13],[[\"(\\\\d{8})\",\"$1\",[\"5(?:0|2[23]|3[03]|[67]1|88)\",\"5(?:0|2(?:21|3)|3(?:0|3[23])|616|717|888)\",\"5(?:0|2(?:21|3)|3(?:0|3[23])|616|717|8888)\"],0,1],[\"(\\\\d{4})(\\\\d{4,5})\",\"$1 $2\",[\"180\",\"1800\"],0,1],[\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"140\"],0,1],[\"(\\\\d{2})(\\\\d{4})(\\\\d{4})\",\"$1 $2 $3\",[\"11|2[02]|33|4[04]|79[1-7]|80[2-46]\",\"11|2[02]|33|4[04]|79(?:[1-6]|7[19])|80(?:[2-4]|6[0-589])\",\"11|2[02]|33|4[04]|79(?:[124-6]|3(?:[02-9]|1[0-24-9])|7(?:1|9[1-6]))|80(?:[2-4]|6[0-589])\"],\"0$1\",1],[\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"1(?:2[0-249]|3[0-25]|4[145]|[68]|7[1257])|2(?:1[257]|3[013]|4[01]|5[0137]|6[0158]|78|8[1568])|3(?:26|4[1-3]|5[34]|6[01489]|7[02-46]|8[159])|4(?:1[36]|2[1-47]|5[12]|6[0-26-9]|7[0-24-9]|8[013-57]|9[014-7])|5(?:1[025]|22|[36][25]|4[28]|5[12]|[78]1)|6(?:12|[2-4]1|5[17]|6[13]|80)|7(?:12|3[134]|4[47]|61|88)|8(?:16|2[014]|3[126]|6[136]|7[078]|8[34]|91)|(?:43|59|75)[15]|(?:1[59]|29|67|72)[14]\",\"1(?:2[0-24]|3[0-25]|4[145]|[59][14]|6[1-9]|7[1257]|8[1-57-9])|2(?:1[257]|3[013]|4[01]|5[0137]|6[058]|78|8[1568]|9[14])|3(?:26|4[1-3]|5[34]|6[01489]|7[02-46]|8[159])|4(?:1[36]|2[1-47]|3[15]|5[12]|6[0-26-9]|7[0-24-9]|8[013-57]|9[014-7])|5(?:1[025]|22|[36][25]|4[28]|[578]1|9[15])|674|7(?:(?:2[14]|3[34]|5[15])[2-6]|61[346]|88[0-8])|8(?:70[2-6]|84[235-7]|91[3-7])|(?:1(?:29|60|8[06])|261|552|6(?:12|[2-47]1|5[17]|6[13]|80)|7(?:12|31|4[47])|8(?:16|2[014]|3[126]|6[136]|7[78]|83))[2-7]\",\"1(?:2[0-24]|3[0-25]|4[145]|[59][14]|6[1-9]|7[1257]|8[1-57-9])|2(?:1[257]|3[013]|4[01]|5[0137]|6[058]|78|8[1568]|9[14])|3(?:26|4[1-3]|5[34]|6[01489]|7[02-46]|8[159])|4(?:1[36]|2[1-47]|3[15]|5[12]|6[0-26-9]|7[0-24-9]|8[013-57]|9[014-7])|5(?:1[025]|22|[36][25]|4[28]|[578]1|9[15])|6(?:12(?:[2-6]|7[0-8])|74[2-7])|7(?:(?:2[14]|5[15])[2-6]|3171|61[346]|88(?:[2-7]|82))|8(?:70[2-6]|84(?:[2356]|7[19])|91(?:[3-6]|7[19]))|73[134][2-6]|(?:74[47]|8(?:16|2[014]|3[126]|6[136]|7[78]|83))(?:[2-6]|7[19])|(?:1(?:29|60|8[06])|261|552|6(?:[2-4]1|5[17]|6[13]|7(?:1|4[0189])|80)|7(?:12|88[01]))[2-7]\"],\"0$1\",1],[\"(\\\\d{4})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"1(?:[2-479]|5[0235-9])|[2-5]|6(?:1[1358]|2[2457-9]|3[2-5]|4[235-7]|5[2-689]|6[24578]|7[235689]|8[1-6])|7(?:1[013-9]|28|3[129]|4[1-35689]|5[29]|6[02-5]|70)|807\",\"1(?:[2-479]|5[0235-9])|[2-5]|6(?:1[1358]|2(?:[2457]|84|95)|3(?:[2-4]|55)|4[235-7]|5[2-689]|6[24578]|7[235689]|8[1-6])|7(?:1(?:[013-8]|9[6-9])|28[6-8]|3(?:17|2[0-49]|9[2-57])|4(?:1[2-4]|[29][0-7]|3[0-8]|[56]|8[0-24-7])|5(?:2[1-3]|9[0-6])|6(?:0[5689]|2[5-9]|3[02-8]|4|5[0-367])|70[13-7])|807[19]\",\"1(?:[2-479]|5(?:[0236-9]|5[013-9]))|[2-5]|6(?:2(?:84|95)|355|83)|73179|807(?:1|9[1-3])|(?:1552|6(?:1[1358]|2[2457]|3[2-4]|4[235-7]|5[2-689]|6[24578]|7[235689]|8[124-6])\\\\d|7(?:1(?:[013-8]\\\\d|9[6-9])|28[6-8]|3(?:2[0-49]|9[2-57])|4(?:1[2-4]|[29][0-7]|3[0-8]|[56]\\\\d|8[0-24-7])|5(?:2[1-3]|9[0-6])|6(?:0[5689]|2[5-9]|3[02-8]|4\\\\d|5[0-367])|70[13-7]))[2-7]\"],\"0$1\",1],[\"(\\\\d{5})(\\\\d{5})\",\"$1 $2\",[\"[6-9]\"],\"0$1\",1],[\"(\\\\d{4})(\\\\d{2,4})(\\\\d{4})\",\"$1 $2 $3\",[\"1(?:6|8[06])\",\"1(?:6|8[06]0)\"],0,1],[\"(\\\\d{4})(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3 $4\",[\"18\"],0,1]],\"0\"],\"IO\":[\"246\",\"00\",\"3\\\\d{6}\",[7],[[\"(\\\\d{3})(\\\\d{4})\",\"$1 $2\",[\"3\"]]]],\"IQ\":[\"964\",\"00\",\"(?:1|7\\\\d\\\\d)\\\\d{7}|[2-6]\\\\d{7,8}\",[8,9,10],[[\"(\\\\d)(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"1\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{3,4})\",\"$1 $2 $3\",[\"[2-6]\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"7\"],\"0$1\"]],\"0\"],\"IR\":[\"98\",\"00\",\"[1-9]\\\\d{9}|(?:[1-8]\\\\d\\\\d|9)\\\\d{3,4}\",[4,5,6,7,10],[[\"(\\\\d{4,5})\",\"$1\",[\"96\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{4,5})\",\"$1 $2\",[\"(?:1[137]|2[13-68]|3[1458]|4[145]|5[1468]|6[16]|7[1467]|8[13467])[12689]\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3,4})\",\"$1 $2 $3\",[\"9\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{4})(\\\\d{4})\",\"$1 $2 $3\",[\"[1-8]\"],\"0$1\"]],\"0\"],\"IS\":[\"354\",\"00|1(?:0(?:01|[12]0)|100)\",\"(?:38\\\\d|[4-9])\\\\d{6}\",[7,9],[[\"(\\\\d{3})(\\\\d{4})\",\"$1 $2\",[\"[4-9]\"]],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"3\"]]],0,0,0,0,0,0,0,\"00\"],\"IT\":[\"39\",\"00\",\"0\\\\d{5,10}|1\\\\d{8,10}|3(?:[0-8]\\\\d{7,10}|9\\\\d{7,8})|(?:43|55|70)\\\\d{8}|8\\\\d{5}(?:\\\\d{2,4})?\",[6,7,8,9,10,11],[[\"(\\\\d{2})(\\\\d{4,6})\",\"$1 $2\",[\"0[26]\"]],[\"(\\\\d{3})(\\\\d{3,6})\",\"$1 $2\",[\"0[13-57-9][0159]|8(?:03|4[17]|9[2-5])\",\"0[13-57-9][0159]|8(?:03|4[17]|9(?:2|3[04]|[45][0-4]))\"]],[\"(\\\\d{4})(\\\\d{2,6})\",\"$1 $2\",[\"0(?:[13-579][2-46-8]|8[236-8])\"]],[\"(\\\\d{4})(\\\\d{4})\",\"$1 $2\",[\"894\"]],[\"(\\\\d{2})(\\\\d{3,4})(\\\\d{4})\",\"$1 $2 $3\",[\"0[26]|5\"]],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3,4})\",\"$1 $2 $3\",[\"1(?:44|[679])|[378]|43\"]],[\"(\\\\d{3})(\\\\d{3,4})(\\\\d{4})\",\"$1 $2 $3\",[\"0[13-57-9][0159]|14\"]],[\"(\\\\d{2})(\\\\d{4})(\\\\d{5})\",\"$1 $2 $3\",[\"0[26]\"]],[\"(\\\\d{4})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"0\"]],[\"(\\\\d{3})(\\\\d{4})(\\\\d{4,5})\",\"$1 $2 $3\",[\"3\"]]],0,0,0,0,0,0,[[\"0669[0-79]\\\\d{1,6}|0(?:1(?:[0159]\\\\d|[27][1-5]|31|4[1-4]|6[1356]|8[2-57])|2\\\\d\\\\d|3(?:[0159]\\\\d|2[1-4]|3[12]|[48][1-6]|6[2-59]|7[1-7])|4(?:[0159]\\\\d|[23][1-9]|4[245]|6[1-5]|7[1-4]|81)|5(?:[0159]\\\\d|2[1-5]|3[2-6]|4[1-79]|6[4-6]|7[1-578]|8[3-8])|6(?:[0-57-9]\\\\d|6[0-8])|7(?:[0159]\\\\d|2[12]|3[1-7]|4[2-46]|6[13569]|7[13-6]|8[1-59])|8(?:[0159]\\\\d|2[3-578]|3[1-356]|[6-8][1-5])|9(?:[0159]\\\\d|[238][1-5]|4[12]|6[1-8]|7[1-6]))\\\\d{2,7}\"],[\"3[2-9]\\\\d{7,8}|(?:31|43)\\\\d{8}\",[9,10]],[\"80(?:0\\\\d{3}|3)\\\\d{3}\",[6,9]],[\"(?:0878\\\\d{3}|89(?:2\\\\d|3[04]|4(?:[0-4]|[5-9]\\\\d\\\\d)|5[0-4]))\\\\d\\\\d|(?:1(?:44|6[346])|89(?:38|5[5-9]|9))\\\\d{6}\",[6,8,9,10]],[\"1(?:78\\\\d|99)\\\\d{6}\",[9,10]],0,0,0,[\"55\\\\d{8}\",[10]],[\"84(?:[08]\\\\d{3}|[17])\\\\d{3}\",[6,9]]]],\"JE\":[\"44\",\"00\",\"1534\\\\d{6}|(?:[3578]\\\\d|90)\\\\d{8}\",[10],0,\"0\",0,\"([0-24-8]\\\\d{5})$|0\",\"1534$1\",0,0,[[\"1534[0-24-8]\\\\d{5}\"],[\"7(?:(?:(?:50|82)9|937)\\\\d|7(?:00[378]|97\\\\d))\\\\d{5}\"],[\"80(?:07(?:35|81)|8901)\\\\d{4}\"],[\"(?:8(?:4(?:4(?:4(?:05|42|69)|703)|5(?:041|800))|7(?:0002|1206))|90(?:066[59]|1810|71(?:07|55)))\\\\d{4}\"],[\"701511\\\\d{4}\"],0,[\"(?:3(?:0(?:07(?:35|81)|8901)|3\\\\d{4}|4(?:4(?:4(?:05|42|69)|703)|5(?:041|800))|7(?:0002|1206))|55\\\\d{4})\\\\d{4}\"],[\"76(?:464|652)\\\\d{5}|76(?:0[0-28]|2[356]|34|4[01347]|5[49]|6[0-369]|77|8[14]|9[139])\\\\d{6}\"],[\"56\\\\d{8}\"]]],\"JM\":[\"1\",\"011\",\"(?:[58]\\\\d\\\\d|658|900)\\\\d{7}\",[10],0,\"1\",0,0,0,0,\"658|876\"],\"JO\":[\"962\",\"00\",\"(?:(?:[2689]|7\\\\d)\\\\d|32|53)\\\\d{6}\",[8,9],[[\"(\\\\d)(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"[2356]|87\"],\"(0$1)\"],[\"(\\\\d{3})(\\\\d{5,6})\",\"$1 $2\",[\"[89]\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{7})\",\"$1 $2\",[\"70\"],\"0$1\"],[\"(\\\\d)(\\\\d{4})(\\\\d{4})\",\"$1 $2 $3\",[\"7\"],\"0$1\"]],\"0\"],\"JP\":[\"81\",\"010\",\"00[1-9]\\\\d{6,14}|[257-9]\\\\d{9}|(?:00|[1-9]\\\\d\\\\d)\\\\d{6}\",[8,9,10,11,12,13,14,15,16,17],[[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1-$2-$3\",[\"(?:12|57|99)0\"],\"0$1\"],[\"(\\\\d{4})(\\\\d)(\\\\d{4})\",\"$1-$2-$3\",[\"1(?:26|3[79]|4[56]|5[4-68]|6[3-5])|499|5(?:76|97)|746|8(?:3[89]|47|51)|9(?:80|9[16])\",\"1(?:267|3(?:7[247]|9[278])|466|5(?:47|58|64)|6(?:3[245]|48|5[4-68]))|499[2468]|5(?:76|97)9|7468|8(?:3(?:8[7-9]|96)|477|51[2-9])|9(?:802|9(?:1[23]|69))|1(?:45|58)[67]\",\"1(?:267|3(?:7[247]|9[278])|466|5(?:47|58|64)|6(?:3[245]|48|5[4-68]))|499[2468]|5(?:769|979[2-69])|7468|8(?:3(?:8[7-9]|96[2457-9])|477|51[2-9])|9(?:802|9(?:1[23]|69))|1(?:45|58)[67]\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\",\"$1-$2-$3\",[\"60\"],\"0$1\"],[\"(\\\\d)(\\\\d{4})(\\\\d{4})\",\"$1-$2-$3\",[\"[36]|4(?:2[09]|7[01])\",\"[36]|4(?:2(?:0|9[02-69])|7(?:0[019]|1))\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\",\"$1-$2-$3\",[\"1(?:1|5[45]|77|88|9[69])|2(?:2[1-37]|3[0-269]|4[59]|5|6[24]|7[1-358]|8[1369]|9[0-38])|4(?:[28][1-9]|3[0-57]|[45]|6[248]|7[2-579]|9[29])|5(?:2|3[0459]|4[0-369]|5[29]|8[02389]|9[0-389])|7(?:2[02-46-9]|34|[58]|6[0249]|7[57]|9[2-6])|8(?:2[124589]|3[26-9]|49|51|6|7[0-468]|8[68]|9[019])|9(?:[23][1-9]|4[15]|5[138]|6[1-3]|7[156]|8[189]|9[1-489])\",\"1(?:1|5(?:4[018]|5[017])|77|88|9[69])|2(?:2(?:[127]|3[014-9])|3[0-269]|4[59]|5(?:[1-3]|5[0-69]|9[19])|62|7(?:[1-35]|8[0189])|8(?:[16]|3[0134]|9[0-5])|9(?:[028]|17))|4(?:2(?:[13-79]|8[014-6])|3[0-57]|[45]|6[248]|7[2-47]|8[1-9]|9[29])|5(?:2|3(?:[045]|9[0-8])|4[0-369]|5[29]|8[02389]|9[0-3])|7(?:2[02-46-9]|34|[58]|6[0249]|7[57]|9(?:[23]|4[0-59]|5[01569]|6[0167]))|8(?:2(?:[1258]|4[0-39]|9[0-2469])|3(?:[29]|60)|49|51|6(?:[0-24]|36|5[0-3589]|7[23]|9[01459])|7[0-468]|8[68])|9(?:[23][1-9]|4[15]|5[138]|6[1-3]|7[156]|8[189]|9(?:[1289]|3[34]|4[0178]))|(?:264|837)[016-9]|2(?:57|93)[015-9]|(?:25[0468]|422|838)[01]|(?:47[59]|59[89]|8(?:6[68]|9))[019]\",\"1(?:1|5(?:4[018]|5[017])|77|88|9[69])|2(?:2[127]|3[0-269]|4[59]|5(?:[1-3]|5[0-69]|9(?:17|99))|6(?:2|4[016-9])|7(?:[1-35]|8[0189])|8(?:[16]|3[0134]|9[0-5])|9(?:[028]|17))|4(?:2(?:[13-79]|8[014-6])|3[0-57]|[45]|6[248]|7[2-47]|9[29])|5(?:2|3(?:[045]|9(?:[0-58]|6[4-9]|7[0-35689]))|4[0-369]|5[29]|8[02389]|9[0-3])|7(?:2[02-46-9]|34|[58]|6[0249]|7[57]|9(?:[23]|4[0-59]|5[01569]|6[0167]))|8(?:2(?:[1258]|4[0-39]|9[0169])|3(?:[29]|60|7(?:[017-9]|6[6-8]))|49|51|6(?:[0-24]|36[2-57-9]|5(?:[0-389]|5[23])|6(?:[01]|9[178])|7(?:2[2-468]|3[78])|9[0145])|7[0-468]|8[68])|9(?:4[15]|5[138]|7[156]|8[189]|9(?:[1289]|3(?:31|4[357])|4[0178]))|(?:8294|96)[1-3]|2(?:57|93)[015-9]|(?:223|8699)[014-9]|(?:25[0468]|422|838)[01]|(?:48|8292|9[23])[1-9]|(?:47[59]|59[89]|8(?:68|9))[019]\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{2})(\\\\d{4})\",\"$1-$2-$3\",[\"[14]|[289][2-9]|5[3-9]|7[2-4679]\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\",\"$1-$2-$3\",[\"800\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{4})(\\\\d{4})\",\"$1-$2-$3\",[\"[257-9]\"],\"0$1\"]],\"0\",0,\"(000[259]\\\\d{6})$|(?:(?:003768)0?)|0\",\"$1\"],\"KE\":[\"254\",\"000\",\"(?:[17]\\\\d\\\\d|900)\\\\d{6}|(?:2|80)0\\\\d{6,7}|[4-6]\\\\d{6,8}\",[7,8,9,10],[[\"(\\\\d{2})(\\\\d{5,7})\",\"$1 $2\",[\"[24-6]\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{6})\",\"$1 $2\",[\"[17]\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3,4})\",\"$1 $2 $3\",[\"[89]\"],\"0$1\"]],\"0\"],\"KG\":[\"996\",\"00\",\"8\\\\d{9}|[235-9]\\\\d{8}\",[9,10],[[\"(\\\\d{4})(\\\\d{5})\",\"$1 $2\",[\"3(?:1[346]|[24-79])\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"[235-79]|88\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{3})(\\\\d)(\\\\d{2,3})\",\"$1 $2 $3 $4\",[\"8\"],\"0$1\"]],\"0\"],\"KH\":[\"855\",\"00[14-9]\",\"1\\\\d{9}|[1-9]\\\\d{7,8}\",[8,9,10],[[\"(\\\\d{2})(\\\\d{3})(\\\\d{3,4})\",\"$1 $2 $3\",[\"[1-9]\"],\"0$1\"],[\"(\\\\d{4})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"1\"]]],\"0\"],\"KI\":[\"686\",\"00\",\"(?:[37]\\\\d|6[0-79])\\\\d{6}|(?:[2-48]\\\\d|50)\\\\d{3}\",[5,8],0,\"0\"],\"KM\":[\"269\",\"00\",\"[3478]\\\\d{6}\",[7],[[\"(\\\\d{3})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3\",[\"[3478]\"]]]],\"KN\":[\"1\",\"011\",\"(?:[58]\\\\d\\\\d|900)\\\\d{7}\",[10],0,\"1\",0,\"([2-7]\\\\d{6})$|1\",\"869$1\",0,\"869\"],\"KP\":[\"850\",\"00|99\",\"85\\\\d{6}|(?:19\\\\d|[2-7])\\\\d{7}\",[8,10],[[\"(\\\\d{2})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"8\"],\"0$1\"],[\"(\\\\d)(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"[2-7]\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"1\"],\"0$1\"]],\"0\"],\"KR\":[\"82\",\"00(?:[125689]|3(?:[46]5|91)|7(?:00|27|3|55|6[126]))\",\"00[1-9]\\\\d{8,11}|(?:[12]|5\\\\d{3})\\\\d{7}|[13-6]\\\\d{9}|(?:[1-6]\\\\d|80)\\\\d{7}|[3-6]\\\\d{4,5}|(?:00|7)0\\\\d{8}\",[5,6,8,9,10,11,12,13,14],[[\"(\\\\d{2})(\\\\d{3,4})\",\"$1-$2\",[\"(?:3[1-3]|[46][1-4]|5[1-5])1\"],\"0$1\"],[\"(\\\\d{4})(\\\\d{4})\",\"$1-$2\",[\"1\"]],[\"(\\\\d)(\\\\d{3,4})(\\\\d{4})\",\"$1-$2-$3\",[\"2\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\",\"$1-$2-$3\",[\"60|8\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3,4})(\\\\d{4})\",\"$1-$2-$3\",[\"[1346]|5[1-5]\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{4})(\\\\d{4})\",\"$1-$2-$3\",[\"[57]\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{5})(\\\\d{4})\",\"$1-$2-$3\",[\"5\"],\"0$1\"]],\"0\",0,\"0(8(?:[1-46-8]|5\\\\d\\\\d))?\"],\"KW\":[\"965\",\"00\",\"18\\\\d{5}|(?:[2569]\\\\d|41)\\\\d{6}\",[7,8],[[\"(\\\\d{4})(\\\\d{3,4})\",\"$1 $2\",[\"[169]|2(?:[235]|4[1-35-9])|52\"]],[\"(\\\\d{3})(\\\\d{5})\",\"$1 $2\",[\"[245]\"]]]],\"KY\":[\"1\",\"011\",\"(?:345|[58]\\\\d\\\\d|900)\\\\d{7}\",[10],0,\"1\",0,\"([2-9]\\\\d{6})$|1\",\"345$1\",0,\"345\"],\"KZ\":[\"7\",\"810\",\"(?:33622|8\\\\d{8})\\\\d{5}|[78]\\\\d{9}\",[10,14],0,\"8\",0,0,0,0,\"33|7\",0,\"8~10\"],\"LA\":[\"856\",\"00\",\"[23]\\\\d{9}|3\\\\d{8}|(?:[235-8]\\\\d|41)\\\\d{6}\",[8,9,10],[[\"(\\\\d{2})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"2[13]|3[14]|[4-8]\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{3})\",\"$1 $2 $3 $4\",[\"30[013-9]\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{2})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3 $4\",[\"[23]\"],\"0$1\"]],\"0\"],\"LB\":[\"961\",\"00\",\"[27-9]\\\\d{7}|[13-9]\\\\d{6}\",[7,8],[[\"(\\\\d)(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"[13-69]|7(?:[2-57]|62|8[0-7]|9[04-9])|8[02-9]\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"[27-9]\"]]],\"0\"],\"LC\":[\"1\",\"011\",\"(?:[58]\\\\d\\\\d|758|900)\\\\d{7}\",[10],0,\"1\",0,\"([2-8]\\\\d{6})$|1\",\"758$1\",0,\"758\"],\"LI\":[\"423\",\"00\",\"[68]\\\\d{8}|(?:[2378]\\\\d|90)\\\\d{5}\",[7,9],[[\"(\\\\d{3})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3\",[\"[2379]|8(?:0[09]|7)\",\"[2379]|8(?:0(?:02|9)|7)\"]],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"8\"]],[\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"69\"]],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"6\"]]],\"0\",0,\"(1001)|0\"],\"LK\":[\"94\",\"00\",\"[1-9]\\\\d{8}\",[9],[[\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"7\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"[1-689]\"],\"0$1\"]],\"0\"],\"LR\":[\"231\",\"00\",\"(?:[245]\\\\d|33|77|88)\\\\d{7}|(?:2\\\\d|[4-6])\\\\d{6}\",[7,8,9],[[\"(\\\\d)(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"4[67]|[56]\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"2\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"[2-578]\"],\"0$1\"]],\"0\"],\"LS\":[\"266\",\"00\",\"(?:[256]\\\\d\\\\d|800)\\\\d{5}\",[8],[[\"(\\\\d{4})(\\\\d{4})\",\"$1 $2\",[\"[2568]\"]]]],\"LT\":[\"370\",\"00\",\"(?:[3469]\\\\d|52|[78]0)\\\\d{6}\",[8],[[\"(\\\\d)(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"52[0-7]\"],\"(8-$1)\",1],[\"(\\\\d{3})(\\\\d{2})(\\\\d{3})\",\"$1 $2 $3\",[\"[7-9]\"],\"8 $1\",1],[\"(\\\\d{2})(\\\\d{6})\",\"$1 $2\",[\"37|4(?:[15]|6[1-8])\"],\"(8-$1)\",1],[\"(\\\\d{3})(\\\\d{5})\",\"$1 $2\",[\"[3-6]\"],\"(8-$1)\",1]],\"8\",0,\"[08]\"],\"LU\":[\"352\",\"00\",\"35[013-9]\\\\d{4,8}|6\\\\d{8}|35\\\\d{2,4}|(?:[2457-9]\\\\d|3[0-46-9])\\\\d{2,9}\",[4,5,6,7,8,9,10,11],[[\"(\\\\d{2})(\\\\d{3})\",\"$1 $2\",[\"2(?:0[2-689]|[2-9])|[3-57]|8(?:0[2-9]|[13-9])|9(?:0[89]|[2-579])\"]],[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3\",[\"2(?:0[2-689]|[2-9])|[3-57]|8(?:0[2-9]|[13-9])|9(?:0[89]|[2-579])\"]],[\"(\\\\d{2})(\\\\d{2})(\\\\d{3})\",\"$1 $2 $3\",[\"20[2-689]\"]],[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{1,2})\",\"$1 $2 $3 $4\",[\"2(?:[0367]|4[3-8])\"]],[\"(\\\\d{3})(\\\\d{2})(\\\\d{3})\",\"$1 $2 $3\",[\"80[01]|90[015]\"]],[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{3})\",\"$1 $2 $3 $4\",[\"20\"]],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"6\"]],[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{1,2})\",\"$1 $2 $3 $4 $5\",[\"2(?:[0367]|4[3-8])\"]],[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{1,5})\",\"$1 $2 $3 $4\",[\"[3-57]|8[13-9]|9(?:0[89]|[2-579])|(?:2|80)[2-9]\"]]],0,0,\"(15(?:0[06]|1[12]|[35]5|4[04]|6[26]|77|88|99)\\\\d)\"],\"LV\":[\"371\",\"00\",\"(?:[268]\\\\d|90)\\\\d{6}\",[8],[[\"(\\\\d{2})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"[269]|8[01]\"]]]],\"LY\":[\"218\",\"00\",\"[2-9]\\\\d{8}\",[9],[[\"(\\\\d{2})(\\\\d{7})\",\"$1-$2\",[\"[2-9]\"],\"0$1\"]],\"0\"],\"MA\":[\"212\",\"00\",\"[5-8]\\\\d{8}\",[9],[[\"(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"5[45]\"],\"0$1\"],[\"(\\\\d{4})(\\\\d{5})\",\"$1-$2\",[\"5(?:2[2-46-9]|3[3-9]|9)|8(?:0[89]|92)\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{7})\",\"$1-$2\",[\"8\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{6})\",\"$1-$2\",[\"[5-7]\"],\"0$1\"]],\"0\",0,0,0,0,0,[[\"5(?:2(?:[0-25-79]\\\\d|3[1-578]|4[02-46-8]|8[0235-7])|3(?:[0-47]\\\\d|5[02-9]|6[02-8]|8[014-9]|9[3-9])|(?:4[067]|5[03])\\\\d)\\\\d{5}\"],[\"(?:6(?:[0-79]\\\\d|8[0-247-9])|7(?:[0167]\\\\d|2[0-4]|5[01]|8[0-3]))\\\\d{6}\"],[\"80[0-7]\\\\d{6}\"],[\"89\\\\d{7}\"],0,0,0,0,[\"(?:592(?:4[0-2]|93)|80[89]\\\\d\\\\d)\\\\d{4}\"]]],\"MC\":[\"377\",\"00\",\"(?:[3489]|6\\\\d)\\\\d{7}\",[8,9],[[\"(\\\\d{2})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"4\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"[389]\"]],[\"(\\\\d)(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4 $5\",[\"6\"],\"0$1\"]],\"0\"],\"MD\":[\"373\",\"00\",\"(?:[235-7]\\\\d|[89]0)\\\\d{6}\",[8],[[\"(\\\\d{3})(\\\\d{5})\",\"$1 $2\",[\"[89]\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"22|3\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{2})(\\\\d{3})\",\"$1 $2 $3\",[\"[25-7]\"],\"0$1\"]],\"0\"],\"ME\":[\"382\",\"00\",\"(?:20|[3-79]\\\\d)\\\\d{6}|80\\\\d{6,7}\",[8,9],[[\"(\\\\d{2})(\\\\d{3})(\\\\d{3,4})\",\"$1 $2 $3\",[\"[2-9]\"],\"0$1\"]],\"0\"],\"MF\":[\"590\",\"00\",\"590\\\\d{6}|(?:69|80|9\\\\d)\\\\d{7}\",[9],0,\"0\",0,0,0,0,0,[[\"590(?:0[079]|[14]3|[27][79]|3[03-7]|5[0-268]|87)\\\\d{4}\"],[\"69(?:0\\\\d\\\\d|1(?:2[2-9]|3[0-5])|4(?:0[89]|1[2-6]|9\\\\d)|6(?:1[016-9]|5[0-4]|[67]\\\\d))\\\\d{4}\"],[\"80[0-5]\\\\d{6}\"],0,0,0,0,0,[\"9(?:(?:39[5-7]|76[018])\\\\d|475[0-5])\\\\d{4}\"]]],\"MG\":[\"261\",\"00\",\"[23]\\\\d{8}\",[9],[[\"(\\\\d{2})(\\\\d{2})(\\\\d{3})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"[23]\"],\"0$1\"]],\"0\",0,\"([24-9]\\\\d{6})$|0\",\"20$1\"],\"MH\":[\"692\",\"011\",\"329\\\\d{4}|(?:[256]\\\\d|45)\\\\d{5}\",[7],[[\"(\\\\d{3})(\\\\d{4})\",\"$1-$2\",[\"[2-6]\"]]],\"1\"],\"MK\":[\"389\",\"00\",\"[2-578]\\\\d{7}\",[8],[[\"(\\\\d)(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"2|34[47]|4(?:[37]7|5[47]|64)\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"[347]\"],\"0$1\"],[\"(\\\\d{3})(\\\\d)(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"[58]\"],\"0$1\"]],\"0\"],\"ML\":[\"223\",\"00\",\"[24-9]\\\\d{7}\",[8],[[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"[24-9]\"]]]],\"MM\":[\"95\",\"00\",\"1\\\\d{5,7}|95\\\\d{6}|(?:[4-7]|9[0-46-9])\\\\d{6,8}|(?:2|8\\\\d)\\\\d{5,8}\",[6,7,8,9,10],[[\"(\\\\d)(\\\\d{2})(\\\\d{3})\",\"$1 $2 $3\",[\"16|2\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{2})(\\\\d{3})\",\"$1 $2 $3\",[\"[45]|6(?:0[23]|[1-689]|7[235-7])|7(?:[0-4]|5[2-7])|8[1-6]\"],\"0$1\"],[\"(\\\\d)(\\\\d{3})(\\\\d{3,4})\",\"$1 $2 $3\",[\"[12]\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{3,4})\",\"$1 $2 $3\",[\"[4-7]|8[1-35]\"],\"0$1\"],[\"(\\\\d)(\\\\d{3})(\\\\d{4,6})\",\"$1 $2 $3\",[\"9(?:2[0-4]|[35-9]|4[137-9])\"],\"0$1\"],[\"(\\\\d)(\\\\d{4})(\\\\d{4})\",\"$1 $2 $3\",[\"2\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"8\"],\"0$1\"],[\"(\\\\d)(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3 $4\",[\"92\"],\"0$1\"],[\"(\\\\d)(\\\\d{5})(\\\\d{4})\",\"$1 $2 $3\",[\"9\"],\"0$1\"]],\"0\"],\"MN\":[\"976\",\"001\",\"[12]\\\\d{7,9}|[5-9]\\\\d{7}\",[8,9,10],[[\"(\\\\d{2})(\\\\d{2})(\\\\d{4})\",\"$1 $2 $3\",[\"[12]1\"],\"0$1\"],[\"(\\\\d{4})(\\\\d{4})\",\"$1 $2\",[\"[5-9]\"]],[\"(\\\\d{3})(\\\\d{5,6})\",\"$1 $2\",[\"[12]2[1-3]\"],\"0$1\"],[\"(\\\\d{4})(\\\\d{5,6})\",\"$1 $2\",[\"[12](?:27|3[2-8]|4[2-68]|5[1-4689])\",\"[12](?:27|3[2-8]|4[2-68]|5[1-4689])[0-3]\"],\"0$1\"],[\"(\\\\d{5})(\\\\d{4,5})\",\"$1 $2\",[\"[12]\"],\"0$1\"]],\"0\"],\"MO\":[\"853\",\"00\",\"0800\\\\d{3}|(?:28|[68]\\\\d)\\\\d{6}\",[7,8],[[\"(\\\\d{4})(\\\\d{3})\",\"$1 $2\",[\"0\"]],[\"(\\\\d{4})(\\\\d{4})\",\"$1 $2\",[\"[268]\"]]]],\"MP\":[\"1\",\"011\",\"[58]\\\\d{9}|(?:67|90)0\\\\d{7}\",[10],0,\"1\",0,\"([2-9]\\\\d{6})$|1\",\"670$1\",0,\"670\"],\"MQ\":[\"596\",\"00\",\"596\\\\d{6}|(?:69|80|9\\\\d)\\\\d{7}\",[9],[[\"(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"[569]\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"8\"],\"0$1\"]],\"0\"],\"MR\":[\"222\",\"00\",\"(?:[2-4]\\\\d\\\\d|800)\\\\d{5}\",[8],[[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"[2-48]\"]]]],\"MS\":[\"1\",\"011\",\"(?:[58]\\\\d\\\\d|664|900)\\\\d{7}\",[10],0,\"1\",0,\"([34]\\\\d{6})$|1\",\"664$1\",0,\"664\"],\"MT\":[\"356\",\"00\",\"3550\\\\d{4}|(?:[2579]\\\\d\\\\d|800)\\\\d{5}\",[8],[[\"(\\\\d{4})(\\\\d{4})\",\"$1 $2\",[\"[2357-9]\"]]]],\"MU\":[\"230\",\"0(?:0|[24-7]0|3[03])\",\"(?:[57]|8\\\\d\\\\d)\\\\d{7}|[2-468]\\\\d{6}\",[7,8,10],[[\"(\\\\d{3})(\\\\d{4})\",\"$1 $2\",[\"[2-46]|8[013]\"]],[\"(\\\\d{4})(\\\\d{4})\",\"$1 $2\",[\"[57]\"]],[\"(\\\\d{5})(\\\\d{5})\",\"$1 $2\",[\"8\"]]],0,0,0,0,0,0,0,\"020\"],\"MV\":[\"960\",\"0(?:0|19)\",\"(?:800|9[0-57-9]\\\\d)\\\\d{7}|[34679]\\\\d{6}\",[7,10],[[\"(\\\\d{3})(\\\\d{4})\",\"$1-$2\",[\"[34679]\"]],[\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"[89]\"]]],0,0,0,0,0,0,0,\"00\"],\"MW\":[\"265\",\"00\",\"(?:[1289]\\\\d|31|77)\\\\d{7}|1\\\\d{6}\",[7,9],[[\"(\\\\d)(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"1[2-9]\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"2\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"[137-9]\"],\"0$1\"]],\"0\"],\"MX\":[\"52\",\"0[09]\",\"1(?:(?:22|44|7[27]|87|99)[1-9]|65[0-689])\\\\d{7}|(?:1(?:[01]\\\\d|2[13-9]|[35][1-9]|4[0-35-9]|6[0-46-9]|7[013-689]|8[1-69]|9[1-8])|[2-9]\\\\d)\\\\d{8}\",[10,11],[[\"(\\\\d{2})(\\\\d{4})(\\\\d{4})\",\"$1 $2 $3\",[\"33|5[56]|81\"],0,1],[\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"[2-9]\"],0,1],[\"(\\\\d)(\\\\d{2})(\\\\d{4})(\\\\d{4})\",\"$2 $3 $4\",[\"1(?:33|5[56]|81)\"],0,1],[\"(\\\\d)(\\\\d{3})(\\\\d{3})(\\\\d{4})\",\"$2 $3 $4\",[\"1\"],0,1]],\"01\",0,\"0(?:[12]|4[45])|1\",0,0,0,0,\"00\"],\"MY\":[\"60\",\"00\",\"1\\\\d{8,9}|(?:3\\\\d|[4-9])\\\\d{7}\",[8,9,10],[[\"(\\\\d)(\\\\d{3})(\\\\d{4})\",\"$1-$2 $3\",[\"[4-79]\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{3,4})\",\"$1-$2 $3\",[\"1(?:[02469]|[378][1-9]|53)|8\",\"1(?:[02469]|[37][1-9]|53|8(?:[1-46-9]|5[7-9]))|8\"],\"0$1\"],[\"(\\\\d)(\\\\d{4})(\\\\d{4})\",\"$1-$2 $3\",[\"3\"],\"0$1\"],[\"(\\\\d)(\\\\d{3})(\\\\d{2})(\\\\d{4})\",\"$1-$2-$3-$4\",[\"1(?:[367]|80)\"]],[\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\",\"$1-$2 $3\",[\"15\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{4})(\\\\d{4})\",\"$1-$2 $3\",[\"1\"],\"0$1\"]],\"0\"],\"MZ\":[\"258\",\"00\",\"(?:2|8\\\\d)\\\\d{7}\",[8,9],[[\"(\\\\d{2})(\\\\d{3})(\\\\d{3,4})\",\"$1 $2 $3\",[\"2|8[2-79]\"]],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"8\"]]]],\"NA\":[\"264\",\"00\",\"[68]\\\\d{7,8}\",[8,9],[[\"(\\\\d{2})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"88\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{3,4})\",\"$1 $2 $3\",[\"6\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"87\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"8\"],\"0$1\"]],\"0\"],\"NC\":[\"687\",\"00\",\"(?:050|[2-57-9]\\\\d\\\\d)\\\\d{3}\",[6],[[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1.$2.$3\",[\"[02-57-9]\"]]]],\"NE\":[\"227\",\"00\",\"[027-9]\\\\d{7}\",[8],[[\"(\\\\d{2})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"08\"]],[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"[089]|2[013]|7[047]\"]]]],\"NF\":[\"672\",\"00\",\"[13]\\\\d{5}\",[6],[[\"(\\\\d{2})(\\\\d{4})\",\"$1 $2\",[\"1[0-3]\"]],[\"(\\\\d)(\\\\d{5})\",\"$1 $2\",[\"[13]\"]]],0,0,\"([0-258]\\\\d{4})$\",\"3$1\"],\"NG\":[\"234\",\"009\",\"2[0-24-9]\\\\d{8}|[78]\\\\d{10,13}|[7-9]\\\\d{9}|[1-9]\\\\d{7}|[124-7]\\\\d{6}\",[7,8,10,11,12,13,14],[[\"(\\\\d{2})(\\\\d{2})(\\\\d{3})\",\"$1 $2 $3\",[\"78\"],\"0$1\"],[\"(\\\\d)(\\\\d{3})(\\\\d{3,4})\",\"$1 $2 $3\",[\"[12]|9(?:0[3-9]|[1-9])\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{2,3})\",\"$1 $2 $3\",[\"[3-6]|7(?:0[0-689]|[1-79])|8[2-9]\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3,4})\",\"$1 $2 $3\",[\"[7-9]\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"20[129]\"],\"0$1\"],[\"(\\\\d{4})(\\\\d{2})(\\\\d{4})\",\"$1 $2 $3\",[\"2\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{4})(\\\\d{4,5})\",\"$1 $2 $3\",[\"[78]\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{5})(\\\\d{5,6})\",\"$1 $2 $3\",[\"[78]\"],\"0$1\"]],\"0\"],\"NI\":[\"505\",\"00\",\"(?:1800|[25-8]\\\\d{3})\\\\d{4}\",[8],[[\"(\\\\d{4})(\\\\d{4})\",\"$1 $2\",[\"[125-8]\"]]]],\"NL\":[\"31\",\"00\",\"(?:[124-7]\\\\d\\\\d|3(?:[02-9]\\\\d|1[0-8]))\\\\d{6}|8\\\\d{6,9}|9\\\\d{6,10}|1\\\\d{4,5}\",[5,6,7,8,9,10,11],[[\"(\\\\d{3})(\\\\d{4,7})\",\"$1 $2\",[\"[89]0\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{7})\",\"$1 $2\",[\"66\"],\"0$1\"],[\"(\\\\d)(\\\\d{8})\",\"$1 $2\",[\"6\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"1[16-8]|2[259]|3[124]|4[17-9]|5[124679]\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"[1-578]|91\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{3})(\\\\d{5})\",\"$1 $2 $3\",[\"9\"],\"0$1\"]],\"0\"],\"NO\":[\"47\",\"00\",\"(?:0|[2-9]\\\\d{3})\\\\d{4}\",[5,8],[[\"(\\\\d{3})(\\\\d{2})(\\\\d{3})\",\"$1 $2 $3\",[\"8\"]],[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"[2-79]\"]]],0,0,0,0,0,\"[02-689]|7[0-8]\"],\"NP\":[\"977\",\"00\",\"(?:1\\\\d|9)\\\\d{9}|[1-9]\\\\d{7}\",[8,10,11],[[\"(\\\\d)(\\\\d{7})\",\"$1-$2\",[\"1[2-6]\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{6})\",\"$1-$2\",[\"1[01]|[2-8]|9(?:[1-59]|[67][2-6])\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{7})\",\"$1-$2\",[\"9\"]]],\"0\"],\"NR\":[\"674\",\"00\",\"(?:444|(?:55|8\\\\d)\\\\d|666)\\\\d{4}\",[7],[[\"(\\\\d{3})(\\\\d{4})\",\"$1 $2\",[\"[4-68]\"]]]],\"NU\":[\"683\",\"00\",\"(?:[4-7]|888\\\\d)\\\\d{3}\",[4,7],[[\"(\\\\d{3})(\\\\d{4})\",\"$1 $2\",[\"8\"]]]],\"NZ\":[\"64\",\"0(?:0|161)\",\"[1289]\\\\d{9}|50\\\\d{5}(?:\\\\d{2,3})?|[27-9]\\\\d{7,8}|(?:[34]\\\\d|6[0-35-9])\\\\d{6}|8\\\\d{4,6}\",[5,6,7,8,9,10],[[\"(\\\\d{2})(\\\\d{3,8})\",\"$1 $2\",[\"8[1-79]\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{2})(\\\\d{2,3})\",\"$1 $2 $3\",[\"50[036-8]|8|90\",\"50(?:[0367]|88)|8|90\"],\"0$1\"],[\"(\\\\d)(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"24|[346]|7[2-57-9]|9[2-9]\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3,4})\",\"$1 $2 $3\",[\"2(?:10|74)|[589]\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3,4})(\\\\d{4})\",\"$1 $2 $3\",[\"1|2[028]\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{3,5})\",\"$1 $2 $3\",[\"2(?:[169]|7[0-35-9])|7\"],\"0$1\"]],\"0\",0,0,0,0,0,0,\"00\"],\"OM\":[\"968\",\"00\",\"(?:1505|[279]\\\\d{3}|500)\\\\d{4}|800\\\\d{5,6}\",[7,8,9],[[\"(\\\\d{3})(\\\\d{4,6})\",\"$1 $2\",[\"[58]\"]],[\"(\\\\d{2})(\\\\d{6})\",\"$1 $2\",[\"2\"]],[\"(\\\\d{4})(\\\\d{4})\",\"$1 $2\",[\"[179]\"]]]],\"PA\":[\"507\",\"00\",\"(?:00800|8\\\\d{3})\\\\d{6}|[68]\\\\d{7}|[1-57-9]\\\\d{6}\",[7,8,10,11],[[\"(\\\\d{3})(\\\\d{4})\",\"$1-$2\",[\"[1-57-9]\"]],[\"(\\\\d{4})(\\\\d{4})\",\"$1-$2\",[\"[68]\"]],[\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"8\"]]]],\"PE\":[\"51\",\"00|19(?:1[124]|77|90)00\",\"(?:[14-8]|9\\\\d)\\\\d{7}\",[8,9],[[\"(\\\\d{3})(\\\\d{5})\",\"$1 $2\",[\"80\"],\"(0$1)\"],[\"(\\\\d)(\\\\d{7})\",\"$1 $2\",[\"1\"],\"(0$1)\"],[\"(\\\\d{2})(\\\\d{6})\",\"$1 $2\",[\"[4-8]\"],\"(0$1)\"],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"9\"]]],\"0\",0,0,0,0,0,0,\"00\",\" Anexo \"],\"PF\":[\"689\",\"00\",\"4\\\\d{5}(?:\\\\d{2})?|8\\\\d{7,8}\",[6,8,9],[[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3\",[\"44\"]],[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"4|8[7-9]\"]],[\"(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"8\"]]]],\"PG\":[\"675\",\"00|140[1-3]\",\"(?:180|[78]\\\\d{3})\\\\d{4}|(?:[2-589]\\\\d|64)\\\\d{5}\",[7,8],[[\"(\\\\d{3})(\\\\d{4})\",\"$1 $2\",[\"18|[2-69]|85\"]],[\"(\\\\d{4})(\\\\d{4})\",\"$1 $2\",[\"[78]\"]]],0,0,0,0,0,0,0,\"00\"],\"PH\":[\"63\",\"00\",\"(?:[2-7]|9\\\\d)\\\\d{8}|2\\\\d{5}|(?:1800|8)\\\\d{7,9}\",[6,8,9,10,11,12,13],[[\"(\\\\d)(\\\\d{5})\",\"$1 $2\",[\"2\"],\"(0$1)\"],[\"(\\\\d{4})(\\\\d{4,6})\",\"$1 $2\",[\"3(?:23|39|46)|4(?:2[3-6]|[35]9|4[26]|76)|544|88[245]|(?:52|64|86)2\",\"3(?:230|397|461)|4(?:2(?:35|[46]4|51)|396|4(?:22|63)|59[347]|76[15])|5(?:221|446)|642[23]|8(?:622|8(?:[24]2|5[13]))\"],\"(0$1)\"],[\"(\\\\d{5})(\\\\d{4})\",\"$1 $2\",[\"346|4(?:27|9[35])|883\",\"3469|4(?:279|9(?:30|56))|8834\"],\"(0$1)\"],[\"(\\\\d)(\\\\d{4})(\\\\d{4})\",\"$1 $2 $3\",[\"2\"],\"(0$1)\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"[3-7]|8[2-8]\"],\"(0$1)\"],[\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"[89]\"],\"0$1\"],[\"(\\\\d{4})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"1\"]],[\"(\\\\d{4})(\\\\d{1,2})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3 $4\",[\"1\"]]],\"0\"],\"PK\":[\"92\",\"00\",\"122\\\\d{6}|[24-8]\\\\d{10,11}|9(?:[013-9]\\\\d{8,10}|2(?:[01]\\\\d\\\\d|2(?:[06-8]\\\\d|1[01]))\\\\d{7})|(?:[2-8]\\\\d{3}|92(?:[0-7]\\\\d|8[1-9]))\\\\d{6}|[24-9]\\\\d{8}|[89]\\\\d{7}\",[8,9,10,11,12],[[\"(\\\\d{3})(\\\\d{3})(\\\\d{2,7})\",\"$1 $2 $3\",[\"[89]0\"],\"0$1\"],[\"(\\\\d{4})(\\\\d{5})\",\"$1 $2\",[\"1\"]],[\"(\\\\d{3})(\\\\d{6,7})\",\"$1 $2\",[\"2(?:3[2358]|4[2-4]|9[2-8])|45[3479]|54[2-467]|60[468]|72[236]|8(?:2[2-689]|3[23578]|4[3478]|5[2356])|9(?:2[2-8]|3[27-9]|4[2-6]|6[3569]|9[25-8])\",\"9(?:2[3-8]|98)|(?:2(?:3[2358]|4[2-4]|9[2-8])|45[3479]|54[2-467]|60[468]|72[236]|8(?:2[2-689]|3[23578]|4[3478]|5[2356])|9(?:22|3[27-9]|4[2-6]|6[3569]|9[25-7]))[2-9]\"],\"(0$1)\"],[\"(\\\\d{2})(\\\\d{7,8})\",\"$1 $2\",[\"(?:2[125]|4[0-246-9]|5[1-35-7]|6[1-8]|7[14]|8[16]|91)[2-9]\"],\"(0$1)\"],[\"(\\\\d{5})(\\\\d{5})\",\"$1 $2\",[\"58\"],\"(0$1)\"],[\"(\\\\d{3})(\\\\d{7})\",\"$1 $2\",[\"3\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3 $4\",[\"2[125]|4[0-246-9]|5[1-35-7]|6[1-8]|7[14]|8[16]|91\"],\"(0$1)\"],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3 $4\",[\"[24-9]\"],\"(0$1)\"]],\"0\"],\"PL\":[\"48\",\"00\",\"(?:6|8\\\\d\\\\d)\\\\d{7}|[1-9]\\\\d{6}(?:\\\\d{2})?|[26]\\\\d{5}\",[6,7,8,9,10],[[\"(\\\\d{5})\",\"$1\",[\"19\"]],[\"(\\\\d{3})(\\\\d{3})\",\"$1 $2\",[\"11|20|64\"]],[\"(\\\\d{2})(\\\\d{2})(\\\\d{3})\",\"$1 $2 $3\",[\"(?:1[2-8]|2[2-69]|3[2-4]|4[1-468]|5[24-689]|6[1-3578]|7[14-7]|8[1-79]|9[145])1\",\"(?:1[2-8]|2[2-69]|3[2-4]|4[1-468]|5[24-689]|6[1-3578]|7[14-7]|8[1-79]|9[145])19\"]],[\"(\\\\d{3})(\\\\d{2})(\\\\d{2,3})\",\"$1 $2 $3\",[\"64\"]],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"21|39|45|5[0137]|6[0469]|7[02389]|8(?:0[14]|8)\"]],[\"(\\\\d{2})(\\\\d{3})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"1[2-8]|[2-7]|8[1-79]|9[145]\"]],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3,4})\",\"$1 $2 $3\",[\"8\"]]]],\"PM\":[\"508\",\"00\",\"[45]\\\\d{5}|(?:708|80\\\\d)\\\\d{6}\",[6,9],[[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3\",[\"[45]\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"7\"]],[\"(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"8\"],\"0$1\"]],\"0\"],\"PR\":[\"1\",\"011\",\"(?:[589]\\\\d\\\\d|787)\\\\d{7}\",[10],0,\"1\",0,0,0,0,\"787|939\"],\"PS\":[\"970\",\"00\",\"[2489]2\\\\d{6}|(?:1\\\\d|5)\\\\d{8}\",[8,9,10],[[\"(\\\\d)(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"[2489]\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"5\"],\"0$1\"],[\"(\\\\d{4})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"1\"]]],\"0\"],\"PT\":[\"351\",\"00\",\"1693\\\\d{5}|(?:[26-9]\\\\d|30)\\\\d{7}\",[9],[[\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"2[12]\"]],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"16|[236-9]\"]]]],\"PW\":[\"680\",\"01[12]\",\"(?:[24-8]\\\\d\\\\d|345|900)\\\\d{4}\",[7],[[\"(\\\\d{3})(\\\\d{4})\",\"$1 $2\",[\"[2-9]\"]]]],\"PY\":[\"595\",\"00\",\"59\\\\d{4,6}|9\\\\d{5,10}|(?:[2-46-8]\\\\d|5[0-8])\\\\d{4,7}\",[6,7,8,9,10,11],[[\"(\\\\d{3})(\\\\d{3,6})\",\"$1 $2\",[\"[2-9]0\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{5})\",\"$1 $2\",[\"[26]1|3[289]|4[1246-8]|7[1-3]|8[1-36]\"],\"(0$1)\"],[\"(\\\\d{3})(\\\\d{4,5})\",\"$1 $2\",[\"2[279]|3[13-5]|4[359]|5|6(?:[34]|7[1-46-8])|7[46-8]|85\"],\"(0$1)\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{3,4})\",\"$1 $2 $3\",[\"2[14-68]|3[26-9]|4[1246-8]|6(?:1|75)|7[1-35]|8[1-36]\"],\"(0$1)\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"87\"]],[\"(\\\\d{3})(\\\\d{6})\",\"$1 $2\",[\"9(?:[5-79]|8[1-7])\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"[2-8]\"],\"0$1\"],[\"(\\\\d{4})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"9\"]]],\"0\"],\"QA\":[\"974\",\"00\",\"800\\\\d{4}|(?:2|800)\\\\d{6}|(?:0080|[3-7])\\\\d{7}\",[7,8,9,11],[[\"(\\\\d{3})(\\\\d{4})\",\"$1 $2\",[\"2[16]|8\"]],[\"(\\\\d{4})(\\\\d{4})\",\"$1 $2\",[\"[3-7]\"]]]],\"RE\":[\"262\",\"00\",\"(?:26|[689]\\\\d)\\\\d{7}\",[9],[[\"(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"[2689]\"],\"0$1\"]],\"0\",0,0,0,0,0,[[\"26(?:2\\\\d\\\\d|3(?:0\\\\d|1[0-6]))\\\\d{4}\"],[\"69(?:2\\\\d\\\\d|3(?:[06][0-6]|1[013]|2[0-2]|3[0-39]|4\\\\d|5[0-5]|7[0-37]|8[0-8]|9[0-479]))\\\\d{4}\"],[\"80\\\\d{7}\"],[\"89[1-37-9]\\\\d{6}\"],0,0,0,0,[\"9(?:399[0-3]|479[0-5]|76(?:2[27]|3[0-37]))\\\\d{4}\"],[\"8(?:1[019]|2[0156]|84|90)\\\\d{6}\"]]],\"RO\":[\"40\",\"00\",\"(?:[236-8]\\\\d|90)\\\\d{7}|[23]\\\\d{5}\",[6,9],[[\"(\\\\d{3})(\\\\d{3})\",\"$1 $2\",[\"2[3-6]\",\"2[3-6]\\\\d9\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{4})\",\"$1 $2\",[\"219|31\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"[23]1\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"[236-9]\"],\"0$1\"]],\"0\",0,0,0,0,0,0,0,\" int \"],\"RS\":[\"381\",\"00\",\"38[02-9]\\\\d{6,9}|6\\\\d{7,9}|90\\\\d{4,8}|38\\\\d{5,6}|(?:7\\\\d\\\\d|800)\\\\d{3,9}|(?:[12]\\\\d|3[0-79])\\\\d{5,10}\",[6,7,8,9,10,11,12],[[\"(\\\\d{3})(\\\\d{3,9})\",\"$1 $2\",[\"(?:2[389]|39)0|[7-9]\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{5,10})\",\"$1 $2\",[\"[1-36]\"],\"0$1\"]],\"0\"],\"RU\":[\"7\",\"810\",\"8\\\\d{13}|[347-9]\\\\d{9}\",[10,14],[[\"(\\\\d{4})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"7(?:1[0-8]|2[1-9])\",\"7(?:1(?:[0-356]2|4[29]|7|8[27])|2(?:1[23]|[2-9]2))\",\"7(?:1(?:[0-356]2|4[29]|7|8[27])|2(?:13[03-69]|62[013-9]))|72[1-57-9]2\"],\"8 ($1)\",1],[\"(\\\\d{5})(\\\\d)(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"7(?:1[0-68]|2[1-9])\",\"7(?:1(?:[06][3-6]|[18]|2[35]|[3-5][3-5])|2(?:[13][3-5]|[24-689]|7[457]))\",\"7(?:1(?:0(?:[356]|4[023])|[18]|2(?:3[013-9]|5)|3[45]|43[013-79]|5(?:3[1-8]|4[1-7]|5)|6(?:3[0-35-9]|[4-6]))|2(?:1(?:3[178]|[45])|[24-689]|3[35]|7[457]))|7(?:14|23)4[0-8]|71(?:33|45)[1-79]\"],\"8 ($1)\",1],[\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"7\"],\"8 ($1)\",1],[\"(\\\\d{3})(\\\\d{3})(\\\\d{2})(\\\\d{2})\",\"$1 $2-$3-$4\",[\"[349]|8(?:[02-7]|1[1-8])\"],\"8 ($1)\",1],[\"(\\\\d{4})(\\\\d{4})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3 $4\",[\"8\"],\"8 ($1)\"]],\"8\",0,0,0,0,\"3[04-689]|[489]\",0,\"8~10\"],\"RW\":[\"250\",\"00\",\"(?:06|[27]\\\\d\\\\d|[89]00)\\\\d{6}\",[8,9],[[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"0\"]],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"2\"]],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"[7-9]\"],\"0$1\"]],\"0\"],\"SA\":[\"966\",\"00\",\"92\\\\d{7}|(?:[15]|8\\\\d)\\\\d{8}\",[9,10],[[\"(\\\\d{4})(\\\\d{5})\",\"$1 $2\",[\"9\"]],[\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"1\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"5\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3,4})\",\"$1 $2 $3\",[\"81\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"8\"]]],\"0\"],\"SB\":[\"677\",\"0[01]\",\"(?:[1-6]|[7-9]\\\\d\\\\d)\\\\d{4}\",[5,7],[[\"(\\\\d{2})(\\\\d{5})\",\"$1 $2\",[\"7|8[4-9]|9(?:[1-8]|9[0-8])\"]]]],\"SC\":[\"248\",\"010|0[0-2]\",\"800\\\\d{4}|(?:[249]\\\\d|64)\\\\d{5}\",[7],[[\"(\\\\d)(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"[246]|9[57]\"]]],0,0,0,0,0,0,0,\"00\"],\"SD\":[\"249\",\"00\",\"[19]\\\\d{8}\",[9],[[\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"[19]\"],\"0$1\"]],\"0\"],\"SE\":[\"46\",\"00\",\"(?:[26]\\\\d\\\\d|9)\\\\d{9}|[1-9]\\\\d{8}|[1-689]\\\\d{7}|[1-4689]\\\\d{6}|2\\\\d{5}\",[6,7,8,9,10],[[\"(\\\\d{2})(\\\\d{2,3})(\\\\d{2})\",\"$1-$2 $3\",[\"20\"],\"0$1\",0,\"$1 $2 $3\"],[\"(\\\\d{3})(\\\\d{4})\",\"$1-$2\",[\"9(?:00|39|44|9)\"],\"0$1\",0,\"$1 $2\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{2})\",\"$1-$2 $3\",[\"[12][136]|3[356]|4[0246]|6[03]|90[1-9]\"],\"0$1\",0,\"$1 $2 $3\"],[\"(\\\\d)(\\\\d{2,3})(\\\\d{2})(\\\\d{2})\",\"$1-$2 $3 $4\",[\"8\"],\"0$1\",0,\"$1 $2 $3 $4\"],[\"(\\\\d{3})(\\\\d{2,3})(\\\\d{2})\",\"$1-$2 $3\",[\"1[2457]|2(?:[247-9]|5[0138])|3[0247-9]|4[1357-9]|5[0-35-9]|6(?:[125689]|4[02-57]|7[0-2])|9(?:[125-8]|3[02-5]|4[0-3])\"],\"0$1\",0,\"$1 $2 $3\"],[\"(\\\\d{3})(\\\\d{2,3})(\\\\d{3})\",\"$1-$2 $3\",[\"9(?:00|39|44)\"],\"0$1\",0,\"$1 $2 $3\"],[\"(\\\\d{2})(\\\\d{2,3})(\\\\d{2})(\\\\d{2})\",\"$1-$2 $3 $4\",[\"1[13689]|2[0136]|3[1356]|4[0246]|54|6[03]|90[1-9]\"],\"0$1\",0,\"$1 $2 $3 $4\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{2})(\\\\d{2})\",\"$1-$2 $3 $4\",[\"10|7\"],\"0$1\",0,\"$1 $2 $3 $4\"],[\"(\\\\d)(\\\\d{3})(\\\\d{3})(\\\\d{2})\",\"$1-$2 $3 $4\",[\"8\"],\"0$1\",0,\"$1 $2 $3 $4\"],[\"(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1-$2 $3 $4\",[\"[13-5]|2(?:[247-9]|5[0138])|6(?:[124-689]|7[0-2])|9(?:[125-8]|3[02-5]|4[0-3])\"],\"0$1\",0,\"$1 $2 $3 $4\"],[\"(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{3})\",\"$1-$2 $3 $4\",[\"9\"],\"0$1\",0,\"$1 $2 $3 $4\"],[\"(\\\\d{3})(\\\\d{2})(\\\\d{3})(\\\\d{2})(\\\\d{2})\",\"$1-$2 $3 $4 $5\",[\"[26]\"],\"0$1\",0,\"$1 $2 $3 $4 $5\"]],\"0\"],\"SG\":[\"65\",\"0[0-3]\\\\d\",\"(?:(?:1\\\\d|8)\\\\d\\\\d|7000)\\\\d{7}|[3689]\\\\d{7}\",[8,10,11],[[\"(\\\\d{4})(\\\\d{4})\",\"$1 $2\",[\"[369]|8(?:0[1-9]|[1-9])\"]],[\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"8\"]],[\"(\\\\d{4})(\\\\d{4})(\\\\d{3})\",\"$1 $2 $3\",[\"7\"]],[\"(\\\\d{4})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"1\"]]]],\"SH\":[\"290\",\"00\",\"(?:[256]\\\\d|8)\\\\d{3}\",[4,5],0,0,0,0,0,0,\"[256]\"],\"SI\":[\"386\",\"00|10(?:22|66|88|99)\",\"[1-7]\\\\d{7}|8\\\\d{4,7}|90\\\\d{4,6}\",[5,6,7,8],[[\"(\\\\d{2})(\\\\d{3,6})\",\"$1 $2\",[\"8[09]|9\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{5})\",\"$1 $2\",[\"59|8\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"[37][01]|4[0139]|51|6\"],\"0$1\"],[\"(\\\\d)(\\\\d{3})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"[1-57]\"],\"(0$1)\"]],\"0\",0,0,0,0,0,0,\"00\"],\"SJ\":[\"47\",\"00\",\"0\\\\d{4}|(?:[489]\\\\d|79)\\\\d{6}\",[5,8],0,0,0,0,0,0,\"79\"],\"SK\":[\"421\",\"00\",\"[2-689]\\\\d{8}|[2-59]\\\\d{6}|[2-5]\\\\d{5}\",[6,7,9],[[\"(\\\\d)(\\\\d{2})(\\\\d{3,4})\",\"$1 $2 $3\",[\"21\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{2})(\\\\d{2,3})\",\"$1 $2 $3\",[\"[3-5][1-8]1\",\"[3-5][1-8]1[67]\"],\"0$1\"],[\"(\\\\d)(\\\\d{3})(\\\\d{3})(\\\\d{2})\",\"$1/$2 $3 $4\",[\"2\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"[689]\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{2})(\\\\d{2})\",\"$1/$2 $3 $4\",[\"[3-5]\"],\"0$1\"]],\"0\"],\"SL\":[\"232\",\"00\",\"(?:[237-9]\\\\d|66)\\\\d{6}\",[8],[[\"(\\\\d{2})(\\\\d{6})\",\"$1 $2\",[\"[236-9]\"],\"(0$1)\"]],\"0\"],\"SM\":[\"378\",\"00\",\"(?:0549|[5-7]\\\\d)\\\\d{6}\",[8,10],[[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"[5-7]\"]],[\"(\\\\d{4})(\\\\d{6})\",\"$1 $2\",[\"0\"]]],0,0,\"([89]\\\\d{5})$\",\"0549$1\"],\"SN\":[\"221\",\"00\",\"(?:[378]\\\\d|93)\\\\d{7}\",[9],[[\"(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"8\"]],[\"(\\\\d{2})(\\\\d{3})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"[379]\"]]]],\"SO\":[\"252\",\"00\",\"[346-9]\\\\d{8}|[12679]\\\\d{7}|[1-5]\\\\d{6}|[1348]\\\\d{5}\",[6,7,8,9],[[\"(\\\\d{2})(\\\\d{4})\",\"$1 $2\",[\"8[125]\"]],[\"(\\\\d{6})\",\"$1\",[\"[134]\"]],[\"(\\\\d)(\\\\d{6})\",\"$1 $2\",[\"[15]|2[0-79]|3[0-46-8]|4[0-7]\"]],[\"(\\\\d)(\\\\d{7})\",\"$1 $2\",[\"(?:2|90)4|[67]\"]],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"[348]|64|79|90\"]],[\"(\\\\d{2})(\\\\d{5,7})\",\"$1 $2\",[\"1|28|6[0-35-9]|77|9[2-9]\"]]],\"0\"],\"SR\":[\"597\",\"00\",\"(?:[2-5]|68|[78]\\\\d)\\\\d{5}\",[6,7],[[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1-$2-$3\",[\"56\"]],[\"(\\\\d{3})(\\\\d{3})\",\"$1-$2\",[\"[2-5]\"]],[\"(\\\\d{3})(\\\\d{4})\",\"$1-$2\",[\"[6-8]\"]]]],\"SS\":[\"211\",\"00\",\"[19]\\\\d{8}\",[9],[[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"[19]\"],\"0$1\"]],\"0\"],\"ST\":[\"239\",\"00\",\"(?:22|9\\\\d)\\\\d{5}\",[7],[[\"(\\\\d{3})(\\\\d{4})\",\"$1 $2\",[\"[29]\"]]]],\"SV\":[\"503\",\"00\",\"[267]\\\\d{7}|(?:80\\\\d|900)\\\\d{4}(?:\\\\d{4})?\",[7,8,11],[[\"(\\\\d{3})(\\\\d{4})\",\"$1 $2\",[\"[89]\"]],[\"(\\\\d{4})(\\\\d{4})\",\"$1 $2\",[\"[267]\"]],[\"(\\\\d{3})(\\\\d{4})(\\\\d{4})\",\"$1 $2 $3\",[\"[89]\"]]]],\"SX\":[\"1\",\"011\",\"7215\\\\d{6}|(?:[58]\\\\d\\\\d|900)\\\\d{7}\",[10],0,\"1\",0,\"(5\\\\d{6})$|1\",\"721$1\",0,\"721\"],\"SY\":[\"963\",\"00\",\"[1-39]\\\\d{8}|[1-5]\\\\d{7}\",[8,9],[[\"(\\\\d{2})(\\\\d{3})(\\\\d{3,4})\",\"$1 $2 $3\",[\"[1-5]\"],\"0$1\",1],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"9\"],\"0$1\",1]],\"0\"],\"SZ\":[\"268\",\"00\",\"0800\\\\d{4}|(?:[237]\\\\d|900)\\\\d{6}\",[8,9],[[\"(\\\\d{4})(\\\\d{4})\",\"$1 $2\",[\"[0237]\"]],[\"(\\\\d{5})(\\\\d{4})\",\"$1 $2\",[\"9\"]]]],\"TA\":[\"290\",\"00\",\"8\\\\d{3}\",[4],0,0,0,0,0,0,\"8\"],\"TC\":[\"1\",\"011\",\"(?:[58]\\\\d\\\\d|649|900)\\\\d{7}\",[10],0,\"1\",0,\"([2-479]\\\\d{6})$|1\",\"649$1\",0,\"649\"],\"TD\":[\"235\",\"00|16\",\"(?:22|[69]\\\\d|77)\\\\d{6}\",[8],[[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"[2679]\"]]],0,0,0,0,0,0,0,\"00\"],\"TG\":[\"228\",\"00\",\"[279]\\\\d{7}\",[8],[[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"[279]\"]]]],\"TH\":[\"66\",\"00[1-9]\",\"(?:001800|[2-57]|[689]\\\\d)\\\\d{7}|1\\\\d{7,9}\",[8,9,10,13],[[\"(\\\\d)(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"2\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{3,4})\",\"$1 $2 $3\",[\"[13-9]\"],\"0$1\"],[\"(\\\\d{4})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"1\"]]],\"0\"],\"TJ\":[\"992\",\"810\",\"[0-57-9]\\\\d{8}\",[9],[[\"(\\\\d{6})(\\\\d)(\\\\d{2})\",\"$1 $2 $3\",[\"331\",\"3317\"]],[\"(\\\\d{3})(\\\\d{2})(\\\\d{4})\",\"$1 $2 $3\",[\"44[02-479]|[34]7\"]],[\"(\\\\d{4})(\\\\d)(\\\\d{4})\",\"$1 $2 $3\",[\"3[1-5]\"]],[\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"[0-57-9]\"]]],0,0,0,0,0,0,0,\"8~10\"],\"TK\":[\"690\",\"00\",\"[2-47]\\\\d{3,6}\",[4,5,6,7]],\"TL\":[\"670\",\"00\",\"7\\\\d{7}|(?:[2-47]\\\\d|[89]0)\\\\d{5}\",[7,8],[[\"(\\\\d{3})(\\\\d{4})\",\"$1 $2\",[\"[2-489]|70\"]],[\"(\\\\d{4})(\\\\d{4})\",\"$1 $2\",[\"7\"]]]],\"TM\":[\"993\",\"810\",\"[1-6]\\\\d{7}\",[8],[[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2-$3-$4\",[\"12\"],\"(8 $1)\"],[\"(\\\\d{3})(\\\\d)(\\\\d{2})(\\\\d{2})\",\"$1 $2-$3-$4\",[\"[1-5]\"],\"(8 $1)\"],[\"(\\\\d{2})(\\\\d{6})\",\"$1 $2\",[\"6\"],\"8 $1\"]],\"8\",0,0,0,0,0,0,\"8~10\"],\"TN\":[\"216\",\"00\",\"[2-57-9]\\\\d{7}\",[8],[[\"(\\\\d{2})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"[2-57-9]\"]]]],\"TO\":[\"676\",\"00\",\"(?:0800|(?:[5-8]\\\\d\\\\d|999)\\\\d)\\\\d{3}|[2-8]\\\\d{4}\",[5,7],[[\"(\\\\d{2})(\\\\d{3})\",\"$1-$2\",[\"[2-4]|50|6[09]|7[0-24-69]|8[05]\"]],[\"(\\\\d{4})(\\\\d{3})\",\"$1 $2\",[\"0\"]],[\"(\\\\d{3})(\\\\d{4})\",\"$1 $2\",[\"[5-9]\"]]]],\"TR\":[\"90\",\"00\",\"4\\\\d{6}|8\\\\d{11,12}|(?:[2-58]\\\\d\\\\d|900)\\\\d{7}\",[7,10,12,13],[[\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"512|8[01589]|90\"],\"0$1\",1],[\"(\\\\d{3})(\\\\d{3})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"5(?:[0-59]|61)\",\"5(?:[0-59]|61[06])\",\"5(?:[0-59]|61[06]1)\"],\"0$1\",1],[\"(\\\\d{3})(\\\\d{3})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"[24][1-8]|3[1-9]\"],\"(0$1)\",1],[\"(\\\\d{3})(\\\\d{3})(\\\\d{6,7})\",\"$1 $2 $3\",[\"80\"],\"0$1\",1]],\"0\"],\"TT\":[\"1\",\"011\",\"(?:[58]\\\\d\\\\d|900)\\\\d{7}\",[10],0,\"1\",0,\"([2-46-8]\\\\d{6})$|1\",\"868$1\",0,\"868\"],\"TV\":[\"688\",\"00\",\"(?:2|7\\\\d\\\\d|90)\\\\d{4}\",[5,6,7],[[\"(\\\\d{2})(\\\\d{3})\",\"$1 $2\",[\"2\"]],[\"(\\\\d{2})(\\\\d{4})\",\"$1 $2\",[\"90\"]],[\"(\\\\d{2})(\\\\d{5})\",\"$1 $2\",[\"7\"]]]],\"TW\":[\"886\",\"0(?:0[25-79]|19)\",\"[2-689]\\\\d{8}|7\\\\d{9,10}|[2-8]\\\\d{7}|2\\\\d{6}\",[7,8,9,10,11],[[\"(\\\\d{2})(\\\\d)(\\\\d{4})\",\"$1 $2 $3\",[\"202\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{3,4})\",\"$1 $2 $3\",[\"[258]0\"],\"0$1\"],[\"(\\\\d)(\\\\d{3,4})(\\\\d{4})\",\"$1 $2 $3\",[\"[23568]|4(?:0[02-48]|[1-47-9])|7[1-9]\",\"[23568]|4(?:0[2-48]|[1-47-9])|(?:400|7)[1-9]\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"[49]\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{4})(\\\\d{4,5})\",\"$1 $2 $3\",[\"7\"],\"0$1\"]],\"0\",0,0,0,0,0,0,0,\"#\"],\"TZ\":[\"255\",\"00[056]\",\"(?:[25-8]\\\\d|41|90)\\\\d{7}\",[9],[[\"(\\\\d{3})(\\\\d{2})(\\\\d{4})\",\"$1 $2 $3\",[\"[89]\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"[24]\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{7})\",\"$1 $2\",[\"5\"]],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"[67]\"],\"0$1\"]],\"0\"],\"UA\":[\"380\",\"00\",\"[89]\\\\d{9}|[3-9]\\\\d{8}\",[9,10],[[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"6[12][29]|(?:3[1-8]|4[136-8]|5[12457]|6[49])2|(?:56|65)[24]\",\"6[12][29]|(?:35|4[1378]|5[12457]|6[49])2|(?:56|65)[24]|(?:3[1-46-8]|46)2[013-9]\"],\"0$1\"],[\"(\\\\d{4})(\\\\d{5})\",\"$1 $2\",[\"3[1-8]|4(?:[1367]|[45][6-9]|8[4-6])|5(?:[1-5]|6[0135689]|7[4-6])|6(?:[12][3-7]|[459])\",\"3[1-8]|4(?:[1367]|[45][6-9]|8[4-6])|5(?:[1-5]|6(?:[015689]|3[02389])|7[4-6])|6(?:[12][3-7]|[459])\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"[3-7]|89|9[1-9]\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3,4})\",\"$1 $2 $3\",[\"[89]\"],\"0$1\"]],\"0\",0,0,0,0,0,0,\"0~0\"],\"UG\":[\"256\",\"00[057]\",\"800\\\\d{6}|(?:[29]0|[347]\\\\d)\\\\d{7}\",[9],[[\"(\\\\d{4})(\\\\d{5})\",\"$1 $2\",[\"202\",\"2024\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{6})\",\"$1 $2\",[\"[27-9]|4(?:6[45]|[7-9])\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{7})\",\"$1 $2\",[\"[34]\"],\"0$1\"]],\"0\"],\"US\":[\"1\",\"011\",\"[2-9]\\\\d{9}|3\\\\d{6}\",[10],[[\"(\\\\d{3})(\\\\d{4})\",\"$1-$2\",[\"310\"],0,1],[\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\",\"($1) $2-$3\",[\"[2-9]\"],0,1,\"$1-$2-$3\"]],\"1\",0,0,0,0,0,[[\"(?:5056(?:[0-35-9]\\\\d|4[468])|7302[0-3]\\\\d)\\\\d{4}|(?:472[24]|505[2-57-9]|7306|983[237-9])\\\\d{6}|(?:2(?:0[1-35-9]|1[02-9]|2[03-57-9]|3[149]|4[08]|5[1-46]|6[0279]|7[0269]|8[13])|3(?:0[1-57-9]|1[02-9]|2[013569]|3[0-24679]|4[167]|5[0-2]|6[01349]|8[056])|4(?:0[124-9]|1[02-579]|2[3-5]|3[0245]|4[023578]|58|6[349]|7[0589]|8[04])|5(?:0[1-47-9]|1[0235-8]|20|3[0149]|4[01]|5[179]|6[1-47]|7[0-5]|8[0256])|6(?:0[1-35-9]|1[024-9]|2[03689]|3[016]|4[0156]|5[01679]|6[0-279]|78|8[0-29])|7(?:0[1-46-8]|1[2-9]|2[04-8]|3[1247]|4[037]|5[47]|6[02359]|7[0-59]|8[156])|8(?:0[1-68]|1[02-8]|2[068]|3[0-2589]|4[03578]|5[046-9]|6[02-5]|7[028])|9(?:0[1346-9]|1[02-9]|2[0589]|3[0146-8]|4[01357-9]|5[12469]|7[0-389]|8[04-69]))[2-9]\\\\d{6}\"],[\"\"],[\"8(?:00|33|44|55|66|77|88)[2-9]\\\\d{6}\"],[\"900[2-9]\\\\d{6}\"],[\"52(?:3(?:[2-46-9][02-9]\\\\d|5(?:[02-46-9]\\\\d|5[0-46-9]))|4(?:[2-478][02-9]\\\\d|5(?:[034]\\\\d|2[024-9]|5[0-46-9])|6(?:0[1-9]|[2-9]\\\\d)|9(?:[05-9]\\\\d|2[0-5]|49)))\\\\d{4}|52[34][2-9]1[02-9]\\\\d{4}|5(?:00|2[125-9]|33|44|66|77|88)[2-9]\\\\d{6}\"]]],\"UY\":[\"598\",\"0(?:0|1[3-9]\\\\d)\",\"0004\\\\d{2,9}|[1249]\\\\d{7}|(?:[49]\\\\d|80)\\\\d{5}\",[6,7,8,9,10,11,12,13],[[\"(\\\\d{3})(\\\\d{3,4})\",\"$1 $2\",[\"0\"]],[\"(\\\\d{3})(\\\\d{4})\",\"$1 $2\",[\"[49]0|8\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"9\"],\"0$1\"],[\"(\\\\d{4})(\\\\d{4})\",\"$1 $2\",[\"[124]\"]],[\"(\\\\d{3})(\\\\d{3})(\\\\d{2,4})\",\"$1 $2 $3\",[\"0\"]],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})(\\\\d{2,4})\",\"$1 $2 $3 $4\",[\"0\"]]],\"0\",0,0,0,0,0,0,\"00\",\" int. \"],\"UZ\":[\"998\",\"810\",\"(?:20|33|[5-79]\\\\d|88)\\\\d{7}\",[9],[[\"(\\\\d{2})(\\\\d{3})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"[235-9]\"],\"8 $1\"]],\"8\",0,0,0,0,0,0,\"8~10\"],\"VA\":[\"39\",\"00\",\"0\\\\d{5,10}|3[0-8]\\\\d{7,10}|55\\\\d{8}|8\\\\d{5}(?:\\\\d{2,4})?|(?:1\\\\d|39)\\\\d{7,8}\",[6,7,8,9,10,11],0,0,0,0,0,0,\"06698\"],\"VC\":[\"1\",\"011\",\"(?:[58]\\\\d\\\\d|784|900)\\\\d{7}\",[10],0,\"1\",0,\"([2-7]\\\\d{6})$|1\",\"784$1\",0,\"784\"],\"VE\":[\"58\",\"00\",\"[68]00\\\\d{7}|(?:[24]\\\\d|[59]0)\\\\d{8}\",[10],[[\"(\\\\d{3})(\\\\d{7})\",\"$1-$2\",[\"[24-689]\"],\"0$1\"]],\"0\"],\"VG\":[\"1\",\"011\",\"(?:284|[58]\\\\d\\\\d|900)\\\\d{7}\",[10],0,\"1\",0,\"([2-578]\\\\d{6})$|1\",\"284$1\",0,\"284\"],\"VI\":[\"1\",\"011\",\"[58]\\\\d{9}|(?:34|90)0\\\\d{7}\",[10],0,\"1\",0,\"([2-9]\\\\d{6})$|1\",\"340$1\",0,\"340\"],\"VN\":[\"84\",\"00\",\"[12]\\\\d{9}|[135-9]\\\\d{8}|[16]\\\\d{7}|[16-8]\\\\d{6}\",[7,8,9,10],[[\"(\\\\d{2})(\\\\d{5})\",\"$1 $2\",[\"80\"],\"0$1\",1],[\"(\\\\d{4})(\\\\d{4,6})\",\"$1 $2\",[\"1\"],0,1],[\"(\\\\d{2})(\\\\d{3})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"6\"],\"0$1\",1],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"[357-9]\"],\"0$1\",1],[\"(\\\\d{2})(\\\\d{4})(\\\\d{4})\",\"$1 $2 $3\",[\"2[48]\"],\"0$1\",1],[\"(\\\\d{3})(\\\\d{4})(\\\\d{3})\",\"$1 $2 $3\",[\"2\"],\"0$1\",1]],\"0\"],\"VU\":[\"678\",\"00\",\"[57-9]\\\\d{6}|(?:[238]\\\\d|48)\\\\d{3}\",[5,7],[[\"(\\\\d{3})(\\\\d{4})\",\"$1 $2\",[\"[57-9]\"]]]],\"WF\":[\"681\",\"00\",\"(?:40|72)\\\\d{4}|8\\\\d{5}(?:\\\\d{3})?\",[6,9],[[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3\",[\"[478]\"]],[\"(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"8\"]]]],\"WS\":[\"685\",\"0\",\"(?:[2-6]|8\\\\d{5})\\\\d{4}|[78]\\\\d{6}|[68]\\\\d{5}\",[5,6,7,10],[[\"(\\\\d{5})\",\"$1\",[\"[2-5]|6[1-9]\"]],[\"(\\\\d{3})(\\\\d{3,7})\",\"$1 $2\",[\"[68]\"]],[\"(\\\\d{2})(\\\\d{5})\",\"$1 $2\",[\"7\"]]]],\"XK\":[\"383\",\"00\",\"[23]\\\\d{7,8}|(?:4\\\\d\\\\d|[89]00)\\\\d{5}\",[8,9],[[\"(\\\\d{3})(\\\\d{5})\",\"$1 $2\",[\"[89]\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"[2-4]\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"[23]\"],\"0$1\"]],\"0\"],\"YE\":[\"967\",\"00\",\"(?:1|7\\\\d)\\\\d{7}|[1-7]\\\\d{6}\",[7,8,9],[[\"(\\\\d)(\\\\d{3})(\\\\d{3,4})\",\"$1 $2 $3\",[\"[1-6]|7(?:[24-6]|8[0-7])\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"7\"],\"0$1\"]],\"0\"],\"YT\":[\"262\",\"00\",\"(?:80|9\\\\d)\\\\d{7}|(?:26|63)9\\\\d{6}\",[9],0,\"0\",0,0,0,0,0,[[\"269(?:0[0-467]|15|5[0-4]|6\\\\d|[78]0)\\\\d{4}\"],[\"639(?:0[0-79]|1[019]|[267]\\\\d|3[09]|40|5[05-9]|9[04-79])\\\\d{4}\"],[\"80\\\\d{7}\"],0,0,0,0,0,[\"9(?:(?:39|47)8[01]|769\\\\d)\\\\d{4}\"]]],\"ZA\":[\"27\",\"00\",\"[1-79]\\\\d{8}|8\\\\d{4,9}\",[5,6,7,8,9,10],[[\"(\\\\d{2})(\\\\d{3,4})\",\"$1 $2\",[\"8[1-4]\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{2,3})\",\"$1 $2 $3\",[\"8[1-4]\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"860\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"[1-9]\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"8\"],\"0$1\"]],\"0\"],\"ZM\":[\"260\",\"00\",\"800\\\\d{6}|(?:21|63|[79]\\\\d)\\\\d{7}\",[9],[[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"[28]\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{7})\",\"$1 $2\",[\"[79]\"],\"0$1\"]],\"0\"],\"ZW\":[\"263\",\"00\",\"2(?:[0-57-9]\\\\d{6,8}|6[0-24-9]\\\\d{6,7})|[38]\\\\d{9}|[35-8]\\\\d{8}|[3-6]\\\\d{7}|[1-689]\\\\d{6}|[1-3569]\\\\d{5}|[1356]\\\\d{4}\",[5,6,7,8,9,10],[[\"(\\\\d{3})(\\\\d{3,5})\",\"$1 $2\",[\"2(?:0[45]|2[278]|[49]8)|3(?:[09]8|17)|6(?:[29]8|37|75)|[23][78]|(?:33|5[15]|6[68])[78]\"],\"0$1\"],[\"(\\\\d)(\\\\d{3})(\\\\d{2,4})\",\"$1 $2 $3\",[\"[49]\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{4})\",\"$1 $2\",[\"80\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{7})\",\"$1 $2\",[\"24|8[13-59]|(?:2[05-79]|39|5[45]|6[15-8])2\",\"2(?:02[014]|4|[56]20|[79]2)|392|5(?:42|525)|6(?:[16-8]21|52[013])|8[13-59]\"],\"(0$1)\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"7\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3,4})\",\"$1 $2 $3\",[\"2(?:1[39]|2[0157]|[378]|[56][14])|3(?:12|29)\",\"2(?:1[39]|2[0157]|[378]|[56][14])|3(?:123|29)\"],\"0$1\"],[\"(\\\\d{4})(\\\\d{6})\",\"$1 $2\",[\"8\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3,5})\",\"$1 $2\",[\"1|2(?:0[0-36-9]|12|29|[56])|3(?:1[0-689]|[24-6])|5(?:[0236-9]|1[2-4])|6(?:[013-59]|7[0-46-9])|(?:33|55|6[68])[0-69]|(?:29|3[09]|62)[0-79]\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{3,4})\",\"$1 $2 $3\",[\"29[013-9]|39|54\"],\"0$1\"],[\"(\\\\d{4})(\\\\d{3,5})\",\"$1 $2\",[\"(?:25|54)8\",\"258|5483\"],\"0$1\"]],\"0\"]},\"nonGeographic\":{\"800\":[\"800\",0,\"(?:00|[1-9]\\\\d)\\\\d{6}\",[8],[[\"(\\\\d{4})(\\\\d{4})\",\"$1 $2\",[\"\\\\d\"]]],0,0,0,0,0,0,[0,0,[\"(?:00|[1-9]\\\\d)\\\\d{6}\"]]],\"808\":[\"808\",0,\"[1-9]\\\\d{7}\",[8],[[\"(\\\\d{4})(\\\\d{4})\",\"$1 $2\",[\"[1-9]\"]]],0,0,0,0,0,0,[0,0,0,0,0,0,0,0,0,[\"[1-9]\\\\d{7}\"]]],\"870\":[\"870\",0,\"7\\\\d{11}|[35-7]\\\\d{8}\",[9,12],[[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"[35-7]\"]]],0,0,0,0,0,0,[0,[\"(?:[356]|774[45])\\\\d{8}|7[6-8]\\\\d{7}\"]]],\"878\":[\"878\",0,\"10\\\\d{10}\",[12],[[\"(\\\\d{2})(\\\\d{5})(\\\\d{5})\",\"$1 $2 $3\",[\"1\"]]],0,0,0,0,0,0,[0,0,0,0,0,0,0,0,[\"10\\\\d{10}\"]]],\"881\":[\"881\",0,\"6\\\\d{9}|[0-36-9]\\\\d{8}\",[9,10],[[\"(\\\\d)(\\\\d{3})(\\\\d{5})\",\"$1 $2 $3\",[\"[0-37-9]\"]],[\"(\\\\d)(\\\\d{3})(\\\\d{5,6})\",\"$1 $2 $3\",[\"6\"]]],0,0,0,0,0,0,[0,[\"6\\\\d{9}|[0-36-9]\\\\d{8}\"]]],\"882\":[\"882\",0,\"[13]\\\\d{6}(?:\\\\d{2,5})?|[19]\\\\d{7}|(?:[25]\\\\d\\\\d|4)\\\\d{7}(?:\\\\d{2})?\",[7,8,9,10,11,12],[[\"(\\\\d{2})(\\\\d{5})\",\"$1 $2\",[\"16|342\"]],[\"(\\\\d{2})(\\\\d{6})\",\"$1 $2\",[\"49\"]],[\"(\\\\d{2})(\\\\d{2})(\\\\d{4})\",\"$1 $2 $3\",[\"1[36]|9\"]],[\"(\\\\d{2})(\\\\d{4})(\\\\d{3})\",\"$1 $2 $3\",[\"3[23]\"]],[\"(\\\\d{2})(\\\\d{3,4})(\\\\d{4})\",\"$1 $2 $3\",[\"16\"]],[\"(\\\\d{2})(\\\\d{4})(\\\\d{4})\",\"$1 $2 $3\",[\"10|23|3(?:[15]|4[57])|4|51\"]],[\"(\\\\d{3})(\\\\d{4})(\\\\d{4})\",\"$1 $2 $3\",[\"34\"]],[\"(\\\\d{2})(\\\\d{4,5})(\\\\d{5})\",\"$1 $2 $3\",[\"[1-35]\"]]],0,0,0,0,0,0,[0,[\"342\\\\d{4}|(?:337|49)\\\\d{6}|(?:3(?:2|47|7\\\\d{3})|50\\\\d{3})\\\\d{7}\",[7,8,9,10,12]],0,0,0,0,0,0,[\"1(?:3(?:0[0347]|[13][0139]|2[035]|4[013568]|6[0459]|7[06]|8[15-8]|9[0689])\\\\d{4}|6\\\\d{5,10})|(?:345\\\\d|9[89])\\\\d{6}|(?:10|2(?:3|85\\\\d)|3(?:[15]|[69]\\\\d\\\\d)|4[15-8]|51)\\\\d{8}\"]]],\"883\":[\"883\",0,\"(?:[1-4]\\\\d|51)\\\\d{6,10}\",[8,9,10,11,12],[[\"(\\\\d{3})(\\\\d{3})(\\\\d{2,8})\",\"$1 $2 $3\",[\"[14]|2[24-689]|3[02-689]|51[24-9]\"]],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"510\"]],[\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"21\"]],[\"(\\\\d{4})(\\\\d{4})(\\\\d{4})\",\"$1 $2 $3\",[\"51[13]\"]],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3 $4\",[\"[235]\"]]],0,0,0,0,0,0,[0,0,0,0,0,0,0,0,[\"(?:2(?:00\\\\d\\\\d|10)|(?:370[1-9]|51\\\\d0)\\\\d)\\\\d{7}|51(?:00\\\\d{5}|[24-9]0\\\\d{4,7})|(?:1[0-79]|2[24-689]|3[02-689]|4[0-4])0\\\\d{5,9}\"]]],\"888\":[\"888\",0,\"\\\\d{11}\",[11],[[\"(\\\\d{3})(\\\\d{3})(\\\\d{5})\",\"$1 $2 $3\"]],0,0,0,0,0,0,[0,0,0,0,0,0,[\"\\\\d{11}\"]]],\"979\":[\"979\",0,\"[1359]\\\\d{8}\",[9],[[\"(\\\\d)(\\\\d{4})(\\\\d{4})\",\"$1 $2 $3\",[\"[1359]\"]]],0,0,0,0,0,0,[0,0,0,[\"[1359]\\\\d{8}\"]]]}}","const objectConstructor = {}.constructor;\r\n\r\nexport default function isObject(object) {\r\n  return object !== undefined && object !== null && object.constructor === objectConstructor;\r\n}\r\n","import isObject from './helpers/isObject.js'\r\n\r\n// Extracts the following properties from function arguments:\r\n// * input `text`\r\n// * `options` object\r\n// * `metadata` JSON\r\nexport default function normalizeArguments(args) {\r\n\tconst [arg_1, arg_2, arg_3, arg_4] = Array.prototype.slice.call(args)\r\n\r\n\tlet text\r\n\tlet options\r\n\tlet metadata\r\n\r\n\t// If the phone number is passed as a string.\r\n\t// `parsePhoneNumber('88005553535', ...)`.\r\n\tif (typeof arg_1 === 'string') {\r\n\t\ttext = arg_1\r\n\t}\r\n\telse throw new TypeError('A text for parsing must be a string.')\r\n\r\n\t// If \"default country\" argument is being passed then move it to `options`.\r\n\t// `parsePhoneNumber('88005553535', 'RU', [options], metadata)`.\r\n\tif (!arg_2 || typeof arg_2 === 'string')\r\n\t{\r\n\t\tif (arg_4) {\r\n\t\t\toptions = arg_3\r\n\t\t\tmetadata = arg_4\r\n\t\t} else {\r\n\t\t\toptions = undefined\r\n\t\t\tmetadata = arg_3\r\n\t\t}\r\n\r\n\t\tif (arg_2) {\r\n\t\t\toptions = { defaultCountry: arg_2, ...options }\r\n\t\t}\r\n\t}\r\n\t// `defaultCountry` is not passed.\r\n\t// Example: `parsePhoneNumber('+78005553535', [options], metadata)`.\r\n\telse if (isObject(arg_2))\r\n\t{\r\n\t\tif (arg_3) {\r\n\t\t\toptions  = arg_2\r\n\t\t\tmetadata = arg_3\r\n\t\t} else {\r\n\t\t\tmetadata = arg_2\r\n\t\t}\r\n\t}\r\n\telse throw new Error(`Invalid second argument: ${arg_2}`)\r\n\r\n\treturn {\r\n\t\ttext,\r\n\t\toptions,\r\n\t\tmetadata\r\n\t}\r\n}","// The minimum length of the national significant number.\r\nexport const MIN_LENGTH_FOR_NSN = 2\r\n\r\n// The ITU says the maximum length should be 15,\r\n// but one can find longer numbers in Germany.\r\nexport const MAX_LENGTH_FOR_NSN = 17\r\n\r\n// The maximum length of the country calling code.\r\nexport const MAX_LENGTH_COUNTRY_CODE = 3\r\n\r\n// Digits accepted in phone numbers\r\n// (ascii, fullwidth, arabic-indic, and eastern arabic digits).\r\nexport const VALID_DIGITS = '0-9\\uFF10-\\uFF19\\u0660-\\u0669\\u06F0-\\u06F9'\r\n\r\n// `DASHES` will be right after the opening square bracket of the \"character class\"\r\nconst DASHES = '-\\u2010-\\u2015\\u2212\\u30FC\\uFF0D'\r\nconst SLASHES = '\\uFF0F/'\r\nconst DOTS = '\\uFF0E.'\r\nexport const WHITESPACE = ' \\u00A0\\u00AD\\u200B\\u2060\\u3000'\r\nconst BRACKETS = '()\\uFF08\\uFF09\\uFF3B\\uFF3D\\\\[\\\\]'\r\n// export const OPENING_BRACKETS = '(\\uFF08\\uFF3B\\\\\\['\r\nconst TILDES = '~\\u2053\\u223C\\uFF5E'\r\n\r\n// Regular expression of acceptable punctuation found in phone numbers. This\r\n// excludes punctuation found as a leading character only. This consists of dash\r\n// characters, white space characters, full stops, slashes, square brackets,\r\n// parentheses and tildes. Full-width variants are also present.\r\nexport const VALID_PUNCTUATION = `${DASHES}${SLASHES}${DOTS}${WHITESPACE}${BRACKETS}${TILDES}`\r\n\r\nexport const PLUS_CHARS = '+\\uFF0B'\r\n// const LEADING_PLUS_CHARS_PATTERN = new RegExp('^[' + PLUS_CHARS + ']+')","// https://stackoverflow.com/a/46971044/970769\r\n// \"Breaking changes in Typescript 2.1\"\r\n// \"Extending built-ins like Error, Array, and Map may no longer work.\"\r\n// \"As a recommendation, you can manually adjust the prototype immediately after any super(...) calls.\"\r\n// https://github.com/Microsoft/TypeScript-wiki/blob/main/Breaking-Changes.md#extending-built-ins-like-error-array-and-map-may-no-longer-work\r\nexport default class ParseError extends Error {\r\n  constructor(code) {\r\n    super(code)\r\n    // Set the prototype explicitly.\r\n    // Any subclass of FooError will have to manually set the prototype as well.\r\n    Object.setPrototypeOf(this, ParseError.prototype)\r\n    this.name = this.constructor.name\r\n  }\r\n}","// Copy-pasted from:\r\n// https://github.com/substack/semver-compare/blob/master/index.js\r\n//\r\n// Inlining this function because some users reported issues with\r\n// importing from `semver-compare` in a browser with ES6 \"native\" modules.\r\n//\r\n// Fixes `semver-compare` not being able to compare versions with alpha/beta/etc \"tags\".\r\n// https://github.com/catamphetamine/libphonenumber-js/issues/381\r\nexport default function(a, b) {\r\n    a = a.split('-')\r\n    b = b.split('-')\r\n    var pa = a[0].split('.')\r\n    var pb = b[0].split('.')\r\n    for (var i = 0; i < 3; i++) {\r\n        var na = Number(pa[i])\r\n        var nb = Number(pb[i])\r\n        if (na > nb) return 1\r\n        if (nb > na) return -1\r\n        if (!isNaN(na) && isNaN(nb)) return 1\r\n        if (isNaN(na) && !isNaN(nb)) return -1\r\n    }\r\n    if (a[1] && b[1]) {\r\n        return a[1] > b[1] ? 1 : (a[1] < b[1] ? -1 : 0)\r\n    }\r\n    return !a[1] && b[1] ? 1 : (a[1] && !b[1] ? -1 : 0)\r\n}","import compare from './tools/semver-compare.js'\r\nimport isObject from './helpers/isObject.js'\r\n\r\n// Added \"possibleLengths\" and renamed\r\n// \"country_phone_code_to_countries\" to \"country_calling_codes\".\r\nconst V2 = '1.0.18'\r\n\r\n// Added \"idd_prefix\" and \"default_idd_prefix\".\r\nconst V3 = '1.2.0'\r\n\r\n// Moved `001` country code to \"nonGeographic\" section of metadata.\r\nconst V4 = '1.7.35'\r\n\r\nconst DEFAULT_EXT_PREFIX = ' ext. '\r\n\r\nconst CALLING_CODE_REG_EXP = /^\\d+$/\r\n\r\n/**\r\n * See: https://gitlab.com/catamphetamine/libphonenumber-js/blob/master/METADATA.md\r\n */\r\nexport default class Metadata {\r\n\tconstructor(metadata) {\r\n\t\tvalidateMetadata(metadata)\r\n\t\tthis.metadata = metadata\r\n\t\tsetVersion.call(this, metadata)\r\n\t}\r\n\r\n\tgetCountries() {\r\n\t\treturn Object.keys(this.metadata.countries).filter(_ => _ !== '001')\r\n\t}\r\n\r\n\tgetCountryMetadata(countryCode) {\r\n\t\treturn this.metadata.countries[countryCode]\r\n\t}\r\n\r\n\tnonGeographic() {\r\n\t\tif (this.v1 || this.v2 || this.v3) return\r\n\t\t// `nonGeographical` was a typo.\r\n\t\t// It's present in metadata generated from `1.7.35` to `1.7.37`.\r\n\t\t// The test case could be found by searching for \"nonGeographical\".\r\n\t\treturn this.metadata.nonGeographic || this.metadata.nonGeographical\r\n\t}\r\n\r\n\thasCountry(country) {\r\n\t\treturn this.getCountryMetadata(country) !== undefined\r\n\t}\r\n\r\n\thasCallingCode(callingCode) {\r\n\t\tif (this.getCountryCodesForCallingCode(callingCode)) {\r\n\t\t\treturn true\r\n\t\t}\r\n\t\tif (this.nonGeographic()) {\r\n\t\t\tif (this.nonGeographic()[callingCode]) {\r\n\t\t\t\treturn true\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\t// A hacky workaround for old custom metadata (generated before V4).\r\n\t\t\tconst countryCodes = this.countryCallingCodes()[callingCode]\r\n\t\t\tif (countryCodes && countryCodes.length === 1 && countryCodes[0] === '001') {\r\n\t\t\t\treturn true\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tisNonGeographicCallingCode(callingCode) {\r\n\t\tif (this.nonGeographic()) {\r\n\t\t\treturn this.nonGeographic()[callingCode] ? true : false\r\n\t\t} else {\r\n\t\t\treturn this.getCountryCodesForCallingCode(callingCode) ? false : true\r\n\t\t}\r\n\t}\r\n\r\n\t// Deprecated.\r\n\tcountry(countryCode) {\r\n\t\treturn this.selectNumberingPlan(countryCode)\r\n\t}\r\n\r\n\tselectNumberingPlan(countryCode, callingCode) {\r\n\t\t// Supports just passing `callingCode` as the first argument.\r\n\t\tif (countryCode && CALLING_CODE_REG_EXP.test(countryCode)) {\r\n\t\t\tcallingCode = countryCode\r\n\t\t\tcountryCode = null\r\n\t\t}\r\n\t\tif (countryCode && countryCode !== '001') {\r\n\t\t\tif (!this.hasCountry(countryCode)) {\r\n\t\t\t\tthrow new Error(`Unknown country: ${countryCode}`)\r\n\t\t\t}\r\n\t\t\tthis.numberingPlan = new NumberingPlan(this.getCountryMetadata(countryCode), this)\r\n\t\t} else if (callingCode) {\r\n\t\t\tif (!this.hasCallingCode(callingCode)) {\r\n\t\t\t\tthrow new Error(`Unknown calling code: ${callingCode}`)\r\n\t\t\t}\r\n\t\t\tthis.numberingPlan = new NumberingPlan(this.getNumberingPlanMetadata(callingCode), this)\r\n\t\t} else {\r\n\t\t\tthis.numberingPlan = undefined\r\n\t\t}\r\n\t\treturn this\r\n\t}\r\n\r\n\tgetCountryCodesForCallingCode(callingCode) {\r\n\t\tconst countryCodes = this.countryCallingCodes()[callingCode]\r\n\t\tif (countryCodes) {\r\n\t\t\t// Metadata before V4 included \"non-geographic entity\" calling codes\r\n\t\t\t// inside `country_calling_codes` (for example, `\"881\":[\"001\"]`).\r\n\t\t\t// Now the semantics of `country_calling_codes` has changed:\r\n\t\t\t// it's specifically for \"countries\" now.\r\n\t\t\t// Older versions of custom metadata will simply skip parsing\r\n\t\t\t// \"non-geographic entity\" phone numbers with new versions\r\n\t\t\t// of this library: it's not considered a bug,\r\n\t\t\t// because such numbers are extremely rare,\r\n\t\t\t// and developers extremely rarely use custom metadata.\r\n\t\t\tif (countryCodes.length === 1 && countryCodes[0].length === 3) {\r\n\t\t\t\treturn\r\n\t\t\t}\r\n\t\t\treturn countryCodes\r\n\t\t}\r\n\t}\r\n\r\n\tgetCountryCodeForCallingCode(callingCode) {\r\n\t\tconst countryCodes = this.getCountryCodesForCallingCode(callingCode)\r\n\t\tif (countryCodes) {\r\n\t\t\treturn countryCodes[0]\r\n\t\t}\r\n\t}\r\n\r\n\tgetNumberingPlanMetadata(callingCode) {\r\n\t\tconst countryCode = this.getCountryCodeForCallingCode(callingCode)\r\n\t\tif (countryCode) {\r\n\t\t\treturn this.getCountryMetadata(countryCode)\r\n\t\t}\r\n\t\tif (this.nonGeographic()) {\r\n\t\t\tconst metadata = this.nonGeographic()[callingCode]\r\n\t\t\tif (metadata) {\r\n\t\t\t\treturn metadata\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\t// A hacky workaround for old custom metadata (generated before V4).\r\n\t\t\t// In that metadata, there was no concept of \"non-geographic\" metadata\r\n\t\t\t// so metadata for `001` country code was stored along with other countries.\r\n\t\t\t// The test case can be found by searching for:\r\n\t\t\t// \"should work around `nonGeographic` metadata not existing\".\r\n\t\t\tconst countryCodes = this.countryCallingCodes()[callingCode]\r\n\t\t\tif (countryCodes && countryCodes.length === 1 && countryCodes[0] === '001') {\r\n\t\t\t\treturn this.metadata.countries['001']\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t// Deprecated.\r\n\tcountryCallingCode() {\r\n\t\treturn this.numberingPlan.callingCode()\r\n\t}\r\n\r\n\t// Deprecated.\r\n\tIDDPrefix() {\r\n\t\treturn this.numberingPlan.IDDPrefix()\r\n\t}\r\n\r\n\t// Deprecated.\r\n\tdefaultIDDPrefix() {\r\n\t\treturn this.numberingPlan.defaultIDDPrefix()\r\n\t}\r\n\r\n\t// Deprecated.\r\n\tnationalNumberPattern() {\r\n\t\treturn this.numberingPlan.nationalNumberPattern()\r\n\t}\r\n\r\n\t// Deprecated.\r\n\tpossibleLengths() {\r\n\t\treturn this.numberingPlan.possibleLengths()\r\n\t}\r\n\r\n\t// Deprecated.\r\n\tformats() {\r\n\t\treturn this.numberingPlan.formats()\r\n\t}\r\n\r\n\t// Deprecated.\r\n\tnationalPrefixForParsing() {\r\n\t\treturn this.numberingPlan.nationalPrefixForParsing()\r\n\t}\r\n\r\n\t// Deprecated.\r\n\tnationalPrefixTransformRule() {\r\n\t\treturn this.numberingPlan.nationalPrefixTransformRule()\r\n\t}\r\n\r\n\t// Deprecated.\r\n\tleadingDigits() {\r\n\t\treturn this.numberingPlan.leadingDigits()\r\n\t}\r\n\r\n\t// Deprecated.\r\n\thasTypes() {\r\n\t\treturn this.numberingPlan.hasTypes()\r\n\t}\r\n\r\n\t// Deprecated.\r\n\ttype(type) {\r\n\t\treturn this.numberingPlan.type(type)\r\n\t}\r\n\r\n\t// Deprecated.\r\n\text() {\r\n\t\treturn this.numberingPlan.ext()\r\n\t}\r\n\r\n\tcountryCallingCodes() {\r\n\t\tif (this.v1) return this.metadata.country_phone_code_to_countries\r\n\t\treturn this.metadata.country_calling_codes\r\n\t}\r\n\r\n\t// Deprecated.\r\n\tchooseCountryByCountryCallingCode(callingCode) {\r\n\t\treturn this.selectNumberingPlan(callingCode)\r\n\t}\r\n\r\n\thasSelectedNumberingPlan() {\r\n\t\treturn this.numberingPlan !== undefined\r\n\t}\r\n}\r\n\r\nclass NumberingPlan {\r\n\tconstructor(metadata, globalMetadataObject) {\r\n\t\tthis.globalMetadataObject = globalMetadataObject\r\n\t\tthis.metadata = metadata\r\n\t\tsetVersion.call(this, globalMetadataObject.metadata)\r\n\t}\r\n\r\n\tcallingCode() {\r\n\t\treturn this.metadata[0]\r\n\t}\r\n\r\n\t// Formatting information for regions which share\r\n\t// a country calling code is contained by only one region\r\n\t// for performance reasons. For example, for NANPA region\r\n\t// (\"North American Numbering Plan Administration\",\r\n\t//  which includes USA, Canada, Cayman Islands, Bahamas, etc)\r\n\t// it will be contained in the metadata for `US`.\r\n\tgetDefaultCountryMetadataForRegion() {\r\n\t\treturn this.globalMetadataObject.getNumberingPlanMetadata(this.callingCode())\r\n\t}\r\n\r\n\t// Is always present.\r\n\tIDDPrefix() {\r\n\t\tif (this.v1 || this.v2) return\r\n\t\treturn this.metadata[1]\r\n\t}\r\n\r\n\t// Is only present when a country supports multiple IDD prefixes.\r\n\tdefaultIDDPrefix() {\r\n\t\tif (this.v1 || this.v2) return\r\n\t\treturn this.metadata[12]\r\n\t}\r\n\r\n\tnationalNumberPattern() {\r\n\t\tif (this.v1 || this.v2) return this.metadata[1]\r\n\t\treturn this.metadata[2]\r\n\t}\r\n\r\n\t// \"possible length\" data is always present in Google's metadata.\r\n\tpossibleLengths() {\r\n\t\tif (this.v1) return\r\n\t\treturn this.metadata[this.v2 ? 2 : 3]\r\n\t}\r\n\r\n\t_getFormats(metadata) {\r\n\t\treturn metadata[this.v1 ? 2 : this.v2 ? 3 : 4]\r\n\t}\r\n\r\n\t// For countries of the same region (e.g. NANPA)\r\n\t// formats are all stored in the \"main\" country for that region.\r\n\t// E.g. \"RU\" and \"KZ\", \"US\" and \"CA\".\r\n\tformats() {\r\n\t\tconst formats = this._getFormats(this.metadata) || this._getFormats(this.getDefaultCountryMetadataForRegion()) || []\r\n\t\treturn formats.map(_ => new Format(_, this))\r\n\t}\r\n\r\n\tnationalPrefix() {\r\n\t\treturn this.metadata[this.v1 ? 3 : this.v2 ? 4 : 5]\r\n\t}\r\n\r\n\t_getNationalPrefixFormattingRule(metadata) {\r\n\t\treturn metadata[this.v1 ? 4 : this.v2 ? 5 : 6]\r\n\t}\r\n\r\n\t// For countries of the same region (e.g. NANPA)\r\n\t// national prefix formatting rule is stored in the \"main\" country for that region.\r\n\t// E.g. \"RU\" and \"KZ\", \"US\" and \"CA\".\r\n\tnationalPrefixFormattingRule() {\r\n\t\treturn this._getNationalPrefixFormattingRule(this.metadata) || this._getNationalPrefixFormattingRule(this.getDefaultCountryMetadataForRegion())\r\n\t}\r\n\r\n\t_nationalPrefixForParsing() {\r\n\t\treturn this.metadata[this.v1 ? 5 : this.v2 ? 6 : 7]\r\n\t}\r\n\r\n\tnationalPrefixForParsing() {\r\n\t\t// If `national_prefix_for_parsing` is not set explicitly,\r\n\t\t// then infer it from `national_prefix` (if any)\r\n\t\treturn this._nationalPrefixForParsing() || this.nationalPrefix()\r\n\t}\r\n\r\n\tnationalPrefixTransformRule() {\r\n\t\treturn this.metadata[this.v1 ? 6 : this.v2 ? 7 : 8]\r\n\t}\r\n\r\n\t_getNationalPrefixIsOptionalWhenFormatting() {\r\n\t\treturn !!this.metadata[this.v1 ? 7 : this.v2 ? 8 : 9]\r\n\t}\r\n\r\n\t// For countries of the same region (e.g. NANPA)\r\n\t// \"national prefix is optional when formatting\" flag is\r\n\t// stored in the \"main\" country for that region.\r\n\t// E.g. \"RU\" and \"KZ\", \"US\" and \"CA\".\r\n\tnationalPrefixIsOptionalWhenFormattingInNationalFormat() {\r\n\t\treturn this._getNationalPrefixIsOptionalWhenFormatting(this.metadata) ||\r\n\t\t\tthis._getNationalPrefixIsOptionalWhenFormatting(this.getDefaultCountryMetadataForRegion())\r\n\t}\r\n\r\n\tleadingDigits() {\r\n\t\treturn this.metadata[this.v1 ? 8 : this.v2 ? 9 : 10]\r\n\t}\r\n\r\n\ttypes() {\r\n\t\treturn this.metadata[this.v1 ? 9 : this.v2 ? 10 : 11]\r\n\t}\r\n\r\n\thasTypes() {\r\n\t\t// Versions 1.2.0 - 1.2.4: can be `[]`.\r\n\t\t/* istanbul ignore next */\r\n\t\tif (this.types() && this.types().length === 0) {\r\n\t\t\treturn false\r\n\t\t}\r\n\t\t// Versions <= 1.2.4: can be `undefined`.\r\n\t\t// Version >= 1.2.5: can be `0`.\r\n\t\treturn !!this.types()\r\n\t}\r\n\r\n\ttype(type) {\r\n\t\tif (this.hasTypes() && getType(this.types(), type)) {\r\n\t\t\treturn new Type(getType(this.types(), type), this)\r\n\t\t}\r\n\t}\r\n\r\n\text() {\r\n\t\tif (this.v1 || this.v2) return DEFAULT_EXT_PREFIX\r\n\t\treturn this.metadata[13] || DEFAULT_EXT_PREFIX\r\n\t}\r\n}\r\n\r\nclass Format {\r\n\tconstructor(format, metadata) {\r\n\t\tthis._format = format\r\n\t\tthis.metadata = metadata\r\n\t}\r\n\r\n\tpattern() {\r\n\t\treturn this._format[0]\r\n\t}\r\n\r\n\tformat() {\r\n\t\treturn this._format[1]\r\n\t}\r\n\r\n\tleadingDigitsPatterns() {\r\n\t\treturn this._format[2] || []\r\n\t}\r\n\r\n\tnationalPrefixFormattingRule() {\r\n\t\treturn this._format[3] || this.metadata.nationalPrefixFormattingRule()\r\n\t}\r\n\r\n\tnationalPrefixIsOptionalWhenFormattingInNationalFormat() {\r\n\t\treturn !!this._format[4] || this.metadata.nationalPrefixIsOptionalWhenFormattingInNationalFormat()\r\n\t}\r\n\r\n\tnationalPrefixIsMandatoryWhenFormattingInNationalFormat() {\r\n\t\t// National prefix is omitted if there's no national prefix formatting rule\r\n\t\t// set for this country, or when the national prefix formatting rule\r\n\t\t// contains no national prefix itself, or when this rule is set but\r\n\t\t// national prefix is optional for this phone number format\r\n\t\t// (and it is not enforced explicitly)\r\n\t\treturn this.usesNationalPrefix() && !this.nationalPrefixIsOptionalWhenFormattingInNationalFormat()\r\n\t}\r\n\r\n\t// Checks whether national prefix formatting rule contains national prefix.\r\n\tusesNationalPrefix() {\r\n\t\treturn this.nationalPrefixFormattingRule() &&\r\n\t\t\t// Check that national prefix formatting rule is not a \"dummy\" one.\r\n\t\t\t!FIRST_GROUP_ONLY_PREFIX_PATTERN.test(this.nationalPrefixFormattingRule())\r\n\t\t\t// In compressed metadata, `this.nationalPrefixFormattingRule()` is `0`\r\n\t\t\t// when `national_prefix_formatting_rule` is not present.\r\n\t\t\t// So, `true` or `false` are returned explicitly here, so that\r\n\t\t\t// `0` number isn't returned.\r\n\t\t\t? true\r\n\t\t\t: false\r\n\t}\r\n\r\n\tinternationalFormat() {\r\n\t\treturn this._format[5] || this.format()\r\n\t}\r\n}\r\n\r\n/**\r\n * A pattern that is used to determine if the national prefix formatting rule\r\n * has the first group only, i.e., does not start with the national prefix.\r\n * Note that the pattern explicitly allows for unbalanced parentheses.\r\n */\r\nconst FIRST_GROUP_ONLY_PREFIX_PATTERN = /^\\(?\\$1\\)?$/\r\n\r\nclass Type {\r\n\tconstructor(type, metadata) {\r\n\t\tthis.type = type\r\n\t\tthis.metadata = metadata\r\n\t}\r\n\r\n\tpattern() {\r\n\t\tif (this.metadata.v1) return this.type\r\n\t\treturn this.type[0]\r\n\t}\r\n\r\n\tpossibleLengths() {\r\n\t\tif (this.metadata.v1) return\r\n\t\treturn this.type[1] || this.metadata.possibleLengths()\r\n\t}\r\n}\r\n\r\nfunction getType(types, type) {\r\n\tswitch (type) {\r\n\t\tcase 'FIXED_LINE':\r\n\t\t\treturn types[0]\r\n\t\tcase 'MOBILE':\r\n\t\t\treturn types[1]\r\n\t\tcase 'TOLL_FREE':\r\n\t\t\treturn types[2]\r\n\t\tcase 'PREMIUM_RATE':\r\n\t\t\treturn types[3]\r\n\t\tcase 'PERSONAL_NUMBER':\r\n\t\t\treturn types[4]\r\n\t\tcase 'VOICEMAIL':\r\n\t\t\treturn types[5]\r\n\t\tcase 'UAN':\r\n\t\t\treturn types[6]\r\n\t\tcase 'PAGER':\r\n\t\t\treturn types[7]\r\n\t\tcase 'VOIP':\r\n\t\t\treturn types[8]\r\n\t\tcase 'SHARED_COST':\r\n\t\t\treturn types[9]\r\n\t}\r\n}\r\n\r\nexport function validateMetadata(metadata) {\r\n\tif (!metadata) {\r\n\t\tthrow new Error('[libphonenumber-js] `metadata` argument not passed. Check your arguments.')\r\n\t}\r\n\r\n\t// `country_phone_code_to_countries` was renamed to\r\n\t// `country_calling_codes` in `1.0.18`.\r\n\tif (!isObject(metadata) || !isObject(metadata.countries)) {\r\n\t\tthrow new Error(`[libphonenumber-js] \\`metadata\\` argument was passed but it's not a valid metadata. Must be an object having \\`.countries\\` child object property. Got ${isObject(metadata) ? 'an object of shape: { ' + Object.keys(metadata).join(', ') + ' }' : 'a ' + typeOf(metadata) + ': ' + metadata}.`)\r\n\t}\r\n}\r\n\r\n// Babel transforms `typeof` into some \"branches\"\r\n// so istanbul will show this as \"branch not covered\".\r\n/* istanbul ignore next */\r\nconst typeOf = _ => typeof _\r\n\r\n/**\r\n * Returns extension prefix for a country.\r\n * @param  {string} country\r\n * @param  {object} metadata\r\n * @return {string?}\r\n * @example\r\n * // Returns \" ext. \"\r\n * getExtPrefix(\"US\")\r\n */\r\nexport function getExtPrefix(country, metadata) {\r\n\tmetadata = new Metadata(metadata)\r\n\tif (metadata.hasCountry(country)) {\r\n\t\treturn metadata.country(country).ext()\r\n\t}\r\n\treturn DEFAULT_EXT_PREFIX\r\n}\r\n\r\n/**\r\n * Returns \"country calling code\" for a country.\r\n * Throws an error if the country doesn't exist or isn't supported by this library.\r\n * @param  {string} country\r\n * @param  {object} metadata\r\n * @return {string}\r\n * @example\r\n * // Returns \"44\"\r\n * getCountryCallingCode(\"GB\")\r\n */\r\nexport function getCountryCallingCode(country, metadata) {\r\n\tmetadata = new Metadata(metadata)\r\n\tif (metadata.hasCountry(country)) {\r\n\t\treturn metadata.country(country).countryCallingCode()\r\n\t}\r\n\tthrow new Error(`Unknown country: ${country}`)\r\n}\r\n\r\nexport function isSupportedCountry(country, metadata) {\r\n\t// metadata = new Metadata(metadata)\r\n\t// return metadata.hasCountry(country)\r\n\treturn metadata.countries.hasOwnProperty(country)\r\n}\r\n\r\nfunction setVersion(metadata) {\r\n\tconst { version } = metadata\r\n\tif (typeof version === 'number') {\r\n\t\tthis.v1 = version === 1\r\n\t\tthis.v2 = version === 2\r\n\t\tthis.v3 = version === 3\r\n\t\tthis.v4 = version === 4\r\n\t} else {\r\n\t\tif (!version) {\r\n\t\t\tthis.v1 = true\r\n\t\t} else if (compare(version, V3) === -1) {\r\n\t\t\tthis.v2 = true\r\n\t\t} else if (compare(version, V4) === -1) {\r\n\t\t\tthis.v3 = true\r\n\t\t} else {\r\n\t\t\tthis.v4 = true\r\n\t\t}\r\n\t}\r\n}\r\n\r\n// const ISO_COUNTRY_CODE = /^[A-Z]{2}$/\r\n// function isCountryCode(countryCode) {\r\n// \treturn ISO_COUNTRY_CODE.test(countryCodeOrCountryCallingCode)\r\n// }","import { VALID_DIGITS } from '../../constants.js'\r\n\r\n// The RFC 3966 format for extensions.\r\nconst RFC3966_EXTN_PREFIX = ';ext='\r\n\r\n/**\r\n * Helper method for constructing regular expressions for parsing. Creates\r\n * an expression that captures up to max_length digits.\r\n * @return {string} RegEx pattern to capture extension digits.\r\n */\r\nconst getExtensionDigitsPattern = (maxLength) => `([${VALID_DIGITS}]{1,${maxLength}})`\r\n\r\n/**\r\n * Helper initialiser method to create the regular-expression pattern to match\r\n * extensions.\r\n * Copy-pasted from Google's `libphonenumber`:\r\n * https://github.com/google/libphonenumber/blob/55b2646ec9393f4d3d6661b9c82ef9e258e8b829/javascript/i18n/phonenumbers/phonenumberutil.js#L759-L766\r\n * @return {string} RegEx pattern to capture extensions.\r\n */\r\nexport default function createExtensionPattern(purpose) {\r\n\t// We cap the maximum length of an extension based on the ambiguity of the way\r\n\t// the extension is prefixed. As per ITU, the officially allowed length for\r\n\t// extensions is actually 40, but we don't support this since we haven't seen real\r\n\t// examples and this introduces many false interpretations as the extension labels\r\n\t// are not standardized.\r\n\t/** @type {string} */\r\n\tvar extLimitAfterExplicitLabel = '20';\r\n\t/** @type {string} */\r\n\tvar extLimitAfterLikelyLabel = '15';\r\n\t/** @type {string} */\r\n\tvar extLimitAfterAmbiguousChar = '9';\r\n\t/** @type {string} */\r\n\tvar extLimitWhenNotSure = '6';\r\n\r\n\t/** @type {string} */\r\n\tvar possibleSeparatorsBetweenNumberAndExtLabel = \"[ \\u00A0\\\\t,]*\";\r\n\t// Optional full stop (.) or colon, followed by zero or more spaces/tabs/commas.\r\n\t/** @type {string} */\r\n\tvar possibleCharsAfterExtLabel = \"[:\\\\.\\uFF0E]?[ \\u00A0\\\\t,-]*\";\r\n\t/** @type {string} */\r\n\tvar optionalExtnSuffix = \"#?\";\r\n\r\n\t// Here the extension is called out in more explicit way, i.e mentioning it obvious\r\n\t// patterns like \"ext.\".\r\n\t/** @type {string} */\r\n\tvar explicitExtLabels =\r\n\t  \"(?:e?xt(?:ensi(?:o\\u0301?|\\u00F3))?n?|\\uFF45?\\uFF58\\uFF54\\uFF4E?|\\u0434\\u043E\\u0431|anexo)\";\r\n\t// One-character symbols that can be used to indicate an extension, and less\r\n\t// commonly used or more ambiguous extension labels.\r\n\t/** @type {string} */\r\n\tvar ambiguousExtLabels = \"(?:[x\\uFF58#\\uFF03~\\uFF5E]|int|\\uFF49\\uFF4E\\uFF54)\";\r\n\t// When extension is not separated clearly.\r\n\t/** @type {string} */\r\n\tvar ambiguousSeparator = \"[- ]+\";\r\n\t// This is the same as possibleSeparatorsBetweenNumberAndExtLabel, but not matching\r\n\t// comma as extension label may have it.\r\n\t/** @type {string} */\r\n\tvar possibleSeparatorsNumberExtLabelNoComma = \"[ \\u00A0\\\\t]*\";\r\n\t// \",,\" is commonly used for auto dialling the extension when connected. First\r\n\t// comma is matched through possibleSeparatorsBetweenNumberAndExtLabel, so we do\r\n\t// not repeat it here. Semi-colon works in Iphone and Android also to pop up a\r\n\t// button with the extension number following.\r\n\t/** @type {string} */\r\n\tvar autoDiallingAndExtLabelsFound = \"(?:,{2}|;)\";\r\n\r\n\t/** @type {string} */\r\n\tvar rfcExtn = RFC3966_EXTN_PREFIX\r\n\t     + getExtensionDigitsPattern(extLimitAfterExplicitLabel);\r\n\t/** @type {string} */\r\n\tvar explicitExtn = possibleSeparatorsBetweenNumberAndExtLabel + explicitExtLabels\r\n\t     + possibleCharsAfterExtLabel\r\n\t     + getExtensionDigitsPattern(extLimitAfterExplicitLabel)\r\n\t     + optionalExtnSuffix;\r\n\t/** @type {string} */\r\n\tvar ambiguousExtn = possibleSeparatorsBetweenNumberAndExtLabel + ambiguousExtLabels\r\n\t     + possibleCharsAfterExtLabel\r\n\t+ getExtensionDigitsPattern(extLimitAfterAmbiguousChar)\r\n\t+ optionalExtnSuffix;\r\n\t/** @type {string} */\r\n\tvar americanStyleExtnWithSuffix = ambiguousSeparator\r\n\t+ getExtensionDigitsPattern(extLimitWhenNotSure) + \"#\";\r\n\r\n\t/** @type {string} */\r\n\tvar autoDiallingExtn = possibleSeparatorsNumberExtLabelNoComma\r\n\t     + autoDiallingAndExtLabelsFound + possibleCharsAfterExtLabel\r\n\t     + getExtensionDigitsPattern(extLimitAfterLikelyLabel)\r\n\t+ optionalExtnSuffix;\r\n\t/** @type {string} */\r\n\tvar onlyCommasExtn = possibleSeparatorsNumberExtLabelNoComma\r\n\t    + \"(?:,)+\" + possibleCharsAfterExtLabel\r\n\t    + getExtensionDigitsPattern(extLimitAfterAmbiguousChar)\r\n\t    + optionalExtnSuffix;\r\n\r\n\t// The first regular expression covers RFC 3966 format, where the extension is added\r\n\t// using \";ext=\". The second more generic where extension is mentioned with explicit\r\n\t// labels like \"ext:\". In both the above cases we allow more numbers in extension than\r\n\t// any other extension labels. The third one captures when single character extension\r\n\t// labels or less commonly used labels are used. In such cases we capture fewer\r\n\t// extension digits in order to reduce the chance of falsely interpreting two\r\n\t// numbers beside each other as a number + extension. The fourth one covers the\r\n\t// special case of American numbers where the extension is written with a hash\r\n\t// at the end, such as \"- 503#\". The fifth one is exclusively for extension\r\n\t// autodialling formats which are used when dialling and in this case we accept longer\r\n\t// extensions. The last one is more liberal on the number of commas that acts as\r\n\t// extension labels, so we have a strict cap on the number of digits in such extensions.\r\n\treturn rfcExtn + \"|\"\r\n\t       + explicitExtn + \"|\"\r\n\t       + ambiguousExtn + \"|\"\r\n\t       + americanStyleExtnWithSuffix + \"|\"\r\n\t       + autoDiallingExtn + \"|\"\r\n\t       + onlyCommasExtn;\r\n}","import {\r\n\tMIN_LENGTH_FOR_NSN,\r\n\tVALID_DIGITS,\r\n\tVALID_PUNCTUATION,\r\n\tPLUS_CHARS\r\n} from '../constants.js'\r\n\r\nimport createExtensionPattern from './extension/createExtensionPattern.js'\r\n\r\n//  Regular expression of viable phone numbers. This is location independent.\r\n//  Checks we have at least three leading digits, and only valid punctuation,\r\n//  alpha characters and digits in the phone number. Does not include extension\r\n//  data. The symbol 'x' is allowed here as valid punctuation since it is often\r\n//  used as a placeholder for carrier codes, for example in Brazilian phone\r\n//  numbers. We also allow multiple '+' characters at the start.\r\n//\r\n//  Corresponds to the following:\r\n//  [digits]{minLengthNsn}|\r\n//  plus_sign*\r\n//  (([punctuation]|[star])*[digits]){3,}([punctuation]|[star]|[digits]|[alpha])*\r\n//\r\n//  The first reg-ex is to allow short numbers (two digits long) to be parsed if\r\n//  they are entered as \"15\" etc, but only if there is no punctuation in them.\r\n//  The second expression restricts the number of digits to three or more, but\r\n//  then allows them to be in international form, and to have alpha-characters\r\n//  and punctuation. We split up the two reg-exes here and combine them when\r\n//  creating the reg-ex VALID_PHONE_NUMBER_PATTERN itself so we can prefix it\r\n//  with ^ and append $ to each branch.\r\n//\r\n//  \"Note VALID_PUNCTUATION starts with a -,\r\n//   so must be the first in the range\" (c) Google devs.\r\n//  (wtf did they mean by saying that; probably nothing)\r\n//\r\nconst MIN_LENGTH_PHONE_NUMBER_PATTERN = '[' + VALID_DIGITS + ']{' + MIN_LENGTH_FOR_NSN + '}'\r\n//\r\n// And this is the second reg-exp:\r\n// (see MIN_LENGTH_PHONE_NUMBER_PATTERN for a full description of this reg-exp)\r\n//\r\nexport const VALID_PHONE_NUMBER =\r\n\t'[' + PLUS_CHARS + ']{0,1}' +\r\n\t'(?:' +\r\n\t\t'[' + VALID_PUNCTUATION + ']*' +\r\n\t\t'[' + VALID_DIGITS + ']' +\r\n\t'){3,}' +\r\n\t'[' +\r\n\t\tVALID_PUNCTUATION +\r\n\t\tVALID_DIGITS +\r\n\t']*'\r\n\r\n// This regular expression isn't present in Google's `libphonenumber`\r\n// and is only used to determine whether the phone number being input\r\n// is too short for it to even consider it a \"valid\" number.\r\n// This is just a way to differentiate between a really invalid phone\r\n// number like \"abcde\" and a valid phone number that a user has just\r\n// started inputting, like \"+1\" or \"1\": both these cases would be\r\n// considered `NOT_A_NUMBER` by Google's `libphonenumber`, but this\r\n// library can provide a more detailed error message — whether it's\r\n// really \"not a number\", or is it just a start of a valid phone number.\r\nconst VALID_PHONE_NUMBER_START_REG_EXP = new RegExp(\r\n\t'^' +\r\n\t'[' + PLUS_CHARS + ']{0,1}' +\r\n\t'(?:' +\r\n\t\t'[' + VALID_PUNCTUATION + ']*' +\r\n\t\t'[' + VALID_DIGITS + ']' +\r\n\t'){1,2}' +\r\n\t'$'\r\n, 'i')\r\n\r\nexport const VALID_PHONE_NUMBER_WITH_EXTENSION =\r\n\tVALID_PHONE_NUMBER +\r\n\t// Phone number extensions\r\n\t'(?:' + createExtensionPattern() + ')?'\r\n\r\n// The combined regular expression for valid phone numbers:\r\n//\r\nconst VALID_PHONE_NUMBER_PATTERN = new RegExp(\r\n\t// Either a short two-digit-only phone number\r\n\t'^' +\r\n\t\tMIN_LENGTH_PHONE_NUMBER_PATTERN +\r\n\t'$' +\r\n\t'|' +\r\n\t// Or a longer fully parsed phone number (min 3 characters)\r\n\t'^' +\r\n\t\tVALID_PHONE_NUMBER_WITH_EXTENSION +\r\n\t'$'\r\n, 'i')\r\n\r\n// Checks to see if the string of characters could possibly be a phone number at\r\n// all. At the moment, checks to see that the string begins with at least 2\r\n// digits, ignoring any punctuation commonly found in phone numbers. This method\r\n// does not require the number to be normalized in advance - but does assume\r\n// that leading non-number symbols have been removed, such as by the method\r\n// `extract_possible_number`.\r\n//\r\nexport default function isViablePhoneNumber(number) {\r\n\treturn number.length >= MIN_LENGTH_FOR_NSN &&\r\n\t\tVALID_PHONE_NUMBER_PATTERN.test(number)\r\n}\r\n\r\n// This is just a way to differentiate between a really invalid phone\r\n// number like \"abcde\" and a valid phone number that a user has just\r\n// started inputting, like \"+1\" or \"1\": both these cases would be\r\n// considered `NOT_A_NUMBER` by Google's `libphonenumber`, but this\r\n// library can provide a more detailed error message — whether it's\r\n// really \"not a number\", or is it just a start of a valid phone number.\r\nexport function isViablePhoneNumberStart(number) {\r\n\treturn VALID_PHONE_NUMBER_START_REG_EXP.test(number)\r\n}","import createExtensionPattern from './createExtensionPattern.js'\r\n\r\n// Regexp of all known extension prefixes used by different regions followed by\r\n// 1 or more valid digits, for use when parsing.\r\nconst EXTN_PATTERN = new RegExp('(?:' + createExtensionPattern() + ')$', 'i')\r\n\r\n// Strips any extension (as in, the part of the number dialled after the call is\r\n// connected, usually indicated with extn, ext, x or similar) from the end of\r\n// the number, and returns it.\r\nexport default function extractExtension(number) {\r\n\tconst start = number.search(EXTN_PATTERN)\r\n\tif (start < 0) {\r\n\t\treturn {}\r\n\t}\r\n\t// If we find a potential extension, and the number preceding this is a viable\r\n\t// number, we assume it is an extension.\r\n\tconst numberWithoutExtension = number.slice(0, start)\r\n\tconst matches = number.match(EXTN_PATTERN)\r\n\tlet i = 1\r\n\twhile (i < matches.length) {\r\n\t\tif (matches[i]) {\r\n\t\t\treturn {\r\n\t\t\t\tnumber: numberWithoutExtension,\r\n\t\t\t\text: matches[i]\r\n\t\t\t}\r\n\t\t}\r\n\t\ti++\r\n\t}\r\n}","// These mappings map a character (key) to a specific digit that should\r\n// replace it for normalization purposes. Non-European digits that\r\n// may be used in phone numbers are mapped to a European equivalent.\r\n//\r\n// E.g. in Iraq they don't write `+442323234` but rather `+٤٤٢٣٢٣٢٣٤`.\r\n//\r\nexport const DIGITS = {\r\n\t'0': '0',\r\n\t'1': '1',\r\n\t'2': '2',\r\n\t'3': '3',\r\n\t'4': '4',\r\n\t'5': '5',\r\n\t'6': '6',\r\n\t'7': '7',\r\n\t'8': '8',\r\n\t'9': '9',\r\n\t'\\uFF10': '0', // Fullwidth digit 0\r\n\t'\\uFF11': '1', // Fullwidth digit 1\r\n\t'\\uFF12': '2', // Fullwidth digit 2\r\n\t'\\uFF13': '3', // Fullwidth digit 3\r\n\t'\\uFF14': '4', // Fullwidth digit 4\r\n\t'\\uFF15': '5', // Fullwidth digit 5\r\n\t'\\uFF16': '6', // Fullwidth digit 6\r\n\t'\\uFF17': '7', // Fullwidth digit 7\r\n\t'\\uFF18': '8', // Fullwidth digit 8\r\n\t'\\uFF19': '9', // Fullwidth digit 9\r\n\t'\\u0660': '0', // Arabic-indic digit 0\r\n\t'\\u0661': '1', // Arabic-indic digit 1\r\n\t'\\u0662': '2', // Arabic-indic digit 2\r\n\t'\\u0663': '3', // Arabic-indic digit 3\r\n\t'\\u0664': '4', // Arabic-indic digit 4\r\n\t'\\u0665': '5', // Arabic-indic digit 5\r\n\t'\\u0666': '6', // Arabic-indic digit 6\r\n\t'\\u0667': '7', // Arabic-indic digit 7\r\n\t'\\u0668': '8', // Arabic-indic digit 8\r\n\t'\\u0669': '9', // Arabic-indic digit 9\r\n\t'\\u06F0': '0', // Eastern-Arabic digit 0\r\n\t'\\u06F1': '1', // Eastern-Arabic digit 1\r\n\t'\\u06F2': '2', // Eastern-Arabic digit 2\r\n\t'\\u06F3': '3', // Eastern-Arabic digit 3\r\n\t'\\u06F4': '4', // Eastern-Arabic digit 4\r\n\t'\\u06F5': '5', // Eastern-Arabic digit 5\r\n\t'\\u06F6': '6', // Eastern-Arabic digit 6\r\n\t'\\u06F7': '7', // Eastern-Arabic digit 7\r\n\t'\\u06F8': '8', // Eastern-Arabic digit 8\r\n\t'\\u06F9': '9'  // Eastern-Arabic digit 9\r\n}\r\n\r\nexport function parseDigit(character) {\r\n\treturn DIGITS[character]\r\n}\r\n\r\n/**\r\n * Parses phone number digits from a string.\r\n * Drops all punctuation leaving only digits.\r\n * Also converts wide-ascii and arabic-indic numerals to conventional numerals.\r\n * E.g. in Iraq they don't write `+442323234` but rather `+٤٤٢٣٢٣٢٣٤`.\r\n * @param  {string} string\r\n * @return {string}\r\n * @example\r\n * ```js\r\n * parseDigits('8 (800) 555')\r\n * // Outputs '8800555'.\r\n * ```\r\n */\r\nexport default function parseDigits(string) {\r\n\tlet result = ''\r\n\t// Using `.split('')` here instead of normal `for ... of`\r\n\t// because the importing application doesn't neccessarily include an ES6 polyfill.\r\n\t// The `.split('')` approach discards \"exotic\" UTF-8 characters\r\n\t// (the ones consisting of four bytes) but digits\r\n\t// (including non-European ones) don't fall into that range\r\n\t// so such \"exotic\" characters would be discarded anyway.\r\n\tfor (const character of string.split('')) {\r\n\t\tconst digit = parseDigit(character)\r\n\t\tif (digit) {\r\n\t\t\tresult += digit\r\n\t\t}\r\n\t}\r\n\treturn result\r\n}","import { parseDigit } from './helpers/parseDigits.js'\r\n\r\n/**\r\n * Parses phone number characters from a string.\r\n * Drops all punctuation leaving only digits and the leading `+` sign (if any).\r\n * Also converts wide-ascii and arabic-indic numerals to conventional numerals.\r\n * E.g. in Iraq they don't write `+442323234` but rather `+٤٤٢٣٢٣٢٣٤`.\r\n * @param  {string} string\r\n * @return {string}\r\n * @example\r\n * ```js\r\n * // Outputs '8800555'.\r\n * parseIncompletePhoneNumber('8 (800) 555')\r\n * // Outputs '+7800555'.\r\n * parseIncompletePhoneNumber('+7 800 555')\r\n * ```\r\n */\r\nexport default function parseIncompletePhoneNumber(string) {\r\n\tlet result = ''\r\n\t// Using `.split('')` here instead of normal `for ... of`\r\n\t// because the importing application doesn't neccessarily include an ES6 polyfill.\r\n\t// The `.split('')` approach discards \"exotic\" UTF-8 characters\r\n\t// (the ones consisting of four bytes) but digits\r\n\t// (including non-European ones) don't fall into that range\r\n\t// so such \"exotic\" characters would be discarded anyway.\r\n\tfor (const character of string.split('')) {\r\n\t\tresult += parsePhoneNumberCharacter(character, result) || ''\r\n\t}\r\n\treturn result\r\n}\r\n\r\n/**\r\n * Parses next character while parsing phone number digits (including a `+`)\r\n * from text: discards everything except `+` and digits, and `+` is only allowed\r\n * at the start of a phone number.\r\n * For example, is used in `react-phone-number-input` where it uses\r\n * [`input-format`](https://gitlab.com/catamphetamine/input-format).\r\n * @param  {string} character - Yet another character from raw input string.\r\n * @param  {string?} prevParsedCharacters - Previous parsed characters.\r\n * @param  {function?} emitEvent - An optional \"emit event\" function.\r\n * @return {string?} The parsed character.\r\n */\r\nexport function parsePhoneNumberCharacter(character, prevParsedCharacters, emitEvent) {\r\n\t// Only allow a leading `+`.\r\n\tif (character === '+') {\r\n\t\t// If this `+` is not the first parsed character\r\n\t\t// then discard it.\r\n\t\tif (prevParsedCharacters) {\r\n\t\t\t// `emitEvent` argument was added to this `export`ed function on Dec 26th, 2023.\r\n\t\t\t// Any 3rd-party code that used to `import` and call this function before that\r\n\t\t\t// won't be passing any `emitEvent` argument.\r\n\t\t\t//\r\n\t\t\t// The addition of the `emitEvent` argument was to fix the slightly-weird behavior\r\n\t\t\t// of parsing an input string when the user inputs something like `\"2+7\"\r\n\t\t\t// https://github.com/catamphetamine/react-phone-number-input/issues/437\r\n\t\t\t//\r\n\t\t\t// If the parser encounters an unexpected `+` in a string being parsed\r\n\t\t\t// then it simply discards that out-of-place `+` and any following characters.\r\n\t\t\t//\r\n\t\t\tif (typeof emitEvent === 'function') {\r\n\t\t\t\temitEvent('end')\r\n\t\t\t}\r\n\t\t\treturn\r\n\t\t}\r\n\t\treturn '+'\r\n\t}\r\n\t// Allow digits.\r\n\treturn parseDigit(character)\r\n}","import mergeArrays from './mergeArrays.js'\r\n\r\nexport default function checkNumberLength(nationalNumber, metadata) {\r\n\treturn checkNumberLengthForType(nationalNumber, undefined, metadata)\r\n}\r\n\r\n// Checks whether a number is possible for the country based on its length.\r\n// Should only be called for the \"new\" metadata which has \"possible lengths\".\r\nexport function checkNumberLengthForType(nationalNumber, type, metadata) {\r\n\tconst type_info = metadata.type(type)\r\n\r\n\t// There should always be \"<possiblePengths/>\" set for every type element.\r\n\t// This is declared in the XML schema.\r\n\t// For size efficiency, where a sub-description (e.g. fixed-line)\r\n\t// has the same \"<possiblePengths/>\" as the \"general description\", this is missing,\r\n\t// so we fall back to the \"general description\". Where no numbers of the type\r\n\t// exist at all, there is one possible length (-1) which is guaranteed\r\n\t// not to match the length of any real phone number.\r\n\tlet possible_lengths = type_info && type_info.possibleLengths() || metadata.possibleLengths()\r\n\t// let local_lengths    = type_info && type.possibleLengthsLocal() || metadata.possibleLengthsLocal()\r\n\r\n\t// Metadata before version `1.0.18` didn't contain `possible_lengths`.\r\n\tif (!possible_lengths) {\r\n\t\treturn 'IS_POSSIBLE'\r\n\t}\r\n\r\n\tif (type === 'FIXED_LINE_OR_MOBILE') {\r\n\t\t// No such country in metadata.\r\n\t\t/* istanbul ignore next */\r\n\t\tif (!metadata.type('FIXED_LINE')) {\r\n\t\t\t// The rare case has been encountered where no fixedLine data is available\r\n\t\t\t// (true for some non-geographic entities), so we just check mobile.\r\n\t\t\treturn checkNumberLengthForType(nationalNumber, 'MOBILE', metadata)\r\n\t\t}\r\n\r\n\t\tconst mobile_type = metadata.type('MOBILE')\r\n\t\tif (mobile_type) {\r\n\t\t\t// Merge the mobile data in if there was any. \"Concat\" creates a new\r\n\t\t\t// array, it doesn't edit possible_lengths in place, so we don't need a copy.\r\n\t\t\t// Note that when adding the possible lengths from mobile, we have\r\n\t\t\t// to again check they aren't empty since if they are this indicates\r\n\t\t\t// they are the same as the general desc and should be obtained from there.\r\n\t\t\tpossible_lengths = mergeArrays(possible_lengths, mobile_type.possibleLengths())\r\n\t\t\t// The current list is sorted; we need to merge in the new list and\r\n\t\t\t// re-sort (duplicates are okay). Sorting isn't so expensive because\r\n\t\t\t// the lists are very small.\r\n\r\n\t\t\t// if (local_lengths) {\r\n\t\t\t// \tlocal_lengths = mergeArrays(local_lengths, mobile_type.possibleLengthsLocal())\r\n\t\t\t// } else {\r\n\t\t\t// \tlocal_lengths = mobile_type.possibleLengthsLocal()\r\n\t\t\t// }\r\n\t\t}\r\n\t}\r\n\t// If the type doesn't exist then return 'INVALID_LENGTH'.\r\n\telse if (type && !type_info) {\r\n\t\treturn 'INVALID_LENGTH'\r\n\t}\r\n\r\n\tconst actual_length = nationalNumber.length\r\n\r\n\t// In `libphonenumber-js` all \"local-only\" formats are dropped for simplicity.\r\n\t// // This is safe because there is never an overlap beween the possible lengths\r\n\t// // and the local-only lengths; this is checked at build time.\r\n\t// if (local_lengths && local_lengths.indexOf(nationalNumber.length) >= 0)\r\n\t// {\r\n\t// \treturn 'IS_POSSIBLE_LOCAL_ONLY'\r\n\t// }\r\n\r\n\tconst minimum_length = possible_lengths[0]\r\n\r\n\tif (minimum_length === actual_length) {\r\n\t\treturn 'IS_POSSIBLE'\r\n\t}\r\n\r\n\tif (minimum_length > actual_length) {\r\n\t\treturn 'TOO_SHORT'\r\n\t}\r\n\r\n\tif (possible_lengths[possible_lengths.length - 1] < actual_length) {\r\n\t\treturn 'TOO_LONG'\r\n\t}\r\n\r\n\t// We skip the first element since we've already checked it.\r\n\treturn possible_lengths.indexOf(actual_length, 1) >= 0 ? 'IS_POSSIBLE' : 'INVALID_LENGTH'\r\n}","/**\r\n * Merges two arrays.\r\n * @param  {*} a\r\n * @param  {*} b\r\n * @return {*}\r\n */\r\nexport default function mergeArrays(a, b) {\r\n\tconst merged = a.slice()\r\n\r\n\tfor (const element of b) {\r\n\t\tif (a.indexOf(element) < 0) {\r\n\t\t\tmerged.push(element)\r\n\t\t}\r\n\t}\r\n\r\n\treturn merged.sort((a, b) => a - b)\r\n\r\n\t// ES6 version, requires Set polyfill.\r\n\t// let merged = new Set(a)\r\n\t// for (const element of b) {\r\n\t// \tmerged.add(i)\r\n\t// }\r\n\t// return Array.from(merged).sort((a, b) => a - b)\r\n}","import Metadata from './metadata.js'\r\nimport checkNumberLength from './helpers/checkNumberLength.js'\r\n\r\n/**\r\n * Checks if a phone number is \"possible\" (basically just checks its length).\r\n *\r\n * isPossible(phoneNumberInstance, { ..., v2: true }, metadata)\r\n *\r\n * isPossible({ phone: '8005553535', country: 'RU' }, { ... }, metadata)\r\n * isPossible({ phone: '8005553535', country: 'RU' }, undefined, metadata)\r\n *\r\n * @param  {object|PhoneNumber} input — If `options.v2: true` flag is passed, the `input` should be a `PhoneNumber` instance. Otherwise, it should be an object of shape `{ phone: '...', country: '...' }`.\r\n * @param  {object} [options]\r\n * @param  {object} metadata\r\n * @return {string}\r\n */\r\nexport default function isPossiblePhoneNumber(input, options, metadata) {\r\n\t/* istanbul ignore if */\r\n\tif (options === undefined) {\r\n\t\toptions = {}\r\n\t}\r\n\r\n\tmetadata = new Metadata(metadata)\r\n\r\n\tif (options.v2) {\r\n\t\tif (!input.countryCallingCode) {\r\n\t\t\tthrow new Error('Invalid phone number object passed')\r\n\t\t}\r\n\t\tmetadata.selectNumberingPlan(input.countryCallingCode)\r\n\t} else {\r\n\t\tif (!input.phone) {\r\n\t\t\treturn false\r\n\t\t}\r\n\t\tif (input.country) {\r\n\t\t\tif (!metadata.hasCountry(input.country)) {\r\n\t\t\t\tthrow new Error(`Unknown country: ${input.country}`)\r\n\t\t\t}\r\n\t\t\tmetadata.country(input.country)\r\n\t\t} else {\r\n\t\t\tif (!input.countryCallingCode) {\r\n\t\t\t\tthrow new Error('Invalid phone number object passed')\r\n\t\t\t}\r\n\t\t\tmetadata.selectNumberingPlan(input.countryCallingCode)\r\n\t\t}\r\n\t}\r\n\r\n\t// Old metadata (< 1.0.18) had no \"possible length\" data.\r\n\tif (metadata.possibleLengths()) {\r\n\t\treturn isPossibleNumber(input.phone || input.nationalNumber, metadata)\r\n\t} else {\r\n\t\t// There was a bug between `1.7.35` and `1.7.37` where \"possible_lengths\"\r\n\t\t// were missing for \"non-geographical\" numbering plans.\r\n\t\t// Just assume the number is possible in such cases:\r\n\t\t// it's unlikely that anyone generated their custom metadata\r\n\t\t// in that short period of time (one day).\r\n\t\t// This code can be removed in some future major version update.\r\n\t\tif (input.countryCallingCode && metadata.isNonGeographicCallingCode(input.countryCallingCode)) {\r\n\t\t\t// \"Non-geographic entities\" did't have `possibleLengths`\r\n\t\t\t// due to a bug in metadata generation process.\r\n\t\t\treturn true\r\n\t\t} else {\r\n\t\t\tthrow new Error('Missing \"possibleLengths\" in metadata. Perhaps the metadata has been generated before v1.0.18.');\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport function isPossibleNumber(nationalNumber, metadata) { //, isInternational) {\r\n\tswitch (checkNumberLength(nationalNumber, metadata)) {\r\n\t\tcase 'IS_POSSIBLE':\r\n\t\t\treturn true\r\n\t\t// This library ignores \"local-only\" phone numbers (for simplicity).\r\n\t\t// See the readme for more info on what are \"local-only\" phone numbers.\r\n\t\t// case 'IS_POSSIBLE_LOCAL_ONLY':\r\n\t\t// \treturn !isInternational\r\n\t\tdefault:\r\n\t\t\treturn false\r\n\t}\r\n}","/**\r\n * Checks whether the entire input sequence can be matched\r\n * against the regular expression.\r\n * @return {boolean}\r\n */\r\nexport default function matchesEntirely(text, regular_expression) {\r\n\t// If assigning the `''` default value is moved to the arguments above,\r\n\t// code coverage would decrease for some weird reason.\r\n\ttext = text || ''\r\n\treturn new RegExp('^(?:' + regular_expression + ')$').test(text)\r\n}","import Metadata from '../metadata.js'\r\nimport matchesEntirely from './matchesEntirely.js'\r\n\r\nconst NON_FIXED_LINE_PHONE_TYPES = [\r\n\t'MOBILE',\r\n\t'PREMIUM_RATE',\r\n\t'TOLL_FREE',\r\n\t'SHARED_COST',\r\n\t'VOIP',\r\n\t'PERSONAL_NUMBER',\r\n\t'PAGER',\r\n\t'UAN',\r\n\t'VOICEMAIL'\r\n]\r\n\r\n// Finds out national phone number type (fixed line, mobile, etc)\r\nexport default function getNumberType(input, options, metadata)\r\n{\r\n\t// If assigning the `{}` default value is moved to the arguments above,\r\n\t// code coverage would decrease for some weird reason.\r\n\toptions = options || {}\r\n\r\n\t// When `parse()` returns an empty object — `{}` —\r\n\t// that means that the phone number is malformed,\r\n\t// so it can't possibly be valid.\r\n\tif (!input.country && !input.countryCallingCode) {\r\n\t\treturn\r\n\t}\r\n\r\n\tmetadata = new Metadata(metadata)\r\n\r\n\tmetadata.selectNumberingPlan(input.country, input.countryCallingCode)\r\n\r\n\tconst nationalNumber = options.v2 ? input.nationalNumber : input.phone\r\n\r\n\t// The following is copy-pasted from the original function:\r\n\t// https://github.com/googlei18n/libphonenumber/blob/3ea547d4fbaa2d0b67588904dfa5d3f2557c27ff/javascript/i18n/phonenumbers/phonenumberutil.js#L2835\r\n\r\n\t// Is this national number even valid for this country\r\n\tif (!matchesEntirely(nationalNumber, metadata.nationalNumberPattern())) {\r\n\t\treturn\r\n\t}\r\n\r\n\t// Is it fixed line number\r\n\tif (isNumberTypeEqualTo(nationalNumber, 'FIXED_LINE', metadata)) {\r\n\t\t// Because duplicate regular expressions are removed\r\n\t\t// to reduce metadata size, if \"mobile\" pattern is \"\"\r\n\t\t// then it means it was removed due to being a duplicate of the fixed-line pattern.\r\n\t\t//\r\n\t\tif (metadata.type('MOBILE') && metadata.type('MOBILE').pattern() === '') {\r\n\t\t\treturn 'FIXED_LINE_OR_MOBILE'\r\n\t\t}\r\n\r\n\t\t// `MOBILE` type pattern isn't included if it matched `FIXED_LINE` one.\r\n\t\t// For example, for \"US\" country.\r\n\t\t// Old metadata (< `1.0.18`) had a specific \"types\" data structure\r\n\t\t// that happened to be `undefined` for `MOBILE` in that case.\r\n\t\t// Newer metadata (>= `1.0.18`) has another data structure that is\r\n\t\t// not `undefined` for `MOBILE` in that case (it's just an empty array).\r\n\t\t// So this `if` is just for backwards compatibility with old metadata.\r\n\t\tif (!metadata.type('MOBILE')) {\r\n\t\t\treturn 'FIXED_LINE_OR_MOBILE'\r\n\t\t}\r\n\r\n\t\t// Check if the number happens to qualify as both fixed line and mobile.\r\n\t\t// (no such country in the minimal metadata set)\r\n\t\t/* istanbul ignore if */\r\n\t\tif (isNumberTypeEqualTo(nationalNumber, 'MOBILE', metadata)) {\r\n\t\t\treturn 'FIXED_LINE_OR_MOBILE'\r\n\t\t}\r\n\r\n\t\treturn 'FIXED_LINE'\r\n\t}\r\n\r\n\tfor (const type of NON_FIXED_LINE_PHONE_TYPES) {\r\n\t\tif (isNumberTypeEqualTo(nationalNumber, type, metadata)) {\r\n\t\t\treturn type\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport function isNumberTypeEqualTo(nationalNumber, type, metadata) {\r\n\ttype = metadata.type(type)\r\n\tif (!type || !type.pattern()) {\r\n\t\treturn false\r\n\t}\r\n\t// Check if any possible number lengths are present;\r\n\t// if so, we use them to avoid checking\r\n\t// the validation pattern if they don't match.\r\n\t// If they are absent, this means they match\r\n\t// the general description, which we have\r\n\t// already checked before a specific number type.\r\n\tif (type.possibleLengths() &&\r\n\t\ttype.possibleLengths().indexOf(nationalNumber.length) < 0) {\r\n\t\treturn false\r\n\t}\r\n\treturn matchesEntirely(nationalNumber, type.pattern())\r\n}","import Metadata from '../metadata.js'\r\n\r\n/**\r\n * Returns a list of countries that the phone number could potentially belong to.\r\n * @param  {string} callingCode — Calling code.\r\n * @param  {string} nationalNumber — National (significant) number.\r\n * @param  {object} metadata — Metadata.\r\n * @return {string[]} A list of possible countries.\r\n */\r\nexport default function getPossibleCountriesForNumber(callingCode, nationalNumber, metadata) {\r\n\tconst _metadata = new Metadata(metadata)\r\n\tlet possibleCountries = _metadata.getCountryCodesForCallingCode(callingCode)\r\n\tif (!possibleCountries) {\r\n\t\treturn []\r\n\t}\r\n\treturn possibleCountries.filter((country) => {\r\n\t\treturn couldNationalNumberBelongToCountry(nationalNumber, country, metadata)\r\n\t})\r\n}\r\n\r\nfunction couldNationalNumberBelongToCountry(nationalNumber, country, metadata) {\r\n\tconst _metadata = new Metadata(metadata)\r\n\t_metadata.selectNumberingPlan(country)\r\n\tif (_metadata.numberingPlan.possibleLengths().indexOf(nationalNumber.length) >= 0) {\r\n\t\treturn true\r\n\t}\r\n\treturn false\r\n}","import applyInternationalSeparatorStyle from './applyInternationalSeparatorStyle.js'\r\n\r\n// This was originally set to $1 but there are some countries for which the\r\n// first group is not used in the national pattern (e.g. Argentina) so the $1\r\n// group does not match correctly. Therefore, we use `\\d`, so that the first\r\n// group actually used in the pattern will be matched.\r\nexport const FIRST_GROUP_PATTERN = /(\\$\\d)/\r\n\r\nexport default function formatNationalNumberUsingFormat(\r\n\tnumber,\r\n\tformat,\r\n\t{\r\n\t\tuseInternationalFormat,\r\n\t\twithNationalPrefix,\r\n\t\tcarrierCode,\r\n\t\tmetadata\r\n\t}\r\n) {\r\n\tconst formattedNumber = number.replace(\r\n\t\tnew RegExp(format.pattern()),\r\n\t\tuseInternationalFormat\r\n\t\t\t? format.internationalFormat()\r\n\t\t\t: (\r\n\t\t\t\t// This library doesn't use `domestic_carrier_code_formatting_rule`,\r\n\t\t\t\t// because that one is only used when formatting phone numbers\r\n\t\t\t\t// for dialing from a mobile phone, and this is not a dialing library.\r\n\t\t\t\t// carrierCode && format.domesticCarrierCodeFormattingRule()\r\n\t\t\t\t// \t// First, replace the $CC in the formatting rule with the desired carrier code.\r\n\t\t\t\t// \t// Then, replace the $FG in the formatting rule with the first group\r\n\t\t\t\t// \t// and the carrier code combined in the appropriate way.\r\n\t\t\t\t// \t? format.format().replace(FIRST_GROUP_PATTERN, format.domesticCarrierCodeFormattingRule().replace('$CC', carrierCode))\r\n\t\t\t\t// \t: (\r\n\t\t\t\t// \t\twithNationalPrefix && format.nationalPrefixFormattingRule()\r\n\t\t\t\t// \t\t\t? format.format().replace(FIRST_GROUP_PATTERN, format.nationalPrefixFormattingRule())\r\n\t\t\t\t// \t\t\t: format.format()\r\n\t\t\t\t// \t)\r\n\t\t\t\twithNationalPrefix && format.nationalPrefixFormattingRule()\r\n\t\t\t\t\t? format.format().replace(FIRST_GROUP_PATTERN, format.nationalPrefixFormattingRule())\r\n\t\t\t\t\t: format.format()\r\n\t\t\t)\r\n\t)\r\n\tif (useInternationalFormat) {\r\n\t\treturn applyInternationalSeparatorStyle(formattedNumber)\r\n\t}\r\n\treturn formattedNumber\r\n}","import { VALID_PUNCTUATION } from '../constants.js'\r\n\r\n// Removes brackets and replaces dashes with spaces.\r\n//\r\n// E.g. \"(999) 111-22-33\" -> \"999 111 22 33\"\r\n//\r\n// For some reason Google's metadata contains `<intlFormat/>`s with brackets and dashes.\r\n// Meanwhile, there's no single opinion about using punctuation in international phone numbers.\r\n//\r\n// For example, Google's `<intlFormat/>` for USA is `+1 213-373-4253`.\r\n// And here's a quote from WikiPedia's \"North American Numbering Plan\" page:\r\n// https://en.wikipedia.org/wiki/North_American_Numbering_Plan\r\n//\r\n// \"The country calling code for all countries participating in the NANP is 1.\r\n// In international format, an NANP number should be listed as +1 301 555 01 00,\r\n// where 301 is an area code (Maryland).\"\r\n//\r\n// I personally prefer the international format without any punctuation.\r\n// For example, brackets are remnants of the old age, meaning that the\r\n// phone number part in brackets (so called \"area code\") can be omitted\r\n// if dialing within the same \"area\".\r\n// And hyphens were clearly introduced for splitting local numbers into memorizable groups.\r\n// For example, remembering \"5553535\" is difficult but \"555-35-35\" is much simpler.\r\n// Imagine a man taking a bus from home to work and seeing an ad with a phone number.\r\n// He has a couple of seconds to memorize that number until it passes by.\r\n// If it were spaces instead of hyphens the man wouldn't necessarily get it,\r\n// but with hyphens instead of spaces the grouping is more explicit.\r\n// I personally think that hyphens introduce visual clutter,\r\n// so I prefer replacing them with spaces in international numbers.\r\n// In the modern age all output is done on displays where spaces are clearly distinguishable\r\n// so hyphens can be safely replaced with spaces without losing any legibility.\r\n//\r\nexport default function applyInternationalSeparatorStyle(formattedNumber) {\r\n\treturn formattedNumber.replace(new RegExp(`[${VALID_PUNCTUATION}]+`, 'g'), ' ').trim()\r\n}","import Metadata from '../metadata.js'\r\n\r\n/**\r\n * Pattern that makes it easy to distinguish whether a region has a single\r\n * international dialing prefix or not. If a region has a single international\r\n * prefix (e.g. 011 in USA), it will be represented as a string that contains\r\n * a sequence of ASCII digits, and possibly a tilde, which signals waiting for\r\n * the tone. If there are multiple available international prefixes in a\r\n * region, they will be represented as a regex string that always contains one\r\n * or more characters that are not ASCII digits or a tilde.\r\n */\r\nconst SINGLE_IDD_PREFIX_REG_EXP = /^[\\d]+(?:[~\\u2053\\u223C\\uFF5E][\\d]+)?$/\r\n\r\n// For regions that have multiple IDD prefixes\r\n// a preferred IDD prefix is returned.\r\nexport default function getIddPrefix(country, callingCode, metadata) {\r\n\tconst countryMetadata = new Metadata(metadata)\r\n\tcountryMetadata.selectNumberingPlan(country, callingCode)\r\n\tif (countryMetadata.defaultIDDPrefix()) {\r\n\t\treturn countryMetadata.defaultIDDPrefix()\r\n\t}\r\n\tif (SINGLE_IDD_PREFIX_REG_EXP.test(countryMetadata.IDDPrefix())) {\r\n\t\treturn countryMetadata.IDDPrefix()\r\n\t}\r\n}\r\n","// This is a port of Google Android `libphonenumber`'s\r\n// `phonenumberutil.js` of December 31th, 2018.\r\n//\r\n// https://github.com/googlei18n/libphonenumber/commits/master/javascript/i18n/phonenumbers/phonenumberutil.js\r\n\r\nimport matchesEntirely from './helpers/matchesEntirely.js'\r\nimport formatNationalNumberUsingFormat from './helpers/formatNationalNumberUsingFormat.js'\r\nimport Metadata, { getCountryCallingCode } from './metadata.js'\r\nimport getIddPrefix from './helpers/getIddPrefix.js'\r\nimport { formatRFC3966 } from './helpers/RFC3966.js'\r\n\r\nconst DEFAULT_OPTIONS = {\r\n\tformatExtension: (formattedNumber, extension, metadata) => `${formattedNumber}${metadata.ext()}${extension}`\r\n}\r\n\r\n/**\r\n * Formats a phone number.\r\n *\r\n * format(phoneNumberInstance, 'INTERNATIONAL', { ..., v2: true }, metadata)\r\n * format(phoneNumberInstance, 'NATIONAL', { ..., v2: true }, metadata)\r\n *\r\n * format({ phone: '8005553535', country: 'RU' }, 'INTERNATIONAL', { ... }, metadata)\r\n * format({ phone: '8005553535', country: 'RU' }, 'NATIONAL', undefined, metadata)\r\n *\r\n * @param  {object|PhoneNumber} input — If `options.v2: true` flag is passed, the `input` should be a `PhoneNumber` instance. Otherwise, it should be an object of shape `{ phone: '...', country: '...' }`.\r\n * @param  {string} format\r\n * @param  {object} [options]\r\n * @param  {object} metadata\r\n * @return {string}\r\n */\r\nexport default function formatNumber(input, format, options, metadata) {\r\n\t// Apply default options.\r\n\tif (options) {\r\n\t\toptions = { ...DEFAULT_OPTIONS, ...options }\r\n\t} else {\r\n\t\toptions = DEFAULT_OPTIONS\r\n\t}\r\n\r\n\tmetadata = new Metadata(metadata)\r\n\r\n\tif (input.country && input.country !== '001') {\r\n\t\t// Validate `input.country`.\r\n\t\tif (!metadata.hasCountry(input.country)) {\r\n\t\t\tthrow new Error(`Unknown country: ${input.country}`)\r\n\t\t}\r\n\t\tmetadata.country(input.country)\r\n\t}\r\n\telse if (input.countryCallingCode) {\r\n\t\tmetadata.selectNumberingPlan(input.countryCallingCode)\r\n\t}\r\n\telse return input.phone || ''\r\n\r\n\tconst countryCallingCode = metadata.countryCallingCode()\r\n\r\n\tconst nationalNumber = options.v2 ? input.nationalNumber : input.phone\r\n\r\n\t// This variable should have been declared inside `case`s\r\n\t// but Babel has a bug and it says \"duplicate variable declaration\".\r\n\tlet number\r\n\r\n\tswitch (format) {\r\n\t\tcase 'NATIONAL':\r\n\t\t\t// Legacy argument support.\r\n\t\t\t// (`{ country: ..., phone: '' }`)\r\n\t\t\tif (!nationalNumber) {\r\n\t\t\t\treturn ''\r\n\t\t\t}\r\n\t\t\tnumber = formatNationalNumber(nationalNumber, input.carrierCode, 'NATIONAL', metadata, options)\r\n\t\t\treturn addExtension(number, input.ext, metadata, options.formatExtension)\r\n\r\n\t\tcase 'INTERNATIONAL':\r\n\t\t\t// Legacy argument support.\r\n\t\t\t// (`{ country: ..., phone: '' }`)\r\n\t\t\tif (!nationalNumber) {\r\n\t\t\t\treturn `+${countryCallingCode}`\r\n\t\t\t}\r\n\t\t\tnumber = formatNationalNumber(nationalNumber, null, 'INTERNATIONAL', metadata, options)\r\n\t\t\tnumber = `+${countryCallingCode} ${number}`\r\n\t\t\treturn addExtension(number, input.ext, metadata, options.formatExtension)\r\n\r\n\t\tcase 'E.164':\r\n\t\t\t// `E.164` doesn't define \"phone number extensions\".\r\n\t\t\treturn `+${countryCallingCode}${nationalNumber}`\r\n\r\n\t\tcase 'RFC3966':\r\n\t\t\treturn formatRFC3966({\r\n\t\t\t\tnumber: `+${countryCallingCode}${nationalNumber}`,\r\n\t\t\t\text: input.ext\r\n\t\t\t})\r\n\r\n\t\t// For reference, here's Google's IDD formatter:\r\n\t\t// https://github.com/google/libphonenumber/blob/32719cf74e68796788d1ca45abc85dcdc63ba5b9/java/libphonenumber/src/com/google/i18n/phonenumbers/PhoneNumberUtil.java#L1546\r\n\t\t// Not saying that this IDD formatter replicates it 1:1, but it seems to work.\r\n\t\t// Who would even need to format phone numbers in IDD format anyway?\r\n\t\tcase 'IDD':\r\n\t\t\tif (!options.fromCountry) {\r\n\t\t\t\treturn\r\n\t\t\t\t// throw new Error('`fromCountry` option not passed for IDD-prefixed formatting.')\r\n\t\t\t}\r\n\t\t\tconst formattedNumber = formatIDD(\r\n\t\t\t\tnationalNumber,\r\n\t\t\t\tinput.carrierCode,\r\n\t\t\t\tcountryCallingCode,\r\n\t\t\t\toptions.fromCountry,\r\n\t\t\t\tmetadata\r\n\t\t\t)\r\n\t\t\treturn addExtension(formattedNumber, input.ext, metadata, options.formatExtension)\r\n\r\n\t\tdefault:\r\n\t\t\tthrow new Error(`Unknown \"format\" argument passed to \"formatNumber()\": \"${format}\"`)\r\n\t}\r\n}\r\n\r\nfunction formatNationalNumber(number, carrierCode, formatAs, metadata, options) {\r\n\tconst format = chooseFormatForNumber(metadata.formats(), number)\r\n\tif (!format) {\r\n\t\treturn number\r\n\t}\r\n\treturn formatNationalNumberUsingFormat(\r\n\t\tnumber,\r\n\t\tformat,\r\n\t\t{\r\n\t\t\tuseInternationalFormat: formatAs === 'INTERNATIONAL',\r\n\t\t\twithNationalPrefix: format.nationalPrefixIsOptionalWhenFormattingInNationalFormat() && (options && options.nationalPrefix === false) ? false : true,\r\n\t\t\tcarrierCode,\r\n\t\t\tmetadata\r\n\t\t}\r\n\t)\r\n}\r\n\r\nexport function chooseFormatForNumber(availableFormats, nationalNnumber) {\r\n\tfor (const format of availableFormats) {\r\n\t\t// Validate leading digits.\r\n\t\t// The test case for \"else path\" could be found by searching for\r\n\t\t// \"format.leadingDigitsPatterns().length === 0\".\r\n\t\tif (format.leadingDigitsPatterns().length > 0) {\r\n\t\t\t// The last leading_digits_pattern is used here, as it is the most detailed\r\n\t\t\tconst lastLeadingDigitsPattern = format.leadingDigitsPatterns()[format.leadingDigitsPatterns().length - 1]\r\n\t\t\t// If leading digits don't match then move on to the next phone number format\r\n\t\t\tif (nationalNnumber.search(lastLeadingDigitsPattern) !== 0) {\r\n\t\t\t\tcontinue\r\n\t\t\t}\r\n\t\t}\r\n\t\t// Check that the national number matches the phone number format regular expression\r\n\t\tif (matchesEntirely(nationalNnumber, format.pattern())) {\r\n\t\t\treturn format\r\n\t\t}\r\n\t}\r\n}\r\n\r\nfunction addExtension(formattedNumber, ext, metadata, formatExtension) {\r\n\treturn ext ? formatExtension(formattedNumber, ext, metadata) : formattedNumber\r\n}\r\n\r\nfunction formatIDD(\r\n\tnationalNumber,\r\n\tcarrierCode,\r\n\tcountryCallingCode,\r\n\tfromCountry,\r\n\tmetadata\r\n) {\r\n\tconst fromCountryCallingCode = getCountryCallingCode(fromCountry, metadata.metadata)\r\n\t// When calling within the same country calling code.\r\n\tif (fromCountryCallingCode === countryCallingCode) {\r\n\t\tconst formattedNumber = formatNationalNumber(nationalNumber, carrierCode, 'NATIONAL', metadata)\r\n\t\t// For NANPA regions, return the national format for these regions\r\n\t\t// but prefix it with the country calling code.\r\n\t\tif (countryCallingCode === '1') {\r\n\t\t\treturn countryCallingCode + ' ' + formattedNumber\r\n\t\t}\r\n\t\t// If regions share a country calling code, the country calling code need\r\n\t\t// not be dialled. This also applies when dialling within a region, so this\r\n\t\t// if clause covers both these cases. Technically this is the case for\r\n\t\t// dialling from La Reunion to other overseas departments of France (French\r\n\t\t// Guiana, Martinique, Guadeloupe), but not vice versa - so we don't cover\r\n\t\t// this edge case for now and for those cases return the version including\r\n\t\t// country calling code. Details here:\r\n\t\t// http://www.petitfute.com/voyage/225-info-pratiques-reunion\r\n\t\t//\r\n\t\treturn formattedNumber\r\n\t}\r\n\tconst iddPrefix = getIddPrefix(fromCountry, undefined, metadata.metadata)\r\n\tif (iddPrefix) {\r\n\t\treturn `${iddPrefix} ${countryCallingCode} ${formatNationalNumber(nationalNumber, null, 'INTERNATIONAL', metadata)}`\r\n\t}\r\n}","import isViablePhoneNumber from './isViablePhoneNumber.js'\r\n\r\n// https://www.ietf.org/rfc/rfc3966.txt\r\n\r\n/**\r\n * @param  {string} text - Phone URI (RFC 3966).\r\n * @return {object} `{ ?number, ?ext }`.\r\n */\r\nexport function parseRFC3966(text) {\r\n\tlet number\r\n\tlet ext\r\n\r\n\t// Replace \"tel:\" with \"tel=\" for parsing convenience.\r\n\ttext = text.replace(/^tel:/, 'tel=')\r\n\r\n\tfor (const part of text.split(';')) {\r\n\t\tconst [name, value] = part.split('=')\r\n\t\tswitch (name) {\r\n\t\t\tcase 'tel':\r\n\t\t\t\tnumber = value\r\n\t\t\t\tbreak\r\n\t\t\tcase 'ext':\r\n\t\t\t\text = value\r\n\t\t\t\tbreak\r\n\t\t\tcase 'phone-context':\r\n\t\t\t\t// Only \"country contexts\" are supported.\r\n\t\t\t\t// \"Domain contexts\" are ignored.\r\n\t\t\t\tif (value[0] === '+') {\r\n\t\t\t\t\tnumber = value + number\r\n\t\t\t\t}\r\n\t\t\t\tbreak\r\n\t\t}\r\n\t}\r\n\r\n\t// If the phone number is not viable, then abort.\r\n\tif (!isViablePhoneNumber(number)) {\r\n\t\treturn {}\r\n\t}\r\n\r\n\tconst result = { number }\r\n\tif (ext) {\r\n\t\tresult.ext = ext\r\n\t}\r\n\treturn result\r\n}\r\n\r\n/**\r\n * @param  {object} - `{ ?number, ?extension }`.\r\n * @return {string} Phone URI (RFC 3966).\r\n */\r\nexport function formatRFC3966({ number, ext }) {\r\n\tif (!number) {\r\n\t\treturn ''\r\n\t}\r\n\tif (number[0] !== '+') {\r\n\t\tthrow new Error(`\"formatRFC3966()\" expects \"number\" to be in E.164 format.`)\r\n\t}\r\n\treturn `tel:${number}${ext ? ';ext=' + ext : ''}`\r\n}","import Metadata from './metadata.js'\r\nimport isPossibleNumber from './isPossible.js'\r\nimport isValidNumber from './isValid.js'\r\n// import checkNumberLength from './helpers/checkNumberLength.js'\r\nimport getNumberType from './helpers/getNumberType.js'\r\nimport getPossibleCountriesForNumber from './helpers/getPossibleCountriesForNumber.js'\r\nimport formatNumber from './format.js'\r\n\r\nconst USE_NON_GEOGRAPHIC_COUNTRY_CODE = false\r\n\r\nexport default class PhoneNumber {\r\n\t/**\r\n\t * @param  {string} countryOrCountryCallingCode\r\n\t * @param  {string} nationalNumber\r\n\t * @param  {object} metadata — Metadata JSON\r\n\t * @return {PhoneNumber}\r\n\t */\r\n\tconstructor(countryOrCountryCallingCode, nationalNumber, metadata) {\r\n\t\tif (!countryOrCountryCallingCode) {\r\n\t\t\tthrow new TypeError('`country` or `countryCallingCode` not passed')\r\n\t\t}\r\n\t\tif (!nationalNumber) {\r\n\t\t\tthrow new TypeError('`nationalNumber` not passed')\r\n\t\t}\r\n\t\tif (!metadata) {\r\n\t\t\tthrow new TypeError('`metadata` not passed')\r\n\t\t}\r\n\t\tconst { country, countryCallingCode } = getCountryAndCountryCallingCode(\r\n\t\t\tcountryOrCountryCallingCode,\r\n\t\t\tmetadata\r\n\t\t)\r\n\t\tthis.country = country\r\n\t\tthis.countryCallingCode = countryCallingCode\r\n\t\tthis.nationalNumber = nationalNumber\r\n\t\tthis.number = '+' + this.countryCallingCode + this.nationalNumber\r\n\t\t// Exclude `metadata` property output from `PhoneNumber.toString()`\r\n\t\t// so that it doesn't clutter the console output of Node.js.\r\n\t\t// Previously, when Node.js did `console.log(new PhoneNumber(...))`,\r\n\t\t// it would output the whole internal structure of the `metadata` object.\r\n\t\tthis.getMetadata = () => metadata\r\n\t}\r\n\r\n\tsetExt(ext) {\r\n\t\tthis.ext = ext\r\n\t}\r\n\r\n\tgetPossibleCountries() {\r\n\t\tif (this.country) {\r\n\t\t\treturn [this.country]\r\n\t\t}\r\n\t\treturn getPossibleCountriesForNumber(\r\n\t\t\tthis.countryCallingCode,\r\n\t\t\tthis.nationalNumber,\r\n\t\t\tthis.getMetadata()\r\n\t\t)\r\n\t}\r\n\r\n\tisPossible() {\r\n\t\treturn isPossibleNumber(this, { v2: true }, this.getMetadata())\r\n\t}\r\n\r\n\tisValid() {\r\n\t\treturn isValidNumber(this, { v2: true }, this.getMetadata())\r\n\t}\r\n\r\n\tisNonGeographic() {\r\n\t\tconst metadata = new Metadata(this.getMetadata())\r\n\t\treturn metadata.isNonGeographicCallingCode(this.countryCallingCode)\r\n\t}\r\n\r\n\tisEqual(phoneNumber) {\r\n\t\treturn this.number === phoneNumber.number && this.ext === phoneNumber.ext\r\n\t}\r\n\r\n\t// This function was originally meant to be an equivalent for `validatePhoneNumberLength()`,\r\n\t// but later it was found out that it doesn't include the possible `TOO_SHORT` result\r\n\t// returned from `parsePhoneNumberWithError()` in the original `validatePhoneNumberLength()`,\r\n\t// so eventually I simply commented out this method from the `PhoneNumber` class\r\n\t// and just left the `validatePhoneNumberLength()` function, even though that one would require\r\n\t// and additional step to also validate the actual country / calling code of the phone number.\r\n\t// validateLength() {\r\n\t// \tconst metadata = new Metadata(this.getMetadata())\r\n\t// \tmetadata.selectNumberingPlan(this.countryCallingCode)\r\n\t// \tconst result = checkNumberLength(this.nationalNumber, metadata)\r\n\t// \tif (result !== 'IS_POSSIBLE') {\r\n\t// \t\treturn result\r\n\t// \t}\r\n\t// }\r\n\r\n\tgetType() {\r\n\t\treturn getNumberType(this, { v2: true }, this.getMetadata())\r\n\t}\r\n\r\n\tformat(format, options) {\r\n\t\treturn formatNumber(\r\n\t\t\tthis,\r\n\t\t\tformat,\r\n\t\t\toptions ? { ...options, v2: true } : { v2: true },\r\n\t\t\tthis.getMetadata()\r\n\t\t)\r\n\t}\r\n\r\n\tformatNational(options) {\r\n\t\treturn this.format('NATIONAL', options)\r\n\t}\r\n\r\n\tformatInternational(options) {\r\n\t\treturn this.format('INTERNATIONAL', options)\r\n\t}\r\n\r\n\tgetURI(options) {\r\n\t\treturn this.format('RFC3966', options)\r\n\t}\r\n}\r\n\r\nconst isCountryCode = (value) => /^[A-Z]{2}$/.test(value)\r\n\r\nfunction getCountryAndCountryCallingCode(countryOrCountryCallingCode, metadataJson) {\r\n\tlet country\r\n\tlet countryCallingCode\r\n\r\n\tconst metadata = new Metadata(metadataJson)\r\n\t// If country code is passed then derive `countryCallingCode` from it.\r\n\t// Also store the country code as `.country`.\r\n\tif (isCountryCode(countryOrCountryCallingCode)) {\r\n\t\tcountry = countryOrCountryCallingCode\r\n\t\tmetadata.selectNumberingPlan(country)\r\n\t\tcountryCallingCode = metadata.countryCallingCode()\r\n\t} else {\r\n\t\tcountryCallingCode = countryOrCountryCallingCode\r\n\t\t/* istanbul ignore if */\r\n\t\tif (USE_NON_GEOGRAPHIC_COUNTRY_CODE) {\r\n\t\t\tif (metadata.isNonGeographicCallingCode(countryCallingCode)) {\r\n\t\t\t\tcountry = '001'\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\treturn {\r\n\t\tcountry,\r\n\t\tcountryCallingCode\r\n\t}\r\n}","import Metadata from './metadata.js'\r\nimport matchesEntirely from './helpers/matchesEntirely.js'\r\nimport getNumberType from './helpers/getNumberType.js'\r\n\r\n/**\r\n * Checks if a given phone number is valid.\r\n *\r\n * isValid(phoneNumberInstance, { ..., v2: true }, metadata)\r\n *\r\n * isPossible({ phone: '8005553535', country: 'RU' }, { ... }, metadata)\r\n * isPossible({ phone: '8005553535', country: 'RU' }, undefined, metadata)\r\n *\r\n * If the `number` is a string, it will be parsed to an object,\r\n * but only if it contains only valid phone number characters (including punctuation).\r\n * If the `number` is an object, it is used as is.\r\n *\r\n * The optional `defaultCountry` argument is the default country.\r\n * I.e. it does not restrict to just that country,\r\n * e.g. in those cases where several countries share\r\n * the same phone numbering rules (NANPA, Britain, etc).\r\n * For example, even though the number `07624 369230`\r\n * belongs to the Isle of Man (\"IM\" country code)\r\n * calling `isValidNumber('07624369230', 'GB', metadata)`\r\n * still returns `true` because the country is not restricted to `GB`,\r\n * it's just that `GB` is the default one for the phone numbering rules.\r\n * For restricting the country see `isValidNumberForRegion()`\r\n * though restricting a country might not be a good idea.\r\n * https://github.com/googlei18n/libphonenumber/blob/master/FAQ.md#when-should-i-use-isvalidnumberforregion\r\n *\r\n * Examples:\r\n *\r\n * ```js\r\n * isValidNumber('+78005553535', metadata)\r\n * isValidNumber('8005553535', 'RU', metadata)\r\n * isValidNumber('88005553535', 'RU', metadata)\r\n * isValidNumber({ phone: '8005553535', country: 'RU' }, metadata)\r\n * ```\r\n */\r\nexport default function isValidNumber(input, options, metadata)\r\n{\r\n\t// If assigning the `{}` default value is moved to the arguments above,\r\n\t// code coverage would decrease for some weird reason.\r\n\toptions = options || {}\r\n\r\n\tmetadata = new Metadata(metadata)\r\n\r\n/**\r\n * Checks if a phone number is \"possible\" (basically just checks its length).\r\n *\r\n * @param  {object|PhoneNumber} input — If `options.v2: true` flag is passed, the `input` should be a `PhoneNumber` instance. Otherwise, it should be an object of shape `{ phone: '...', country: '...' }`.\r\n * @param  {object} [options]\r\n * @param  {object} metadata\r\n * @return {string}\r\n */\r\n\r\n\tmetadata.selectNumberingPlan(input.country, input.countryCallingCode)\r\n\r\n\t// By default, countries only have type regexps when it's required for\r\n\t// distinguishing different countries having the same `countryCallingCode`.\r\n\tif (metadata.hasTypes()) {\r\n\t\treturn getNumberType(input, options, metadata.metadata) !== undefined\r\n\t}\r\n\r\n\t// If there are no type regexps for this country in metadata then use\r\n\t// `nationalNumberPattern` as a \"better than nothing\" replacement.\r\n\tconst nationalNumber = options.v2 ? input.nationalNumber : input.phone\r\n\treturn matchesEntirely(nationalNumber, metadata.nationalNumberPattern())\r\n}","import Metadata from '../metadata.js'\r\nimport { VALID_DIGITS } from '../constants.js'\r\n\r\nconst CAPTURING_DIGIT_PATTERN = new RegExp('([' + VALID_DIGITS + '])')\r\n\r\nexport default function stripIddPrefix(number, country, callingCode, metadata) {\r\n\tif (!country) {\r\n\t\treturn\r\n\t}\r\n\t// Check if the number is IDD-prefixed.\r\n\tconst countryMetadata = new Metadata(metadata)\r\n\tcountryMetadata.selectNumberingPlan(country, callingCode)\r\n\tconst IDDPrefixPattern = new RegExp(countryMetadata.IDDPrefix())\r\n\tif (number.search(IDDPrefixPattern) !== 0) {\r\n\t\treturn\r\n\t}\r\n\t// Strip IDD prefix.\r\n\tnumber = number.slice(number.match(IDDPrefixPattern)[0].length)\r\n\t// If there're any digits after an IDD prefix,\r\n\t// then those digits are a country calling code.\r\n\t// Since no country code starts with a `0`,\r\n\t// the code below validates that the next digit (if present) is not `0`.\r\n\tconst matchedGroups = number.match(CAPTURING_DIGIT_PATTERN)\r\n\tif (matchedGroups && matchedGroups[1] != null && matchedGroups[1].length > 0) {\r\n\t\tif (matchedGroups[1] === '0') {\r\n\t\t\treturn\r\n\t\t}\r\n\t}\r\n\treturn number\r\n}","import extractNationalNumberFromPossiblyIncompleteNumber from './extractNationalNumberFromPossiblyIncompleteNumber.js'\r\nimport matchesEntirely from './matchesEntirely.js'\r\nimport checkNumberLength from './checkNumberLength.js'\r\n\r\n/**\r\n * Strips national prefix and carrier code from a complete phone number.\r\n * The difference from the non-\"FromCompleteNumber\" function is that\r\n * it won't extract national prefix if the resultant number is too short\r\n * to be a complete number for the selected phone numbering plan.\r\n * @param  {string} number — Complete phone number digits.\r\n * @param  {Metadata} metadata — Metadata with a phone numbering plan selected.\r\n * @return {object} `{ nationalNumber: string, carrierCode: string? }`.\r\n */\r\nexport default function extractNationalNumber(number, metadata) {\r\n\t// Parsing national prefixes and carrier codes\r\n\t// is only required for local phone numbers\r\n\t// but some people don't understand that\r\n\t// and sometimes write international phone numbers\r\n\t// with national prefixes (or maybe even carrier codes).\r\n\t// http://ucken.blogspot.ru/2016/03/trunk-prefixes-in-skype4b.html\r\n\t// Google's original library forgives such mistakes\r\n\t// and so does this library, because it has been requested:\r\n\t// https://github.com/catamphetamine/libphonenumber-js/issues/127\r\n\tconst {\r\n\t\tcarrierCode,\r\n\t\tnationalNumber\r\n\t} = extractNationalNumberFromPossiblyIncompleteNumber(\r\n\t\tnumber,\r\n\t\tmetadata\r\n\t)\r\n\r\n\tif (nationalNumber !== number) {\r\n\t\tif (!shouldHaveExtractedNationalPrefix(number, nationalNumber, metadata)) {\r\n\t\t\t// Don't strip the national prefix.\r\n\t\t\treturn { nationalNumber: number }\r\n\t\t}\r\n\t\t// Check the national (significant) number length after extracting national prefix and carrier code.\r\n\t\t// Legacy generated metadata (before `1.0.18`) didn't support the \"possible lengths\" feature.\r\n\t\tif (metadata.possibleLengths()) {\r\n\t\t\t// The number remaining after stripping the national prefix and carrier code\r\n\t\t\t// should be long enough to have a possible length for the country.\r\n\t\t\t// Otherwise, don't strip the national prefix and carrier code,\r\n\t\t\t// since the original number could be a valid number.\r\n\t\t\t// This check has been copy-pasted \"as is\" from Google's original library:\r\n\t\t\t// https://github.com/google/libphonenumber/blob/876268eb1ad6cdc1b7b5bef17fc5e43052702d57/java/libphonenumber/src/com/google/i18n/phonenumbers/PhoneNumberUtil.java#L3236-L3250\r\n\t\t\t// It doesn't check for the \"possibility\" of the original `number`.\r\n\t\t\t// I guess it's fine not checking that one. It works as is anyway.\r\n\t\t\tif (!isPossibleIncompleteNationalNumber(nationalNumber, metadata)) {\r\n\t\t\t\t// Don't strip the national prefix.\r\n\t\t\t\treturn { nationalNumber: number }\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\treturn { nationalNumber, carrierCode }\r\n}\r\n\r\n// In some countries, the same digit could be a national prefix\r\n// or a leading digit of a valid phone number.\r\n// For example, in Russia, national prefix is `8`,\r\n// and also `800 555 35 35` is a valid number\r\n// in which `8` is not a national prefix, but the first digit\r\n// of a national (significant) number.\r\n// Same's with Belarus:\r\n// `82004910060` is a valid national (significant) number,\r\n// but `2004910060` is not.\r\n// To support such cases (to prevent the code from always stripping\r\n// national prefix), a condition is imposed: a national prefix\r\n// is not extracted when the original number is \"viable\" and the\r\n// resultant number is not, a \"viable\" national number being the one\r\n// that matches `national_number_pattern`.\r\nfunction shouldHaveExtractedNationalPrefix(nationalNumberBefore, nationalNumberAfter, metadata) {\r\n\t// The equivalent in Google's code is:\r\n\t// https://github.com/google/libphonenumber/blob/e326fa1fc4283bb05eb35cb3c15c18f98a31af33/java/libphonenumber/src/com/google/i18n/phonenumbers/PhoneNumberUtil.java#L2969-L3004\r\n\tif (matchesEntirely(nationalNumberBefore, metadata.nationalNumberPattern()) &&\r\n\t\t!matchesEntirely(nationalNumberAfter, metadata.nationalNumberPattern())) {\r\n\t\treturn false\r\n\t}\r\n\t// This \"is possible\" national number (length) check has been commented out\r\n\t// because it's superceded by the (effectively) same check done in the\r\n\t// `extractNationalNumber()` function after it calls `shouldHaveExtractedNationalPrefix()`.\r\n\t// In other words, why run the same check twice if it could only be run once.\r\n\t// // Check the national (significant) number length after extracting national prefix and carrier code.\r\n\t// // Fixes a minor \"weird behavior\" bug: https://gitlab.com/catamphetamine/libphonenumber-js/-/issues/57\r\n\t// // (Legacy generated metadata (before `1.0.18`) didn't support the \"possible lengths\" feature).\r\n\t// if (metadata.possibleLengths()) {\r\n\t// \tif (isPossibleIncompleteNationalNumber(nationalNumberBefore, metadata) &&\r\n\t// \t\t!isPossibleIncompleteNationalNumber(nationalNumberAfter, metadata)) {\r\n\t// \t\treturn false\r\n\t// \t}\r\n\t// }\r\n\treturn true\r\n}\r\n\r\nfunction isPossibleIncompleteNationalNumber(nationalNumber, metadata) {\r\n\tswitch (checkNumberLength(nationalNumber, metadata)) {\r\n\t\tcase 'TOO_SHORT':\r\n\t\tcase 'INVALID_LENGTH':\r\n\t\t// This library ignores \"local-only\" phone numbers (for simplicity).\r\n\t\t// See the readme for more info on what are \"local-only\" phone numbers.\r\n\t\t// case 'IS_POSSIBLE_LOCAL_ONLY':\r\n\t\t\treturn false\r\n\t\tdefault:\r\n\t\t\treturn true\r\n\t}\r\n}","/**\r\n * Strips any national prefix (such as 0, 1) present in a\r\n * (possibly incomplete) number provided.\r\n * \"Carrier codes\" are only used  in Colombia and Brazil,\r\n * and only when dialing within those countries from a mobile phone to a fixed line number.\r\n * Sometimes it won't actually strip national prefix\r\n * and will instead prepend some digits to the `number`:\r\n * for example, when number `2345678` is passed with `VI` country selected,\r\n * it will return `{ number: \"3402345678\" }`, because `340` area code is prepended.\r\n * @param {string} number — National number digits.\r\n * @param {object} metadata — Metadata with country selected.\r\n * @return {object} `{ nationalNumber: string, nationalPrefix: string? carrierCode: string? }`. Even if a national prefix was extracted, it's not necessarily present in the returned object, so don't rely on its presence in the returned object in order to find out whether a national prefix has been extracted or not.\r\n */\r\nexport default function extractNationalNumberFromPossiblyIncompleteNumber(number, metadata) {\r\n\tif (number && metadata.numberingPlan.nationalPrefixForParsing()) {\r\n\t\t// See METADATA.md for the description of\r\n\t\t// `national_prefix_for_parsing` and `national_prefix_transform_rule`.\r\n\t\t// Attempt to parse the first digits as a national prefix.\r\n\t\tconst prefixPattern = new RegExp('^(?:' + metadata.numberingPlan.nationalPrefixForParsing() + ')')\r\n\t\tconst prefixMatch = prefixPattern.exec(number)\r\n\t\tif (prefixMatch) {\r\n\t\t\tlet nationalNumber\r\n\t\t\tlet carrierCode\r\n\t\t\t// https://gitlab.com/catamphetamine/libphonenumber-js/-/blob/master/METADATA.md#national_prefix_for_parsing--national_prefix_transform_rule\r\n\t\t\t// If a `national_prefix_for_parsing` has any \"capturing groups\"\r\n\t\t\t// then it means that the national (significant) number is equal to\r\n\t\t\t// those \"capturing groups\" transformed via `national_prefix_transform_rule`,\r\n\t\t\t// and nothing could be said about the actual national prefix:\r\n\t\t\t// what is it and was it even there.\r\n\t\t\t// If a `national_prefix_for_parsing` doesn't have any \"capturing groups\",\r\n\t\t\t// then everything it matches is a national prefix.\r\n\t\t\t// To determine whether `national_prefix_for_parsing` matched any\r\n\t\t\t// \"capturing groups\", the value of the result of calling `.exec()`\r\n\t\t\t// is looked at, and if it has non-undefined values where there're\r\n\t\t\t// \"capturing groups\" in the regular expression, then it means\r\n\t\t\t// that \"capturing groups\" have been matched.\r\n\t\t\t// It's not possible to tell whether there'll be any \"capturing gropus\"\r\n\t\t\t// before the matching process, because a `national_prefix_for_parsing`\r\n\t\t\t// could exhibit both behaviors.\r\n\t\t\tconst capturedGroupsCount = prefixMatch.length - 1\r\n\t\t\tconst hasCapturedGroups = capturedGroupsCount > 0 && prefixMatch[capturedGroupsCount]\r\n\t\t\tif (metadata.nationalPrefixTransformRule() && hasCapturedGroups) {\r\n\t\t\t\tnationalNumber = number.replace(\r\n\t\t\t\t\tprefixPattern,\r\n\t\t\t\t\tmetadata.nationalPrefixTransformRule()\r\n\t\t\t\t)\r\n\t\t\t\t// If there's more than one captured group,\r\n\t\t\t\t// then carrier code is the second one.\r\n\t\t\t\tif (capturedGroupsCount > 1) {\r\n\t\t\t\t\tcarrierCode = prefixMatch[1]\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t// If there're no \"capturing groups\",\r\n\t\t\t// or if there're \"capturing groups\" but no\r\n\t\t\t// `national_prefix_transform_rule`,\r\n\t\t\t// then just strip the national prefix from the number,\r\n\t\t\t// and possibly a carrier code.\r\n\t\t\t// Seems like there could be more.\r\n\t\t\telse {\r\n\t\t\t\t// `prefixBeforeNationalNumber` is the whole substring matched by\r\n\t\t\t\t// the `national_prefix_for_parsing` regular expression.\r\n\t\t\t\t// There seem to be no guarantees that it's just a national prefix.\r\n\t\t\t\t// For example, if there's a carrier code, it's gonna be a\r\n\t\t\t\t// part of `prefixBeforeNationalNumber` too.\r\n\t\t\t\tconst prefixBeforeNationalNumber = prefixMatch[0]\r\n\t\t\t\tnationalNumber = number.slice(prefixBeforeNationalNumber.length)\r\n\t\t\t\t// If there's at least one captured group,\r\n\t\t\t\t// then carrier code is the first one.\r\n\t\t\t\tif (hasCapturedGroups) {\r\n\t\t\t\t\tcarrierCode = prefixMatch[1]\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t// Tries to guess whether a national prefix was present in the input.\r\n\t\t\t// This is not something copy-pasted from Google's library:\r\n\t\t\t// they don't seem to have an equivalent for that.\r\n\t\t\t// So this isn't an \"officially approved\" way of doing something like that.\r\n\t\t\t// But since there seems no other existing method, this library uses it.\r\n\t\t\tlet nationalPrefix\r\n\t\t\tif (hasCapturedGroups) {\r\n\t\t\t\tconst possiblePositionOfTheFirstCapturedGroup = number.indexOf(prefixMatch[1])\r\n\t\t\t\tconst possibleNationalPrefix = number.slice(0, possiblePositionOfTheFirstCapturedGroup)\r\n\t\t\t\t// Example: an Argentinian (AR) phone number `0111523456789`.\r\n\t\t\t\t// `prefixMatch[0]` is `01115`, and `$1` is `11`,\r\n\t\t\t\t// and the rest of the phone number is `23456789`.\r\n\t\t\t\t// The national number is transformed via `9$1` to `91123456789`.\r\n\t\t\t\t// National prefix `0` is detected being present at the start.\r\n\t\t\t\t// if (possibleNationalPrefix.indexOf(metadata.numberingPlan.nationalPrefix()) === 0) {\r\n\t\t\t\tif (possibleNationalPrefix === metadata.numberingPlan.nationalPrefix()) {\r\n\t\t\t\t\tnationalPrefix = metadata.numberingPlan.nationalPrefix()\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tnationalPrefix = prefixMatch[0]\r\n\t\t\t}\r\n\t\t\treturn {\r\n\t\t\t\tnationalNumber,\r\n\t\t\t\tnationalPrefix,\r\n\t\t\t\tcarrierCode\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n   return {\r\n   \tnationalNumber: number\r\n   }\r\n}","import stripIddPrefix from './stripIddPrefix.js'\r\nimport extractCountryCallingCodeFromInternationalNumberWithoutPlusSign from './extractCountryCallingCodeFromInternationalNumberWithoutPlusSign.js'\r\nimport Metadata from '../metadata.js'\r\nimport { MAX_LENGTH_COUNTRY_CODE } from '../constants.js'\r\n\r\n/**\r\n * Converts a phone number digits (possibly with a `+`)\r\n * into a calling code and the rest phone number digits.\r\n * The \"rest phone number digits\" could include\r\n * a national prefix, carrier code, and national\r\n * (significant) number.\r\n * @param  {string} number — Phone number digits (possibly with a `+`).\r\n * @param  {string} [country] — Default country.\r\n * @param  {string} [callingCode] — Default calling code (some phone numbering plans are non-geographic).\r\n * @param  {object} metadata\r\n * @return {object} `{ countryCallingCodeSource: string?, countryCallingCode: string?, number: string }`\r\n * @example\r\n * // Returns `{ countryCallingCode: \"1\", number: \"2133734253\" }`.\r\n * extractCountryCallingCode('2133734253', 'US', null, metadata)\r\n * extractCountryCallingCode('2133734253', null, '1', metadata)\r\n * extractCountryCallingCode('+12133734253', null, null, metadata)\r\n * extractCountryCallingCode('+12133734253', 'RU', null, metadata)\r\n */\r\nexport default function extractCountryCallingCode(\r\n\tnumber,\r\n\tcountry,\r\n\tcallingCode,\r\n\tmetadata\r\n) {\r\n\tif (!number) {\r\n\t\treturn {}\r\n\t}\r\n\r\n\tlet isNumberWithIddPrefix\r\n\r\n\t// If this is not an international phone number,\r\n\t// then either extract an \"IDD\" prefix, or extract a\r\n\t// country calling code from a number by autocorrecting it\r\n\t// by prepending a leading `+` in cases when it starts\r\n\t// with the country calling code.\r\n\t// https://wikitravel.org/en/International_dialling_prefix\r\n\t// https://github.com/catamphetamine/libphonenumber-js/issues/376\r\n\tif (number[0] !== '+') {\r\n\t\t// Convert an \"out-of-country\" dialing phone number\r\n\t\t// to a proper international phone number.\r\n\t\tconst numberWithoutIDD = stripIddPrefix(number, country, callingCode, metadata)\r\n\t\t// If an IDD prefix was stripped then\r\n\t\t// convert the number to international one\r\n\t\t// for subsequent parsing.\r\n\t\tif (numberWithoutIDD && numberWithoutIDD !== number) {\r\n\t\t\tisNumberWithIddPrefix = true\r\n\t\t\tnumber = '+' + numberWithoutIDD\r\n\t\t} else {\r\n\t\t\t// Check to see if the number starts with the country calling code\r\n\t\t\t// for the default country. If so, we remove the country calling code,\r\n\t\t\t// and do some checks on the validity of the number before and after.\r\n\t\t\t// https://github.com/catamphetamine/libphonenumber-js/issues/376\r\n\t\t\tif (country || callingCode) {\r\n\t\t\t\tconst {\r\n\t\t\t\t\tcountryCallingCode,\r\n\t\t\t\t\tnumber: shorterNumber\r\n\t\t\t\t} = extractCountryCallingCodeFromInternationalNumberWithoutPlusSign(\r\n\t\t\t\t\tnumber,\r\n\t\t\t\t\tcountry,\r\n\t\t\t\t\tcallingCode,\r\n\t\t\t\t\tmetadata\r\n\t\t\t\t)\r\n\t\t\t\tif (countryCallingCode) {\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\tcountryCallingCodeSource: 'FROM_NUMBER_WITHOUT_PLUS_SIGN',\r\n\t\t\t\t\t\tcountryCallingCode,\r\n\t\t\t\t\t\tnumber: shorterNumber\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn {\r\n\t\t\t\t// No need to set it to `UNSPECIFIED`. It can be just `undefined`.\r\n\t\t\t\t// countryCallingCodeSource: 'UNSPECIFIED',\r\n\t\t\t\tnumber\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t// Fast abortion: country codes do not begin with a '0'\r\n\tif (number[1] === '0') {\r\n\t\treturn {}\r\n\t}\r\n\r\n\tmetadata = new Metadata(metadata)\r\n\r\n\t// The thing with country phone codes\r\n\t// is that they are orthogonal to each other\r\n\t// i.e. there's no such country phone code A\r\n\t// for which country phone code B exists\r\n\t// where B starts with A.\r\n\t// Therefore, while scanning digits,\r\n\t// if a valid country code is found,\r\n\t// that means that it is the country code.\r\n\t//\r\n\tlet i = 2\r\n\twhile (i - 1 <= MAX_LENGTH_COUNTRY_CODE && i <= number.length) {\r\n\t\tconst countryCallingCode = number.slice(1, i)\r\n\t\tif (metadata.hasCallingCode(countryCallingCode)) {\r\n\t\t\tmetadata.selectNumberingPlan(countryCallingCode)\r\n\t\t\treturn {\r\n\t\t\t\tcountryCallingCodeSource: isNumberWithIddPrefix ? 'FROM_NUMBER_WITH_IDD' : 'FROM_NUMBER_WITH_PLUS_SIGN',\r\n\t\t\t\tcountryCallingCode,\r\n\t\t\t\tnumber: number.slice(i)\r\n\t\t\t}\r\n\t\t}\r\n\t\ti++\r\n\t}\r\n\r\n\treturn {}\r\n}\r\n\r\n// The possible values for the returned `countryCallingCodeSource` are:\r\n//\r\n// Copy-pasted from:\r\n// https://github.com/google/libphonenumber/blob/master/resources/phonenumber.proto\r\n//\r\n// // The source from which the country_code is derived. This is not set in the\r\n// // general parsing method, but in the method that parses and keeps raw_input.\r\n// // New fields could be added upon request.\r\n// enum CountryCodeSource {\r\n//  // Default value returned if this is not set, because the phone number was\r\n//  // created using parse, not parseAndKeepRawInput. hasCountryCodeSource will\r\n//  // return false if this is the case.\r\n//  UNSPECIFIED = 0;\r\n//\r\n//  // The country_code is derived based on a phone number with a leading \"+\",\r\n//  // e.g. the French number \"+33 1 42 68 53 00\".\r\n//  FROM_NUMBER_WITH_PLUS_SIGN = 1;\r\n//\r\n//  // The country_code is derived based on a phone number with a leading IDD,\r\n//  // e.g. the French number \"011 33 1 42 68 53 00\", as it is dialled from US.\r\n//  FROM_NUMBER_WITH_IDD = 5;\r\n//\r\n//  // The country_code is derived based on a phone number without a leading\r\n//  // \"+\", e.g. the French number \"33 1 42 68 53 00\" when defaultCountry is\r\n//  // supplied as France.\r\n//  FROM_NUMBER_WITHOUT_PLUS_SIGN = 10;\r\n//\r\n//  // The country_code is derived NOT based on the phone number itself, but\r\n//  // from the defaultCountry parameter provided in the parsing function by the\r\n//  // clients. This happens mostly for numbers written in the national format\r\n//  // (without country code). For example, this would be set when parsing the\r\n//  // French number \"01 42 68 53 00\", when defaultCountry is supplied as\r\n//  // France.\r\n//  FROM_DEFAULT_COUNTRY = 20;\r\n// }","import Metadata from '../metadata.js'\r\nimport matchesEntirely from './matchesEntirely.js'\r\nimport extractNationalNumber from './extractNationalNumber.js'\r\nimport checkNumberLength from './checkNumberLength.js'\r\nimport getCountryCallingCode from '../getCountryCallingCode.js'\r\n\r\n/**\r\n * Sometimes some people incorrectly input international phone numbers\r\n * without the leading `+`. This function corrects such input.\r\n * @param  {string} number — Phone number digits.\r\n * @param  {string?} country\r\n * @param  {string?} callingCode\r\n * @param  {object} metadata\r\n * @return {object} `{ countryCallingCode: string?, number: string }`.\r\n */\r\nexport default function extractCountryCallingCodeFromInternationalNumberWithoutPlusSign(\r\n\tnumber,\r\n\tcountry,\r\n\tcallingCode,\r\n\tmetadata\r\n) {\r\n\tconst countryCallingCode = country ? getCountryCallingCode(country, metadata) : callingCode\r\n\tif (number.indexOf(countryCallingCode) === 0) {\r\n\t\tmetadata = new Metadata(metadata)\r\n\t\tmetadata.selectNumberingPlan(country, callingCode)\r\n\t\tconst possibleShorterNumber = number.slice(countryCallingCode.length)\r\n\t\tconst {\r\n\t\t\tnationalNumber: possibleShorterNationalNumber,\r\n\t\t} = extractNationalNumber(\r\n\t\t\tpossibleShorterNumber,\r\n\t\t\tmetadata\r\n\t\t)\r\n\t\tconst {\r\n\t\t\tnationalNumber\r\n\t\t} = extractNationalNumber(\r\n\t\t\tnumber,\r\n\t\t\tmetadata\r\n\t\t)\r\n\t\t// If the number was not valid before but is valid now,\r\n\t\t// or if it was too long before, we consider the number\r\n\t\t// with the country calling code stripped to be a better result\r\n\t\t// and keep that instead.\r\n\t\t// For example, in Germany (+49), `49` is a valid area code,\r\n\t\t// so if a number starts with `49`, it could be both a valid\r\n\t\t// national German number or an international number without\r\n\t\t// a leading `+`.\r\n\t\tif (\r\n\t\t\t(\r\n\t\t\t\t!matchesEntirely(nationalNumber, metadata.nationalNumberPattern())\r\n\t\t\t\t&&\r\n\t\t\t\tmatchesEntirely(possibleShorterNationalNumber, metadata.nationalNumberPattern())\r\n\t\t\t)\r\n\t\t\t||\r\n\t\t\tcheckNumberLength(nationalNumber, metadata) === 'TOO_LONG'\r\n\t\t) {\r\n\t\t\treturn {\r\n\t\t\t\tcountryCallingCode,\r\n\t\t\t\tnumber: possibleShorterNumber\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\treturn { number }\r\n}","import getCountryByNationalNumber from './getCountryByNationalNumber.js'\r\n\r\nconst USE_NON_GEOGRAPHIC_COUNTRY_CODE = false\r\n\r\nexport default function getCountryByCallingCode(callingCode, {\r\n\tnationalNumber: nationalPhoneNumber,\r\n\tdefaultCountry,\r\n\tmetadata\r\n}) {\r\n\t/* istanbul ignore if */\r\n\tif (USE_NON_GEOGRAPHIC_COUNTRY_CODE) {\r\n\t\tif (metadata.isNonGeographicCallingCode(callingCode)) {\r\n\t\t\treturn '001'\r\n\t\t}\r\n\t}\r\n\tconst possibleCountries = metadata.getCountryCodesForCallingCode(callingCode)\r\n\tif (!possibleCountries) {\r\n\t\treturn\r\n\t}\r\n\t// If there's just one country corresponding to the country code,\r\n\t// then just return it, without further phone number digits validation.\r\n\tif (possibleCountries.length === 1) {\r\n\t\treturn possibleCountries[0]\r\n\t}\r\n\treturn getCountryByNationalNumber(nationalPhoneNumber, {\r\n\t\tcountries: possibleCountries,\r\n\t\tdefaultCountry,\r\n\t\tmetadata: metadata.metadata\r\n\t})\r\n}","import Metadata from '../metadata.js'\r\nimport getNumberType from './getNumberType.js'\r\n\r\nexport default function getCountryByNationalNumber(nationalPhoneNumber, {\r\n\tcountries,\r\n\tdefaultCountry,\r\n\tmetadata\r\n}) {\r\n\t// Re-create `metadata` because it will be selecting a `country`.\r\n\tmetadata = new Metadata(metadata)\r\n\r\n\tconst matchingCountries = []\r\n\r\n\tfor (const country of countries) {\r\n\t\tmetadata.country(country)\r\n\t\t// \"Leading digits\" patterns are only defined for about 20% of all countries.\r\n\t\t// By definition, matching \"leading digits\" is a sufficient but not a necessary\r\n\t\t// condition for a phone number to belong to a country.\r\n\t\t// The point of \"leading digits\" check is that it's the fastest one to get a match.\r\n\t\t// https://gitlab.com/catamphetamine/libphonenumber-js/blob/master/METADATA.md#leading_digits\r\n\t\t// I'd suppose that \"leading digits\" patterns are mutually exclusive for different countries\r\n\t\t// because of the intended use of that feature.\r\n\t\tif (metadata.leadingDigits()) {\r\n\t\t\tif (nationalPhoneNumber &&\r\n\t\t\t\tnationalPhoneNumber.search(metadata.leadingDigits()) === 0) {\r\n\t\t\t\treturn country\r\n\t\t\t}\r\n\t\t}\r\n\t\t// Else perform full validation with all of those\r\n\t\t// fixed-line/mobile/etc regular expressions.\r\n\t\telse if (getNumberType({ phone: nationalPhoneNumber, country }, undefined, metadata.metadata)) {\r\n\t\t\t// If the `defaultCountry` is among the `matchingCountries` then return it.\r\n\t\t\tif (defaultCountry) {\r\n\t\t\t\tif (country === defaultCountry) {\r\n\t\t\t\t\treturn country\r\n\t\t\t\t}\r\n\t\t\t\tmatchingCountries.push(country)\r\n\t\t\t} else {\r\n\t\t\t\treturn country\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t// Return the first (\"main\") one of the `matchingCountries`.\r\n\tif (matchingCountries.length > 0) {\r\n\t\treturn matchingCountries[0]\r\n\t}\r\n}","// When phone numbers are written in `RFC3966` format — `\"tel:+12133734253\"` —\r\n// they can have their \"calling code\" part written separately in a `phone-context` parameter.\r\n// Example: `\"tel:12133734253;phone-context=+1\"`.\r\n// This function parses the full phone number from the local number and the `phone-context`\r\n// when the `phone-context` contains a `+` sign.\r\n\r\nimport {\r\n  VALID_DIGITS,\r\n  // PLUS_CHARS\r\n} from '../constants.js'\r\n\r\nexport const PLUS_SIGN = '+'\r\n\r\nconst RFC3966_VISUAL_SEPARATOR_ = '[\\\\-\\\\.\\\\(\\\\)]?'\r\n\r\nconst RFC3966_PHONE_DIGIT_ = '(' + '[' + VALID_DIGITS + ']' + '|' + RFC3966_VISUAL_SEPARATOR_ + ')'\r\n\r\nconst RFC3966_GLOBAL_NUMBER_DIGITS_ =\r\n\t'^' +\r\n\t'\\\\' +\r\n\tPLUS_SIGN +\r\n\tRFC3966_PHONE_DIGIT_ +\r\n\t'*' +\r\n\t'[' + VALID_DIGITS +  ']' +\r\n\tRFC3966_PHONE_DIGIT_ +\r\n\t'*' +\r\n\t'$'\r\n\r\n/**\r\n * Regular expression of valid global-number-digits for the phone-context\r\n * parameter, following the syntax defined in RFC3966.\r\n */\r\nconst RFC3966_GLOBAL_NUMBER_DIGITS_PATTERN_ = new RegExp(RFC3966_GLOBAL_NUMBER_DIGITS_, 'g')\r\n\r\n// In this port of Google's library, we don't accept alpha characters in phone numbers.\r\n// const ALPHANUM_ = VALID_ALPHA_ + VALID_DIGITS\r\nconst ALPHANUM_ = VALID_DIGITS\r\n\r\nconst RFC3966_DOMAINLABEL_ = '[' + ALPHANUM_ + ']+((\\\\-)*[' + ALPHANUM_ + '])*'\r\n\r\nconst VALID_ALPHA_ = 'a-zA-Z'\r\nconst RFC3966_TOPLABEL_ = '[' + VALID_ALPHA_ + ']+((\\\\-)*[' + ALPHANUM_ + '])*'\r\n\r\nconst RFC3966_DOMAINNAME_ = '^(' + RFC3966_DOMAINLABEL_ + '\\\\.)*' + RFC3966_TOPLABEL_ + '\\\\.?$'\r\n\r\n/**\r\n * Regular expression of valid domainname for the phone-context parameter,\r\n * following the syntax defined in RFC3966.\r\n */\r\nconst RFC3966_DOMAINNAME_PATTERN_ = new RegExp(RFC3966_DOMAINNAME_, 'g')\r\n\r\nexport const RFC3966_PREFIX_ = 'tel:'\r\nexport const RFC3966_PHONE_CONTEXT_ = ';phone-context='\r\nexport const RFC3966_ISDN_SUBADDRESS_ = ';isub='\r\n\r\n/**\r\n * Extracts the value of the phone-context parameter of `numberToExtractFrom`,\r\n * following the syntax defined in RFC3966.\r\n *\r\n * @param {string} numberToExtractFrom\r\n * @return {string|null} the extracted string (possibly empty), or `null` if no phone-context parameter is found.\r\n */\r\nexport default function extractPhoneContext(numberToExtractFrom) {\r\n\tconst indexOfPhoneContext = numberToExtractFrom.indexOf(RFC3966_PHONE_CONTEXT_)\r\n\t// If no phone-context parameter is present\r\n\tif (indexOfPhoneContext < 0) {\r\n\t\treturn null\r\n\t}\r\n\r\n\tconst phoneContextStart = indexOfPhoneContext + RFC3966_PHONE_CONTEXT_.length\r\n\t// If phone-context parameter is empty\r\n\tif (phoneContextStart >= numberToExtractFrom.length) {\r\n\t\treturn ''\r\n\t}\r\n\r\n\tconst phoneContextEnd = numberToExtractFrom.indexOf(';', phoneContextStart)\r\n\t// If phone-context is not the last parameter\r\n\tif (phoneContextEnd >= 0) {\r\n\t\treturn numberToExtractFrom.substring(phoneContextStart, phoneContextEnd)\r\n\t} else {\r\n\t\treturn numberToExtractFrom.substring(phoneContextStart)\r\n\t}\r\n}\r\n\r\n/**\r\n * Returns whether the value of phoneContext follows the syntax defined in RFC3966.\r\n *\r\n * @param {string|null} phoneContext\r\n * @return {boolean}\r\n */\r\nexport function isPhoneContextValid(phoneContext) {\r\n\tif (phoneContext === null) {\r\n\t\treturn true\r\n\t}\r\n\r\n\tif (phoneContext.length === 0) {\r\n\t\treturn false\r\n\t}\r\n\r\n\t// Does phone-context value match pattern of global-number-digits or domainname.\r\n\treturn RFC3966_GLOBAL_NUMBER_DIGITS_PATTERN_.test(phoneContext) ||\r\n\t\tRFC3966_DOMAINNAME_PATTERN_.test(phoneContext)\r\n}","import extractPhoneContext, {\r\n\tisPhoneContextValid,\r\n\tPLUS_SIGN,\r\n\tRFC3966_PREFIX_,\r\n\tRFC3966_PHONE_CONTEXT_,\r\n\tRFC3966_ISDN_SUBADDRESS_\r\n} from './extractPhoneContext.js'\r\n\r\nimport ParseError from '../ParseError.js'\r\n\r\n/**\r\n * @param  {string} numberToParse\r\n * @param  {string} nationalNumber\r\n * @return {}\r\n */\r\nexport default function extractFormattedPhoneNumberFromPossibleRfc3966NumberUri(numberToParse, {\r\n\textractFormattedPhoneNumber\r\n}) {\r\n\tconst phoneContext = extractPhoneContext(numberToParse)\r\n\tif (!isPhoneContextValid(phoneContext)) {\r\n\t\tthrow new ParseError('NOT_A_NUMBER')\r\n\t}\r\n\r\n\tlet phoneNumberString\r\n\r\n\tif (phoneContext === null) {\r\n\t\t// Extract a possible number from the string passed in.\r\n\t\t// (this strips leading characters that could not be the start of a phone number)\r\n\t\tphoneNumberString = extractFormattedPhoneNumber(numberToParse) || ''\r\n\t} else {\r\n\t\tphoneNumberString = ''\r\n\r\n\t\t// If the phone context contains a phone number prefix, we need to capture\r\n\t\t// it, whereas domains will be ignored.\r\n\t\tif (phoneContext.charAt(0) === PLUS_SIGN) {\r\n\t\t\tphoneNumberString += phoneContext\r\n\t\t}\r\n\r\n\t\t// Now append everything between the \"tel:\" prefix and the phone-context.\r\n\t\t// This should include the national number, an optional extension or\r\n\t\t// isdn-subaddress component. Note we also handle the case when \"tel:\" is\r\n\t\t// missing, as we have seen in some of the phone number inputs.\r\n\t\t// In that case, we append everything from the beginning.\r\n\t\tconst indexOfRfc3966Prefix = numberToParse.indexOf(RFC3966_PREFIX_)\r\n\t\tlet indexOfNationalNumber\r\n\t\t// RFC 3966 \"tel:\" prefix is preset at this stage because\r\n\t\t// `isPhoneContextValid()` requires it to be present.\r\n\t\t/* istanbul ignore else */\r\n\t\tif (indexOfRfc3966Prefix >= 0) {\r\n\t\t\tindexOfNationalNumber = indexOfRfc3966Prefix + RFC3966_PREFIX_.length\r\n\t\t} else {\r\n\t\t\tindexOfNationalNumber = 0\r\n\t\t}\r\n\t\tconst indexOfPhoneContext = numberToParse.indexOf(RFC3966_PHONE_CONTEXT_)\r\n\t\tphoneNumberString += numberToParse.substring(indexOfNationalNumber, indexOfPhoneContext)\r\n\t}\r\n\r\n\t// Delete the isdn-subaddress and everything after it if it is present.\r\n\t// Note extension won't appear at the same time with isdn-subaddress\r\n\t// according to paragraph 5.3 of the RFC3966 spec.\r\n\tconst indexOfIsdn = phoneNumberString.indexOf(RFC3966_ISDN_SUBADDRESS_)\r\n\tif (indexOfIsdn > 0) {\r\n\t\tphoneNumberString = phoneNumberString.substring(0, indexOfIsdn)\r\n\t}\r\n\t// If both phone context and isdn-subaddress are absent but other\r\n\t// parameters are present, the parameters are left in nationalNumber.\r\n\t// This is because we are concerned about deleting content from a potential\r\n\t// number string when there is no strong evidence that the number is\r\n\t// actually written in RFC3966.\r\n\r\n\tif (phoneNumberString !== '') {\r\n\t\treturn phoneNumberString\r\n\t}\r\n}","// This is a port of Google Android `libphonenumber`'s\r\n// `phonenumberutil.js` of December 31th, 2018.\r\n//\r\n// https://github.com/googlei18n/libphonenumber/commits/master/javascript/i18n/phonenumbers/phonenumberutil.js\r\n\r\nimport {\r\n\tVALID_DIGITS,\r\n\tPLUS_CHARS,\r\n\tMIN_LENGTH_FOR_NSN,\r\n\tMAX_LENGTH_FOR_NSN\r\n} from './constants.js'\r\n\r\nimport ParseError from './ParseError.js'\r\nimport Metadata from './metadata.js'\r\nimport isViablePhoneNumber, { isViablePhoneNumberStart } from './helpers/isViablePhoneNumber.js'\r\nimport extractExtension from './helpers/extension/extractExtension.js'\r\nimport parseIncompletePhoneNumber from './parseIncompletePhoneNumber.js'\r\nimport getCountryCallingCode from './getCountryCallingCode.js'\r\nimport { isPossibleNumber } from './isPossible.js'\r\n// import { parseRFC3966 } from './helpers/RFC3966.js'\r\nimport PhoneNumber from './PhoneNumber.js'\r\nimport matchesEntirely from './helpers/matchesEntirely.js'\r\nimport extractCountryCallingCode from './helpers/extractCountryCallingCode.js'\r\nimport extractNationalNumber from './helpers/extractNationalNumber.js'\r\nimport stripIddPrefix from './helpers/stripIddPrefix.js'\r\nimport getCountryByCallingCode from './helpers/getCountryByCallingCode.js'\r\nimport extractFormattedPhoneNumberFromPossibleRfc3966NumberUri from './helpers/extractFormattedPhoneNumberFromPossibleRfc3966NumberUri.js'\r\n\r\n// We don't allow input strings for parsing to be longer than 250 chars.\r\n// This prevents malicious input from consuming CPU.\r\nconst MAX_INPUT_STRING_LENGTH = 250\r\n\r\n// This consists of the plus symbol, digits, and arabic-indic digits.\r\nconst PHONE_NUMBER_START_PATTERN = new RegExp('[' + PLUS_CHARS + VALID_DIGITS + ']')\r\n\r\n// Regular expression of trailing characters that we want to remove.\r\n// A trailing `#` is sometimes used when writing phone numbers with extensions in US.\r\n// Example: \"+1 (645) 123 1234-910#\" number has extension \"910\".\r\nconst AFTER_PHONE_NUMBER_END_PATTERN = new RegExp('[^' + VALID_DIGITS + '#' + ']+$')\r\n\r\nconst USE_NON_GEOGRAPHIC_COUNTRY_CODE = false\r\n\r\n// Examples:\r\n//\r\n// ```js\r\n// parse('8 (800) 555-35-35', 'RU')\r\n// parse('8 (800) 555-35-35', 'RU', metadata)\r\n// parse('8 (800) 555-35-35', { country: { default: 'RU' } })\r\n// parse('8 (800) 555-35-35', { country: { default: 'RU' } }, metadata)\r\n// parse('+7 800 555 35 35')\r\n// parse('+7 800 555 35 35', metadata)\r\n// ```\r\n//\r\n\r\n/**\r\n * Parses a phone number.\r\n *\r\n * parse('123456789', { defaultCountry: 'RU', v2: true }, metadata)\r\n * parse('123456789', { defaultCountry: 'RU' }, metadata)\r\n * parse('123456789', undefined, metadata)\r\n *\r\n * @param  {string} input\r\n * @param  {object} [options]\r\n * @param  {object} metadata\r\n * @return {object|PhoneNumber?} If `options.v2: true` flag is passed, it returns a `PhoneNumber?` instance. Otherwise, returns an object of shape `{ phone: '...', country: '...' }` (or just `{}` if no phone number was parsed).\r\n */\r\nexport default function parse(text, options, metadata) {\r\n\t// If assigning the `{}` default value is moved to the arguments above,\r\n\t// code coverage would decrease for some weird reason.\r\n\toptions = options || {}\r\n\r\n\tmetadata = new Metadata(metadata)\r\n\r\n\t// Validate `defaultCountry`.\r\n\tif (options.defaultCountry && !metadata.hasCountry(options.defaultCountry)) {\r\n\t\tif (options.v2) {\r\n\t\t\tthrow new ParseError('INVALID_COUNTRY')\r\n\t\t}\r\n\t\tthrow new Error(`Unknown country: ${options.defaultCountry}`)\r\n\t}\r\n\r\n\t// Parse the phone number.\r\n\tconst { number: formattedPhoneNumber, ext, error } = parseInput(text, options.v2, options.extract)\r\n\r\n\t// If the phone number is not viable then return nothing.\r\n\tif (!formattedPhoneNumber) {\r\n\t\tif (options.v2) {\r\n\t\t\tif (error === 'TOO_SHORT') {\r\n\t\t\t\tthrow new ParseError('TOO_SHORT')\r\n\t\t\t}\r\n\t\t\tthrow new ParseError('NOT_A_NUMBER')\r\n\t\t}\r\n\t\treturn {}\r\n\t}\r\n\r\n\tconst {\r\n\t\tcountry,\r\n\t\tnationalNumber,\r\n\t\tcountryCallingCode,\r\n\t\tcountryCallingCodeSource,\r\n\t\tcarrierCode\r\n\t} = parsePhoneNumber(\r\n\t\tformattedPhoneNumber,\r\n\t\toptions.defaultCountry,\r\n\t\toptions.defaultCallingCode,\r\n\t\tmetadata\r\n\t)\r\n\r\n\tif (!metadata.hasSelectedNumberingPlan()) {\r\n\t\tif (options.v2) {\r\n\t\t\tthrow new ParseError('INVALID_COUNTRY')\r\n\t\t}\r\n\t\treturn {}\r\n\t}\r\n\r\n\t// Validate national (significant) number length.\r\n\tif (!nationalNumber || nationalNumber.length < MIN_LENGTH_FOR_NSN) {\r\n\t\t// Won't throw here because the regexp already demands length > 1.\r\n\t\t/* istanbul ignore if */\r\n\t\tif (options.v2) {\r\n\t\t\tthrow new ParseError('TOO_SHORT')\r\n\t\t}\r\n\t\t// Google's demo just throws an error in this case.\r\n\t\treturn {}\r\n\t}\r\n\r\n\t// Validate national (significant) number length.\r\n\t//\r\n\t// A sidenote:\r\n\t//\r\n\t// They say that sometimes national (significant) numbers\r\n\t// can be longer than `MAX_LENGTH_FOR_NSN` (e.g. in Germany).\r\n\t// https://github.com/googlei18n/libphonenumber/blob/7e1748645552da39c4e1ba731e47969d97bdb539/resources/phonenumber.proto#L36\r\n\t// Such numbers will just be discarded.\r\n\t//\r\n\tif (nationalNumber.length > MAX_LENGTH_FOR_NSN) {\r\n\t\tif (options.v2) {\r\n\t\t\tthrow new ParseError('TOO_LONG')\r\n\t\t}\r\n\t\t// Google's demo just throws an error in this case.\r\n\t\treturn {}\r\n\t}\r\n\r\n\tif (options.v2) {\r\n\t\tconst phoneNumber = new PhoneNumber(\r\n\t\t\tcountryCallingCode,\r\n\t\t\tnationalNumber,\r\n\t\t\tmetadata.metadata\r\n\t\t)\r\n\t\tif (country) {\r\n\t\t\tphoneNumber.country = country\r\n\t\t}\r\n\t\tif (carrierCode) {\r\n\t\t\tphoneNumber.carrierCode = carrierCode\r\n\t\t}\r\n\t\tif (ext) {\r\n\t\t\tphoneNumber.ext = ext\r\n\t\t}\r\n\t\tphoneNumber.__countryCallingCodeSource = countryCallingCodeSource\r\n\t\treturn phoneNumber\r\n\t}\r\n\r\n\t// Check if national phone number pattern matches the number.\r\n\t// National number pattern is different for each country,\r\n\t// even for those ones which are part of the \"NANPA\" group.\r\n\tconst valid = (options.extended ? metadata.hasSelectedNumberingPlan() : country) ?\r\n\t\tmatchesEntirely(nationalNumber, metadata.nationalNumberPattern()) :\r\n\t\tfalse\r\n\r\n\tif (!options.extended) {\r\n\t\treturn valid ? result(country, nationalNumber, ext) : {}\r\n\t}\r\n\r\n\t// isInternational: countryCallingCode !== undefined\r\n\r\n\treturn {\r\n\t\tcountry,\r\n\t\tcountryCallingCode,\r\n\t\tcarrierCode,\r\n\t\tvalid,\r\n\t\tpossible: valid ? true : (\r\n\t\t\toptions.extended === true &&\r\n\t\t\tmetadata.possibleLengths() &&\r\n\t\t\tisPossibleNumber(nationalNumber, metadata) ? true : false\r\n\t\t),\r\n\t\tphone: nationalNumber,\r\n\t\text\r\n\t}\r\n}\r\n\r\n/**\r\n * Extracts a formatted phone number from text.\r\n * Doesn't guarantee that the extracted phone number\r\n * is a valid phone number (for example, doesn't validate its length).\r\n * @param  {string} text\r\n * @param  {boolean} [extract] — If `false`, then will parse the entire `text` as a phone number.\r\n * @param  {boolean} [throwOnError] — By default, it won't throw if the text is too long.\r\n * @return {string}\r\n * @example\r\n * // Returns \"(213) 373-4253\".\r\n * extractFormattedPhoneNumber(\"Call (213) 373-4253 for assistance.\")\r\n */\r\nfunction extractFormattedPhoneNumber(text, extract, throwOnError) {\r\n\tif (!text) {\r\n\t\treturn\r\n\t}\r\n\tif (text.length > MAX_INPUT_STRING_LENGTH) {\r\n\t\tif (throwOnError) {\r\n\t\t\tthrow new ParseError('TOO_LONG')\r\n\t\t}\r\n\t\treturn\r\n\t}\r\n\tif (extract === false) {\r\n\t\treturn text\r\n\t}\r\n\t// Attempt to extract a possible number from the string passed in\r\n\tconst startsAt = text.search(PHONE_NUMBER_START_PATTERN)\r\n\tif (startsAt < 0) {\r\n\t\treturn\r\n\t}\r\n\treturn text\r\n\t\t// Trim everything to the left of the phone number\r\n\t\t.slice(startsAt)\r\n\t\t// Remove trailing non-numerical characters\r\n\t\t.replace(AFTER_PHONE_NUMBER_END_PATTERN, '')\r\n}\r\n\r\n/**\r\n * @param  {string} text - Input.\r\n * @param  {boolean} v2 - Legacy API functions don't pass `v2: true` flag.\r\n * @param  {boolean} [extract] - Whether to extract a phone number from `text`, or attempt to parse the entire text as a phone number.\r\n * @return {object} `{ ?number, ?ext }`.\r\n */\r\nfunction parseInput(text, v2, extract) {\r\n\t// // Parse RFC 3966 phone number URI.\r\n\t// if (text && text.indexOf('tel:') === 0) {\r\n\t// \treturn parseRFC3966(text)\r\n\t// }\r\n\t// let number = extractFormattedPhoneNumber(text, extract, v2)\r\n\tlet number = extractFormattedPhoneNumberFromPossibleRfc3966NumberUri(text, {\r\n\t\textractFormattedPhoneNumber: (text) => extractFormattedPhoneNumber(text, extract, v2)\r\n\t})\r\n\t// If the phone number is not viable, then abort.\r\n\tif (!number) {\r\n\t\treturn {}\r\n\t}\r\n\tif (!isViablePhoneNumber(number)) {\r\n\t\tif (isViablePhoneNumberStart(number)) {\r\n\t\t\treturn { error: 'TOO_SHORT' }\r\n\t\t}\r\n\t\treturn {}\r\n\t}\r\n\t// Attempt to parse extension first, since it doesn't require region-specific\r\n\t// data and we want to have the non-normalised number here.\r\n\tconst withExtensionStripped = extractExtension(number)\r\n\tif (withExtensionStripped.ext) {\r\n\t\treturn withExtensionStripped\r\n\t}\r\n\treturn { number }\r\n}\r\n\r\n/**\r\n * Creates `parse()` result object.\r\n */\r\nfunction result(country, nationalNumber, ext) {\r\n\tconst result = {\r\n\t\tcountry,\r\n\t\tphone: nationalNumber\r\n\t}\r\n\tif (ext) {\r\n\t\tresult.ext = ext\r\n\t}\r\n\treturn result\r\n}\r\n\r\n/**\r\n * Parses a viable phone number.\r\n * @param {string} formattedPhoneNumber — Example: \"(213) 373-4253\".\r\n * @param {string} [defaultCountry]\r\n * @param {string} [defaultCallingCode]\r\n * @param {Metadata} metadata\r\n * @return {object} Returns `{ country: string?, countryCallingCode: string?, nationalNumber: string? }`.\r\n */\r\nfunction parsePhoneNumber(\r\n\tformattedPhoneNumber,\r\n\tdefaultCountry,\r\n\tdefaultCallingCode,\r\n\tmetadata\r\n) {\r\n\t// Extract calling code from phone number.\r\n\tlet { countryCallingCodeSource, countryCallingCode, number } = extractCountryCallingCode(\r\n\t\tparseIncompletePhoneNumber(formattedPhoneNumber),\r\n\t\tdefaultCountry,\r\n\t\tdefaultCallingCode,\r\n\t\tmetadata.metadata\r\n\t)\r\n\r\n\t// Choose a country by `countryCallingCode`.\r\n\tlet country\r\n\tif (countryCallingCode) {\r\n\t\tmetadata.selectNumberingPlan(countryCallingCode)\r\n\t}\r\n\t// If `formattedPhoneNumber` is passed in \"national\" format\r\n\t// then `number` is defined and `countryCallingCode` is `undefined`.\r\n\telse if (number && (defaultCountry || defaultCallingCode)) {\r\n\t\tmetadata.selectNumberingPlan(defaultCountry, defaultCallingCode)\r\n\t\tif (defaultCountry) {\r\n\t\t\tcountry = defaultCountry\r\n\t\t} else {\r\n\t\t\t/* istanbul ignore if */\r\n\t\t\tif (USE_NON_GEOGRAPHIC_COUNTRY_CODE) {\r\n\t\t\t\tif (metadata.isNonGeographicCallingCode(defaultCallingCode)) {\r\n\t\t\t\t\tcountry = '001'\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tcountryCallingCode = defaultCallingCode || getCountryCallingCode(defaultCountry, metadata.metadata)\r\n\t}\r\n\telse return {}\r\n\r\n\tif (!number) {\r\n\t\treturn {\r\n\t\t\tcountryCallingCodeSource,\r\n\t\t\tcountryCallingCode\r\n\t\t}\r\n\t}\r\n\r\n\tconst {\r\n\t\tnationalNumber,\r\n\t\tcarrierCode\r\n\t} = extractNationalNumber(\r\n\t\tparseIncompletePhoneNumber(number),\r\n\t\tmetadata\r\n\t)\r\n\r\n\t// Sometimes there are several countries\r\n\t// corresponding to the same country phone code\r\n\t// (e.g. NANPA countries all having `1` country phone code).\r\n\t// Therefore, to reliably determine the exact country,\r\n\t// national (significant) number should have been parsed first.\r\n\t//\r\n\t// When `metadata.json` is generated, all \"ambiguous\" country phone codes\r\n\t// get their countries populated with the full set of\r\n\t// \"phone number type\" regular expressions.\r\n\t//\r\n\tconst exactCountry = getCountryByCallingCode(countryCallingCode, {\r\n\t\tnationalNumber,\r\n\t\tdefaultCountry,\r\n\t\tmetadata\r\n\t})\r\n\tif (exactCountry) {\r\n\t\tcountry = exactCountry\r\n\t\t/* istanbul ignore if */\r\n\t\tif (exactCountry === '001') {\r\n\t\t\t// Can't happen with `USE_NON_GEOGRAPHIC_COUNTRY_CODE` being `false`.\r\n\t\t\t// If `USE_NON_GEOGRAPHIC_COUNTRY_CODE` is set to `true` for some reason,\r\n\t\t\t// then remove the \"istanbul ignore if\".\r\n\t\t} else {\r\n\t\t\tmetadata.country(country)\r\n\t\t}\r\n\t}\r\n\r\n\treturn {\r\n\t\tcountry,\r\n\t\tcountryCallingCode,\r\n\t\tcountryCallingCodeSource,\r\n\t\tnationalNumber,\r\n\t\tcarrierCode\r\n\t}\r\n}","import parsePhoneNumberWithError from './parsePhoneNumberWithError_.js'\r\nimport ParseError from './ParseError.js'\r\nimport { isSupportedCountry } from './metadata.js'\r\n\r\nexport default function parsePhoneNumber(text, options, metadata) {\r\n\t// Validate `defaultCountry`.\r\n\tif (options && options.defaultCountry && !isSupportedCountry(options.defaultCountry, metadata)) {\r\n\t\toptions = {\r\n\t\t\t...options,\r\n\t\t\tdefaultCountry: undefined\r\n\t\t}\r\n\t}\r\n\t// Parse phone number.\r\n\ttry {\r\n\t\treturn parsePhoneNumberWithError(text, options, metadata)\r\n\t} catch (error) {\r\n\t\t/* istanbul ignore else */\r\n\t\tif (error instanceof ParseError) {\r\n\t\t\t//\r\n\t\t} else {\r\n\t\t\tthrow error\r\n\t\t}\r\n\t}\r\n}\r\n","import parse from './parse.js'\r\n\r\nexport default function parsePhoneNumberWithError(text, options, metadata) {\r\n\treturn parse(text, { ...options, v2: true }, metadata)\r\n}","import normalizeArguments from './normalizeArguments.js'\r\nimport parsePhoneNumber_ from './parsePhoneNumber_.js'\r\n\r\nexport default function parsePhoneNumber() {\r\n\tconst { text, options, metadata } = normalizeArguments(arguments)\r\n\treturn parsePhoneNumber_(text, options, metadata)\r\n}\r\n","import withMetadataArgument from './withMetadataArgument.js'\r\nimport { default as _parsePhoneNumber } from '../../core/index.js'\r\n\r\nexport function parsePhoneNumber() {\r\n\treturn withMetadataArgument(_parsePhoneNumber, arguments)\r\n}","// Importing from a \".js\" file is a workaround for Node.js \"ES Modules\"\r\n// importing system which is even uncapable of importing \"*.json\" files.\r\nimport metadata from '../../metadata.min.json.js'\r\n\r\nexport default function withMetadataArgument(func, _arguments) {\r\n\tvar args = Array.prototype.slice.call(_arguments)\r\n\targs.push(metadata)\r\n\treturn func.apply(this, args)\r\n}","export const userStatusMappings = {\n  enabled: 'active',\n  disabled: 'disabled',\n  invited: 'invited',\n};\n","import { createSelector } from 'reselect';\nimport { State } from './types';\nimport { userStatusMappings } from './constants';\n\nexport const getRawUsersList = (state: State) => state.usersList.data;\nexport const getTenantRoles = (state: State) => state.tenantRoles.data;\nexport const getSelectedUsersLoginIds = (state: State) =>\n  state.selectedUsersLoginIds;\nexport const getNotifications = (state: State) => state.notifications;\nexport const getSearchParams = (state: State) => state.searchParams;\nexport const getCustomAttributes = (state: State) =>\n  state.customAttributes.data;\n\nexport const getUsersList = createSelector(getRawUsersList, (users) =>\n  users.map((user) => ({\n    ...user,\n    status: userStatusMappings[user.status] || user.status,\n    roles: user.roleNames,\n  })),\n);\n\nexport const getSelectedUsers = createSelector(\n  getSelectedUsersLoginIds,\n  getUsersList,\n  (selected, users) => users.filter((user) => selected.includes(user.loginIds)),\n);\n\nexport const getSelectedUsersUserIds = createSelector(\n  getSelectedUsers,\n  (users) => users.map((user) => user.userId),\n);\n\nexport const getSelectedUsersStatus = createSelector(\n  getSelectedUsers,\n  (users) => users.map((user) => user.status),\n);\n\nexport const getIsSelectedUsersEditable = createSelector(\n  getSelectedUsers,\n  (selectedUsers) => selectedUsers.every((user) => user.editable),\n);\n\nexport const getIsUsersSelected = createSelector(\n  getSelectedUsersLoginIds,\n  (selected) => !!selected.length,\n);\n\nexport const getIsSingleUsersSelected = createSelector(\n  getSelectedUsersLoginIds,\n  (selected) => selected.length === 1,\n);\n\nexport const getSelectedUserLoginId = createSelector(\n  getSelectedUsersLoginIds,\n  (loginIds) => loginIds?.[0]?.[0] as string,\n);\n\nexport const getIsSelectedUsersEnabled = createSelector(\n  getIsSingleUsersSelected,\n  getSelectedUsersStatus,\n  (isSingleUser, statuses) =>\n    isSingleUser &&\n    statuses.every((status) => status === userStatusMappings.enabled),\n);\n\nexport const getIsSelectedUsersDisabled = createSelector(\n  getSelectedUsersStatus,\n  (statuses) =>\n    statuses.every((status) => status === userStatusMappings.disabled),\n);\n\nexport const getSelectedUsersDetailsForDisplay = createSelector(\n  getSelectedUsers,\n  (selectedUsers) => {\n    if (selectedUsers.length === 1) {\n      return (\n        selectedUsers[0].name ||\n        selectedUsers[0].email ||\n        selectedUsers[0].loginIds?.[0]\n      );\n    }\n    return `${selectedUsers.length} users`;\n  },\n);\n\nexport const getCanEnable = createSelector(\n  getIsSingleUsersSelected,\n  getIsSelectedUsersDisabled,\n  getIsSelectedUsersEditable,\n  (isSingleUser, isUsersDisabled, isUsersEditable) =>\n    isSingleUser && isUsersDisabled && isUsersEditable,\n);\n\nexport const getCanDisable = createSelector(\n  getIsSingleUsersSelected,\n  getIsSelectedUsersEnabled,\n  getIsSelectedUsersEditable,\n  (isSingleUser, isUsersEnabled, isUsersEditable) =>\n    isSingleUser && isUsersEnabled && isUsersEditable,\n);\n\nexport const getCanEdit = createSelector(\n  getIsSingleUsersSelected,\n  getIsSelectedUsersEditable,\n  (isSingleUser, isUsersEditable) => isSingleUser && isUsersEditable,\n);\n\nexport const getCanRemovePasskey = createSelector(\n  getIsSingleUsersSelected,\n  getIsSelectedUsersEditable,\n  (isSingleUser, isUsersEditable) => isSingleUser && isUsersEditable,\n);\n\nexport const getCanResetPassword = createSelector(\n  getIsSingleUsersSelected,\n  getIsSelectedUsersEditable,\n  (isSingleUser, isUsersEditable) => isSingleUser && isUsersEditable,\n);\n\nexport const getCanDelete = createSelector(\n  getIsUsersSelected,\n  getIsSelectedUsersEditable,\n  (isUsersSelected, isUsersEditable) => isUsersSelected && isUsersEditable,\n);\n","/* eslint-disable @typescript-eslint/no-shadow */\n/* eslint-disable no-param-reassign */\n\nimport {\n  ActionReducerMapBuilder,\n  AsyncThunk,\n  PayloadAction,\n  SerializedError,\n} from '@reduxjs/toolkit';\nimport { State } from '../types';\n\ntype ExtractedArg<T> = T extends AsyncThunk<any, infer U, any> ? U : never;\n\ntype FulfilledAction<T extends AsyncThunk<any, any, any>> = PayloadAction<\n  any,\n  string,\n  {\n    arg: ExtractedArg<T>;\n    requestId: string;\n  },\n  never\n>;\n\ntype RejectedAction<T extends AsyncThunk<any, any, any>> = PayloadAction<\n  any,\n  string,\n  {\n    arg: ExtractedArg<T>;\n    requestId: string;\n  },\n  SerializedError\n>;\n\ntype PendingAction<T extends AsyncThunk<any, any, any>> = PayloadAction<\n  unknown,\n  string,\n  {\n    arg: ExtractedArg<T>;\n    requestId: string;\n  }\n>;\n\ntype AsyncReducerConfig<T extends AsyncThunk<any, any, any>> = {\n  onFulfilled?: (state: State, action: FulfilledAction<T>) => void;\n  onRejected?: (state: State, action: RejectedAction<T>) => void;\n  onPending?: (state: State, action: PendingAction<T>) => void;\n};\n\nexport const buildAsyncReducer =\n  <T extends AsyncThunk<any, any, any>>(action: T) =>\n  (...args: AsyncReducerConfig<T>[]) =>\n  (builder: ActionReducerMapBuilder<State>) => {\n    builder.addCase(action.pending, (state, action) => {\n      args.forEach(({ onPending }) => {\n        onPending?.(state, action);\n      });\n    });\n\n    builder.addCase(action.fulfilled, (state, action) => {\n      args.forEach(({ onFulfilled }) => {\n        onFulfilled?.(state, action);\n      });\n    });\n\n    builder.addCase(action.rejected, (state, action) => {\n      args.forEach(({ onRejected }) => {\n        onRejected?.(state, action);\n      });\n    });\n  };\n\nexport const withRequestStatus = (\n  getStateSection: (state: State) => { loading: boolean; error: unknown },\n): AsyncReducerConfig<any> => ({\n  onFulfilled: (state) => {\n    getStateSection(state).loading = false;\n  },\n  onPending: (state) => {\n    getStateSection(state).loading = true;\n    getStateSection(state).error = null;\n  },\n  onRejected: (state, action) => {\n    getStateSection(state).loading = false;\n    getStateSection(state).error = action.error;\n  },\n});\n\nexport const withNotifications = ({\n  getErrorMsg,\n  getSuccessMsg,\n}: {\n  getErrorMsg?: (action?: RejectedAction<AsyncThunk<any, any, any>>) => string;\n  getSuccessMsg?: (\n    action?: FulfilledAction<AsyncThunk<any, any, any>>,\n  ) => string;\n}): AsyncReducerConfig<any> => ({\n  onFulfilled: (state, action) => {\n    if (getSuccessMsg)\n      state.notifications.push({ type: 'success', msg: getSuccessMsg(action) });\n  },\n  onRejected: (state, action) => {\n    if (getErrorMsg)\n      state.notifications.push({ type: 'error', msg: getErrorMsg(action) });\n  },\n});\n","/* eslint-disable no-param-reassign */\n/* eslint-disable @typescript-eslint/no-shadow */\nimport { createAsyncThunk } from '@reduxjs/toolkit';\nimport { Sdk } from '../../api/sdk';\nimport { FirstParameter, State, ThunkConfigExtraApi } from '../types';\nimport {\n  buildAsyncReducer,\n  withNotifications,\n  withRequestStatus,\n} from './helpers';\n\nconst action = createAsyncThunk<\n  any,\n  FirstParameter<Sdk['user']['create']>,\n  ThunkConfigExtraApi\n>('users/create', (arg, { extra: { api } }) => api.user.create(arg));\n\nconst reducer = buildAsyncReducer(action)(\n  {\n    onFulfilled: (state, action) => {\n      state.usersList.data.unshift(action.payload);\n    },\n  },\n  withRequestStatus((state: State) => state.createUser),\n  withNotifications({\n    getSuccessMsg: () => 'User created successfully',\n    getErrorMsg: (action) => {\n      const errorMsg = action.error?.message;\n      return `\n      <div>\n        <div>Failed to create user</div>\n        ${errorMsg}\n      </div>`;\n    },\n  }),\n);\n\nexport const createUser = { action, reducer };\n","/* eslint-disable no-param-reassign */\nimport { pluralize } from '@descope/sdk-helpers';\nimport { createAsyncThunk } from '@reduxjs/toolkit';\nimport { Sdk } from '../../api/sdk';\nimport { FirstParameter, State, ThunkConfigExtraApi } from '../types';\nimport {\n  buildAsyncReducer,\n  withNotifications,\n  withRequestStatus,\n} from './helpers';\n\nconst action = createAsyncThunk<\n  any,\n  FirstParameter<Sdk['user']['deleteBatch']>,\n  ThunkConfigExtraApi\n>('users/delete', (arg, { extra: { api } }) => api.user.deleteBatch(arg));\n\nconst reducer = buildAsyncReducer(action)(\n  {\n    // eslint-disable-next-line @typescript-eslint/no-shadow\n    onFulfilled: (state, action) => {\n      state.usersList.data = state.usersList.data.filter(\n        (user) => !action.meta.arg.includes(user.userId),\n      );\n      state.selectedUsersLoginIds = [];\n    },\n  },\n  withRequestStatus((state: State) => state.deleteUser),\n  // eslint-disable-next-line @typescript-eslint/no-shadow\n  withNotifications({\n    // eslint-disable-next-line @typescript-eslint/no-shadow\n    getSuccessMsg: (action) =>\n      pluralize(action.meta.arg.length)`${['', action.meta.arg.length]} ${[\n        'U',\n        'u',\n      ]}ser${['', 's']} deleted successfully`,\n    // eslint-disable-next-line @typescript-eslint/no-shadow\n    getErrorMsg: (action) =>\n      pluralize(action.meta.arg.length)`Failed to delete user${['', 's']}`,\n  }),\n);\n\nexport const deleteUsers = { action, reducer };\n","/* eslint-disable no-param-reassign */\nimport { createAsyncThunk } from '@reduxjs/toolkit';\nimport { Sdk } from '../../api/sdk';\nimport { FirstParameter, State, ThunkConfigExtraApi } from '../types';\nimport {\n  buildAsyncReducer,\n  withNotifications,\n  withRequestStatus,\n} from './helpers';\n\nconst action = createAsyncThunk<\n  any,\n  FirstParameter<Sdk['user']['setTempPassword']>,\n  ThunkConfigExtraApi\n>('users/setTempPassword', (arg, { extra: { api } }) =>\n  api.user.setTempPassword(arg),\n);\n\n// eslint-disable-next-line @typescript-eslint/no-shadow\nconst reducer = buildAsyncReducer(action)(\n  withRequestStatus((state: State) => state.setTempUserPassword),\n  withNotifications({\n    getSuccessMsg: () => `Successfully reset user password`,\n    // eslint-disable-next-line @typescript-eslint/no-shadow\n    getErrorMsg: (action) => {\n      const errorMsg = action.error?.message;\n      return `\n      <div>\n        <div>Failed to reset user's password</div>\n        ${errorMsg}\n      </div>`;\n    },\n  }),\n);\n\nexport const setTempUserPassword = { action, reducer };\n","import { createAsyncThunk } from '@reduxjs/toolkit';\nimport { Sdk } from '../../api/sdk';\nimport { FirstParameter, State, ThunkConfigExtraApi } from '../types';\nimport { buildAsyncReducer, withRequestStatus } from './helpers';\n\nconst action = createAsyncThunk<\n  any,\n  FirstParameter<Sdk['user']['getCustomAttributes']>,\n  ThunkConfigExtraApi\n>('users/getCustomAttributes', (_, { extra: { api } }) =>\n  api.user.getCustomAttributes(),\n);\n\nconst reducer = buildAsyncReducer(action)(\n  {\n    // eslint-disable-next-line @typescript-eslint/no-shadow\n    onFulfilled: (state, action) => {\n      // eslint-disable-next-line no-param-reassign\n      state.customAttributes.data = action.payload;\n    },\n  },\n  withRequestStatus((state: State) => state.customAttributes),\n);\n\nexport const getCustomAttributes = { action, reducer };\n","/* eslint-disable no-param-reassign */\nimport { createAsyncThunk } from '@reduxjs/toolkit';\nimport { Sdk } from '../../api/sdk';\nimport { FirstParameter, State, ThunkConfigExtraApi } from '../types';\nimport { buildAsyncReducer, withRequestStatus } from './helpers';\nimport { getSearchParams } from '../selectors';\n\nconst action = createAsyncThunk<\n  any,\n  FirstParameter<Sdk['user']['search']> | void,\n  ThunkConfigExtraApi\n>('users/search', (arg, { extra: { api }, getState }) => {\n  // we get the existing search params from state, and adding the new search params from the action\n  const searchParams = getSearchParams(getState() as State);\n  return api.user.search({ ...searchParams, ...arg });\n});\n\nconst reducer = buildAsyncReducer(action)(\n  {\n    // eslint-disable-next-line @typescript-eslint/no-shadow\n    onPending: (state, action) => {\n      state.searchParams = { ...state.searchParams, ...action.meta.arg };\n    },\n    // eslint-disable-next-line @typescript-eslint/no-shadow\n    onFulfilled: (state, action) => {\n      state.usersList.data = action.payload;\n    },\n  },\n  withRequestStatus((state: State) => state.usersList),\n);\n\nexport const searchUser = { action, reducer };\n","import { createAsyncThunk } from '@reduxjs/toolkit';\nimport { Sdk } from '../../api/sdk';\nimport { FirstParameter, State, ThunkConfigExtraApi } from '../types';\nimport { buildAsyncReducer, withRequestStatus } from './helpers';\n\nconst action = createAsyncThunk<\n  any,\n  FirstParameter<Sdk['tenant']['getTenantRoles']>,\n  ThunkConfigExtraApi\n>('tenant/getTenantRoles', (_, { extra: { api } }) =>\n  api.tenant.getTenantRoles(),\n);\n\nconst reducer = buildAsyncReducer(action)(\n  {\n    // eslint-disable-next-line @typescript-eslint/no-shadow\n    onFulfilled: (state, action) => {\n      // eslint-disable-next-line no-param-reassign\n      state.tenantRoles.data = action.payload.roles;\n    },\n  },\n  withRequestStatus((state: State) => state.tenantRoles),\n);\n\nexport const getTenantRoles = { action, reducer };\n","/* eslint-disable no-param-reassign */\n/* eslint-disable @typescript-eslint/no-shadow */\nimport { compareArrays } from '@descope/sdk-helpers';\nimport { createAsyncThunk } from '@reduxjs/toolkit';\nimport { Sdk } from '../../api/sdk';\nimport { FirstParameter, State, ThunkConfigExtraApi } from '../types';\nimport {\n  buildAsyncReducer,\n  withNotifications,\n  withRequestStatus,\n} from './helpers';\n\nconst action = createAsyncThunk<\n  any,\n  FirstParameter<Sdk['user']['update']>,\n  ThunkConfigExtraApi\n>('users/update', (arg, { extra: { api } }) => api.user.update(arg));\n\nconst reducer = buildAsyncReducer(action)(\n  {\n    onFulfilled: (state, action) => {\n      const userIdx = state.usersList.data.findIndex((user) =>\n        compareArrays(user.loginIds, action.payload.loginIds),\n      );\n      if (userIdx !== -1) {\n        state.usersList.data[userIdx] = action.payload;\n      }\n    },\n  },\n  withRequestStatus((state: State) => state.updateUser),\n  withNotifications({\n    getSuccessMsg: () => 'User updated successfully',\n    getErrorMsg: (action) => {\n      const errorMsg = action.error?.message;\n      return `\n      <div>\n        <div>Failed to update user</div>\n        ${errorMsg}\n      </div>`;\n    },\n  }),\n);\n\nexport const updateUser = { action, reducer };\n","/* eslint-disable no-param-reassign */\n/* eslint-disable @typescript-eslint/no-shadow */\nimport { compareArrays } from '@descope/sdk-helpers';\nimport { createAsyncThunk } from '@reduxjs/toolkit';\nimport { Sdk } from '../../api/sdk';\nimport { FirstParameter, State, ThunkConfigExtraApi } from '../types';\nimport {\n  buildAsyncReducer,\n  withNotifications,\n  withRequestStatus,\n} from './helpers';\n\nconst action = createAsyncThunk<\n  any,\n  FirstParameter<Sdk['user']['enable']>,\n  ThunkConfigExtraApi\n>('users/enable', (arg, { extra: { api } }) => api.user.enable(arg));\n\nconst reducer = buildAsyncReducer(action)(\n  {\n    onFulfilled: (state, action) => {\n      const userIdx = state.usersList.data.findIndex((user) =>\n        compareArrays(user.loginIds, action.payload.user?.loginIds),\n      );\n      if (userIdx !== -1) {\n        state.usersList.data[userIdx].status = action.payload.user?.status;\n      }\n    },\n  },\n  withRequestStatus((state: State) => state.enableUser),\n  withNotifications({\n    getSuccessMsg: () => 'User enabled successfully',\n    getErrorMsg: (action) => {\n      const errorMsg = action.error?.message;\n      return `\n      <div>\n        <div>Failed to enable user</div>\n        ${errorMsg}\n      </div>`;\n    },\n  }),\n);\n\nexport const enableUser = { action, reducer };\n","/* eslint-disable no-param-reassign */\n/* eslint-disable @typescript-eslint/no-shadow */\nimport { compareArrays } from '@descope/sdk-helpers';\nimport { createAsyncThunk } from '@reduxjs/toolkit';\nimport { Sdk } from '../../api/sdk';\nimport { FirstParameter, State, ThunkConfigExtraApi } from '../types';\nimport {\n  buildAsyncReducer,\n  withNotifications,\n  withRequestStatus,\n} from './helpers';\n\nconst action = createAsyncThunk<\n  any,\n  FirstParameter<Sdk['user']['disable']>,\n  ThunkConfigExtraApi\n>('users/disable', (arg, { extra: { api } }) => api.user.disable(arg));\n\nconst reducer = buildAsyncReducer(action)(\n  {\n    onFulfilled: (state, action) => {\n      const userIdx = state.usersList.data.findIndex((user) =>\n        compareArrays(user.loginIds, action.payload.user?.loginIds),\n      );\n      if (userIdx !== -1) {\n        state.usersList.data[userIdx].status = action.payload.user?.status;\n      }\n    },\n  },\n  withRequestStatus((state: State) => state.disableUser),\n  withNotifications({\n    getSuccessMsg: () => 'User disabled successfully',\n    getErrorMsg: (action) => {\n      const errorMsg = action.error?.message;\n      return `\n      <div>\n        <div>Failed to disable user</div>\n        ${errorMsg}\n      </div>`;\n    },\n  }),\n);\n\nexport const disableUser = { action, reducer };\n","/* eslint-disable no-param-reassign */\n/* eslint-disable @typescript-eslint/no-shadow */\nimport { createAsyncThunk } from '@reduxjs/toolkit';\nimport { Sdk } from '../../api/sdk';\nimport { FirstParameter, State, ThunkConfigExtraApi } from '../types';\nimport {\n  buildAsyncReducer,\n  withNotifications,\n  withRequestStatus,\n} from './helpers';\n\nconst action = createAsyncThunk<\n  any,\n  FirstParameter<Sdk['user']['removePasskey']>,\n  ThunkConfigExtraApi\n>('users/removePasskey', (arg, { extra: { api } }) =>\n  api.user.removePasskey(arg),\n);\n\nconst reducer = buildAsyncReducer(action)(\n  withRequestStatus((state: State) => state.removePasskey),\n  withNotifications({\n    getSuccessMsg: () => `Successfully removed user's passkey`,\n    getErrorMsg: (action) => {\n      const errorMsg = action.error?.message;\n      return `\n      <div>\n        <div>Failed to remove user's passkey</div>\n        ${errorMsg}\n      </div>`;\n    },\n  }),\n);\n\nexport const removePasskey = { action, reducer };\n","import { State } from './types';\n\nexport const initialState: State = {\n  usersList: {\n    data: [],\n    loading: false,\n    error: null,\n  },\n  createUser: {\n    loading: false,\n    error: null,\n  },\n  updateUser: {\n    loading: false,\n    error: null,\n  },\n  deleteUser: {\n    loading: false,\n    error: null,\n  },\n  enableUser: {\n    loading: false,\n    error: null,\n  },\n  disableUser: {\n    loading: false,\n    error: null,\n  },\n  removePasskey: {\n    loading: false,\n    error: null,\n  },\n  setTempUserPassword: {\n    loading: false,\n    error: null,\n  },\n  customAttributes: {\n    loading: false,\n    error: null,\n    data: [],\n  },\n  tenantRoles: {\n    loading: false,\n    error: null,\n    data: [],\n  },\n  searchParams: { text: '', sort: [] },\n  selectedUsersLoginIds: [],\n  notifications: [],\n};\n","export const apiPaths = {\n  user: {\n    search: '/v1/mgmt/user/search',\n    deleteBatch: '/v1/mgmt/user/delete/batch',\n    create: '/v1/mgmt/user/create',\n    update: '/v1/mgmt/user/update',\n    status: '/v1/mgmt/user/update/status',\n    setTempPassword: '/v1/mgmt/user/password/set/temporary',\n    removePasskey: '/v1/mgmt/user/passkeys/delete',\n    customAttributes: '/v1/mgmt/user/customattributes',\n  },\n  tenant: {\n    roles: '/v1/mgmt/role/all',\n  },\n};\n","export const withErrorHandler = async (res: Response) => {\n  const text = await res.text();\n  const json = JSON.parse(text);\n\n  if (!res.ok) {\n    const descopeErrorMsg = `${json.errorDescription}${\n      json.errorMessage ? `: ${json.errorMessage}` : ''\n    }`;\n    throw Error(descopeErrorMsg || `${res.status} ${res.statusText}`);\n  }\n\n  res.json = () => Promise.resolve(json);\n  res.text = () => Promise.resolve(text);\n};\n","import {\n  CreateUserConfig,\n  HttpClient,\n  SearchUsersConfig,\n  UpdateUserConfig,\n  User,\n  CustomAttr,\n} from '../types';\nimport { apiPaths } from '../apiPaths';\nimport { withErrorHandler } from './helpers';\nimport { user } from './mocks';\n\nexport const createUserSdk = ({\n  httpClient,\n  tenant,\n  mock,\n}: {\n  httpClient: HttpClient;\n  tenant: string;\n  mock: boolean;\n}) => {\n  const search: (config: SearchUsersConfig) => Promise<User[]> = async ({\n    page,\n    limit = 10000,\n    customAttributes,\n    statuses,\n    emails,\n    phones,\n    text,\n    sort,\n  } = {}) => {\n    if (mock) {\n      return user.search({\n        page,\n        limit,\n        customAttributes,\n        statuses,\n        emails,\n        phones,\n        text,\n        sort,\n      });\n    }\n    const res = await httpClient.post(\n      apiPaths.user.search,\n      {\n        limit,\n        page,\n        withTestUser: false,\n        customAttributes,\n        statuses,\n        emails,\n        phones,\n        text,\n        sort,\n      },\n      {\n        queryParams: { tenant },\n      },\n    );\n\n    await withErrorHandler(res);\n\n    const json = await res.json();\n\n    return json.users;\n  };\n\n  const deleteBatch = async (userIds: string[]) => {\n    if (mock) {\n      return user.deleteBatch();\n    }\n    const res = await httpClient.post(\n      apiPaths.user.deleteBatch,\n      { userIds },\n      {\n        queryParams: { tenant },\n      },\n    );\n\n    await withErrorHandler(res);\n\n    return res.json();\n  };\n\n  const create: (config: CreateUserConfig) => Promise<User[]> = async ({\n    loginId,\n    email,\n    phone,\n    displayName,\n    roles,\n    customAttributes,\n    picture,\n    verifiedEmail,\n    verifiedPhone,\n    givenName,\n    middleName,\n    familyName,\n    additionalLoginIds,\n    sendSMS,\n    sendMail,\n    inviteUrl,\n    invite,\n  }) => {\n    if (mock) {\n      return user.create({\n        loginId,\n        email,\n        phone,\n        displayName,\n        roles,\n        customAttributes,\n        picture,\n        verifiedEmail,\n        verifiedPhone,\n        givenName,\n        middleName,\n        familyName,\n        additionalLoginIds,\n        sendSMS,\n        sendMail,\n        inviteUrl,\n        invite,\n      });\n    }\n    const res = await httpClient.post(\n      apiPaths.user.create,\n      {\n        loginId,\n        email,\n        phone,\n        displayName,\n        givenName,\n        middleName,\n        familyName,\n        roleNames: roles,\n        userTenants: [{ tenantId: tenant }],\n        customAttributes,\n        picture,\n        verifiedEmail,\n        verifiedPhone,\n        additionalLoginIds,\n        sendSMS,\n        sendMail,\n        inviteUrl,\n        invite,\n      },\n      {\n        queryParams: { tenant },\n      },\n    );\n\n    await withErrorHandler(res);\n\n    const json = await res.json();\n\n    return json.user;\n  };\n\n  const update: (config: UpdateUserConfig) => Promise<User[]> = async ({\n    loginId,\n    email,\n    phone,\n    displayName,\n    roles,\n    customAttributes,\n    picture,\n    verifiedEmail,\n    verifiedPhone,\n    givenName,\n    middleName,\n    familyName,\n    additionalLoginIds,\n  }) => {\n    if (mock) {\n      return user.update({\n        loginId,\n        email,\n        phone,\n        displayName,\n        roles,\n        customAttributes,\n        picture,\n        verifiedEmail,\n        verifiedPhone,\n        givenName,\n        middleName,\n        familyName,\n        additionalLoginIds,\n      });\n    }\n    const res = await httpClient.post(\n      apiPaths.user.update,\n      {\n        loginId,\n        email,\n        phone,\n        displayName,\n        givenName,\n        middleName,\n        familyName,\n        roleNames: roles,\n        customAttributes,\n        picture,\n        verifiedEmail,\n        verifiedPhone,\n        additionalLoginIds,\n      },\n      {\n        queryParams: { tenant },\n      },\n    );\n\n    await withErrorHandler(res);\n\n    const json = await res.json();\n\n    return json.user;\n  };\n\n  const setTempPassword = async (loginId: string) => {\n    if (mock) {\n      return user.setTempPassword();\n    }\n    const res = await httpClient.post(\n      apiPaths.user.setTempPassword,\n      {\n        loginId,\n      },\n      {\n        queryParams: { tenant },\n      },\n    );\n\n    await withErrorHandler(res);\n\n    return res.json();\n  };\n\n  const removePasskey = async (loginId: string) => {\n    if (mock) {\n      return user.removePasskey();\n    }\n    const res = await httpClient.post(\n      apiPaths.user.removePasskey,\n      { loginId },\n      {\n        queryParams: { tenant },\n      },\n    );\n\n    await withErrorHandler(res);\n\n    return res.json();\n  };\n\n  const enable = async (loginId: string) => {\n    if (mock) {\n      return user.enable(loginId);\n    }\n    const res = await httpClient.post(\n      apiPaths.user.status,\n      { loginId, status: 'enabled' },\n      {\n        queryParams: { tenant },\n      },\n    );\n\n    await withErrorHandler(res);\n\n    return res.json();\n  };\n\n  const disable = async (loginId: string) => {\n    if (mock) {\n      return user.disable(loginId);\n    }\n    const res = await httpClient.post(\n      apiPaths.user.status,\n      { loginId, status: 'disabled' },\n      {\n        queryParams: { tenant },\n      },\n    );\n\n    await withErrorHandler(res);\n\n    return res.json();\n  };\n\n  const getCustomAttributes = async (): Promise<CustomAttr[]> => {\n    if (mock) {\n      return user.getCustomAttributes();\n    }\n    const res = await httpClient.get(apiPaths.user.customAttributes, {\n      queryParams: { tenant },\n    });\n\n    await withErrorHandler(res);\n\n    const json = await res.json();\n\n    return json.data;\n  };\n\n  return {\n    search,\n    deleteBatch,\n    create,\n    update,\n    enable,\n    disable,\n    removePasskey,\n    setTempPassword,\n    getCustomAttributes,\n  };\n};\n","import {\n  CreateUserConfig,\n  CustomAttr,\n  Role,\n  SearchUsersConfig,\n  UpdateUserConfig,\n  User,\n} from '../types';\n\nconst search: (config: SearchUsersConfig) => Promise<User[]> = async ({\n  text,\n  sort,\n}) =>\n  new Promise((resolve) => {\n    const users: User[] = [];\n    for (let i = 1; i < 9; i += 1) {\n      users.push({\n        loginIds: [`user${i}@company.com`],\n        externalIds: [`user${i}@company.com`],\n        userId: `user-${i}`,\n        name: `User ${i}`,\n        email: `user${i}@company.com`,\n        roleNames: [`Role ${i}`],\n        phone: `+1-202-555-010${i}`,\n        verifiedEmail: true,\n        verifiedPhone: true,\n        userTenants: [],\n        status: 'enabled',\n        editable: true,\n        createdTime: new Date().getTime(),\n        customAttributes: {},\n        familyName: '',\n        givenName: '',\n        middleName: '',\n        picture: '',\n        password: true,\n        SAML: false,\n        test: false,\n        TOTP: false,\n        webauthn: false,\n      });\n    }\n    sort.forEach((s) => {\n      users.sort((a, b) =>\n        !s.desc\n          ? (a[s.field] as string)?.localeCompare(b[s.field] as string)\n          : (b[s.field] as string)?.localeCompare(a[s.field] as string),\n      );\n    });\n    resolve(\n      users.filter(\n        (user) =>\n          user.name.toLowerCase().includes(text.toLowerCase()) ||\n          user.phone.toLowerCase().includes(text.toLowerCase()) ||\n          user.status.toLowerCase().includes(text.toLowerCase()) ||\n          text.toLowerCase() === 'active' ||\n          user.familyName.toLowerCase().includes(text.toLowerCase()) ||\n          user.givenName.toLowerCase().includes(text.toLowerCase()) ||\n          user.middleName.toLowerCase().includes(text.toLowerCase()) ||\n          user.email.toLowerCase().includes(text.toLowerCase()),\n      ),\n    );\n  });\n\nconst create: (config: CreateUserConfig) => Promise<User> = async ({\n  loginId,\n  email,\n  phone,\n  displayName,\n  roles,\n  customAttributes,\n  picture,\n  verifiedEmail,\n  verifiedPhone,\n  givenName,\n  middleName,\n  familyName,\n}) =>\n  new Promise((resolve) => {\n    const i = Math.random().toString(10).substring(15);\n    resolve({\n      loginIds: [loginId],\n      externalIds: [loginId],\n      userId: `user-${i}`,\n      email,\n      phone,\n      name: displayName,\n      roleNames: roles,\n      customAttributes,\n      picture,\n      verifiedEmail,\n      verifiedPhone,\n      givenName,\n      middleName,\n      familyName,\n      createdTime: new Date().getTime(),\n      editable: true,\n      password: true,\n      SAML: false,\n      status: 'enabled',\n      test: false,\n      TOTP: false,\n      userTenants: [],\n      webauthn: false,\n    });\n  });\n\nconst update: (config: UpdateUserConfig) => Promise<User> = async ({\n  loginId,\n  email,\n  phone,\n  displayName,\n  roles,\n  customAttributes,\n  picture,\n  verifiedEmail,\n  verifiedPhone,\n  givenName,\n  middleName,\n  familyName,\n}) =>\n  new Promise((resolve) => {\n    resolve({\n      loginIds: [loginId],\n      externalIds: [loginId],\n      userId: loginId,\n      email,\n      phone,\n      name: displayName,\n      roleNames: roles,\n      customAttributes,\n      picture,\n      verifiedEmail,\n      verifiedPhone,\n      givenName,\n      middleName,\n      familyName,\n      createdTime: new Date().getTime(),\n      editable: true,\n      password: true,\n      SAML: false,\n      status: 'enabled',\n      test: false,\n      TOTP: false,\n      userTenants: [],\n      webauthn: false,\n    });\n  });\n\nconst deleteBatch = async () => {};\n\nconst getCustomAttributes = async (): Promise<CustomAttr[]> =>\n  new Promise((resolve) => {\n    resolve([]);\n  });\n\nconst setTempPassword = async () =>\n  new Promise((resolve) => {\n    resolve({\n      cleartext: Math.random().toString(20).substring(2),\n    });\n  });\n\nconst removePasskey = async () => {};\n\nconst enable = async (loginId: string) =>\n  new Promise((resolve) => {\n    resolve({\n      user: {\n        loginIds: [loginId],\n        status: 'enabled',\n      },\n    });\n  });\n\nconst disable = async (loginId: string) =>\n  new Promise((resolve) => {\n    resolve({\n      user: {\n        loginIds: [loginId],\n        status: 'disabled',\n      },\n    });\n  });\n\nconst getTenantRoles = (\n  tenant: string,\n): Promise<{\n  roles: Role[];\n}> =>\n  new Promise((resolve) => {\n    const roles: Role[] = [];\n    for (let i = 1; i < 5; i += 1) {\n      roles.push({\n        name: `Role ${i}`,\n        description: `Role description ${i}`,\n        createdTime: new Date(),\n        permissionNames: [`Permission ${i}`],\n        tenantId: tenant,\n      });\n    }\n    resolve({ roles });\n  });\n\nconst user = {\n  search,\n  create,\n  update,\n  deleteBatch,\n  setTempPassword,\n  removePasskey,\n  enable,\n  disable,\n  getCustomAttributes,\n};\nconst tenants = {\n  getTenantRoles,\n};\nexport { user, tenants };\n","import { HttpClient, Role } from '../types';\nimport { apiPaths } from '../apiPaths';\nimport { withErrorHandler } from './helpers';\nimport { tenants } from './mocks';\n\nexport const createTenantSdk = ({\n  httpClient,\n  tenant,\n  mock,\n}: {\n  httpClient: HttpClient;\n  tenant: string;\n  mock: boolean;\n}) => {\n  const getTenantRoles = async (): Promise<{ roles: Role[] }> => {\n    if (mock) {\n      return tenants.getTenantRoles(tenant);\n    }\n    const res = await httpClient.get(apiPaths.tenant.roles, {\n      queryParams: { tenant },\n    });\n\n    await withErrorHandler(res);\n\n    return res.json();\n  };\n\n  return {\n    getTenantRoles,\n  };\n};\n","import { compose, createSingletonMixin } from '@descope/sdk-helpers';\nimport {\n  createValidateAttributesMixin,\n  loggerMixin,\n  observeAttributesMixin,\n  projectIdMixin,\n} from '@descope/sdk-mixins';\nimport { Sdk, createSdk } from '../api/sdk';\n\nexport const apiMixin = createSingletonMixin(\n  <T extends CustomElementConstructor>(superclass: T) => {\n    const BaseClass = compose(\n      projectIdMixin,\n      observeAttributesMixin,\n      loggerMixin,\n      createValidateAttributesMixin({\n        tenant: createValidateAttributesMixin.missingAttrValidator,\n      }),\n    )(superclass);\n\n    return class ApiMixinClass extends BaseClass {\n      #api: Sdk;\n\n      #createSdk() {\n        this.logger.debug('creating an sdk instance');\n        this.#api = createSdk(\n          { projectId: this.projectId, baseUrl: this.baseUrl },\n          this.tenant,\n          this.mock === 'true',\n        );\n      }\n\n      get baseUrl() {\n        return this.getAttribute('base-url');\n      }\n\n      get tenant() {\n        return this.getAttribute('tenant');\n      }\n\n      get mock() {\n        return this.getAttribute('mock');\n      }\n\n      get api() {\n        if (!this.#api) {\n          this.#createSdk();\n        }\n\n        return this.#api;\n      }\n\n      async init() {\n        await super.init?.();\n\n        this.observeAttributes(['project-id', 'base-url', 'tenant'], () => {\n          if (this.#api) {\n            this.#createSdk();\n          }\n        });\n      }\n    };\n  },\n);\n","import createWebSdk from '@descope/web-js-sdk';\nimport { createUserSdk } from './createUserSdk';\nimport { createTenantSdk } from './createTenantSdk';\n\nexport const createSdk = (\n  config: Parameters<typeof createWebSdk>[0],\n  tenant: string,\n  mock: boolean,\n) => {\n  const webSdk = createWebSdk({ ...config, persistTokens: true });\n\n  return {\n    user: createUserSdk({ httpClient: webSdk.httpClient, tenant, mock }),\n    tenant: createTenantSdk({ httpClient: webSdk.httpClient, tenant, mock }),\n  };\n};\n\nexport type Sdk = ReturnType<typeof createSdk>;\n","/* eslint-disable no-param-reassign */\nimport { compose, createSingletonMixin } from '@descope/sdk-helpers';\nimport {\n  createStateManagementMixin,\n  initLifecycleMixin,\n  loggerMixin,\n} from '@descope/sdk-mixins';\nimport {\n  createUser,\n  deleteUsers,\n  disableUser,\n  enableUser,\n  setTempUserPassword,\n  getCustomAttributes,\n  getTenantRoles,\n  removePasskey,\n  searchUser,\n  updateUser,\n} from '../state/asyncActions';\nimport { initialState } from '../state/initialState';\nimport { apiMixin } from './apiMixin';\n\nexport const stateManagementMixin = createSingletonMixin(\n  <T extends CustomElementConstructor>(superclass: T) => {\n    const BaseClass = compose(\n      createStateManagementMixin({\n        name: 'widget',\n        initialState,\n        reducers: {\n          setSelectedUsersIds: (state, { payload }) => {\n            state.selectedUsersLoginIds = payload;\n          },\n          clearNotifications: (state) => {\n            state.notifications = [];\n          },\n        },\n        extraReducers: (builder) => {\n          createUser.reducer(builder);\n          updateUser.reducer(builder);\n          enableUser.reducer(builder);\n          disableUser.reducer(builder);\n          deleteUsers.reducer(builder);\n          searchUser.reducer(builder);\n          setTempUserPassword.reducer(builder);\n          removePasskey.reducer(builder);\n          getCustomAttributes.reducer(builder);\n          getTenantRoles.reducer(builder);\n        },\n        asyncActions: {\n          searchUsers: searchUser.action,\n          createUser: createUser.action,\n          updateUser: updateUser.action,\n          enableUser: enableUser.action,\n          disableUser: disableUser.action,\n          deleteUsers: deleteUsers.action,\n          removePasskey: removePasskey.action,\n          getCustomAttributes: getCustomAttributes.action,\n          getTenantRoles: getTenantRoles.action,\n          setTempUserPassword: setTempUserPassword.action,\n        },\n      }),\n      initLifecycleMixin,\n      loggerMixin,\n      apiMixin,\n    )(superclass);\n    return class StateManagementMixinClass extends BaseClass {\n      state = initialState;\n\n      constructor(...args: any) {\n        super(...args);\n\n        this.subscribe((state) => {\n          this.logger.debug('State update:', state);\n          this.state = state;\n        });\n      }\n    };\n  },\n);\n","import { compose, createSingletonMixin } from '@descope/sdk-helpers';\nimport {\n  createValidateAttributesMixin,\n  staticResourcesMixin,\n} from '@descope/sdk-mixins';\n\nconst WIDGET_PAGES_BASE_DIR = 'user-management-widget';\n\nexport const fetchWidgetPagesMixin = createSingletonMixin(\n  <T extends CustomElementConstructor>(superclass: T) => {\n    const BaseClass = compose(\n      staticResourcesMixin,\n      createValidateAttributesMixin({\n        'widget-id': createValidateAttributesMixin.missingAttrValidator,\n      }),\n    )(superclass);\n    return class FetchWidgetPagesMixinClass extends BaseClass {\n      get widgetId() {\n        return this.getAttribute('widget-id');\n      }\n\n      async fetchWidgetPage(filename: string) {\n        const res = await this.fetchStaticResource(\n          `${WIDGET_PAGES_BASE_DIR}/${this.widgetId}/${filename}`,\n          'text',\n        );\n        return res.body;\n      }\n    };\n  },\n);\n","import {\n  compose,\n  createSingletonMixin,\n  createTemplate,\n} from '@descope/sdk-helpers';\nimport {\n  descopeUiMixin,\n  initElementMixin,\n  initLifecycleMixin,\n  loggerMixin,\n} from '@descope/sdk-mixins';\nimport { fetchWidgetPagesMixin } from '../../fetchWidgetPagesMixin';\nimport { stateManagementMixin } from '../../stateManagementMixin';\n\nexport const initWidgetRootMixin = createSingletonMixin(\n  <T extends CustomElementConstructor>(superclass: T) =>\n    class InitWidgetRootMixinClass extends compose(\n      loggerMixin,\n      initLifecycleMixin,\n      descopeUiMixin,\n      initElementMixin,\n      fetchWidgetPagesMixin,\n      stateManagementMixin,\n    )(superclass) {\n      async #initWidgetRoot() {\n        const template = createTemplate(\n          // await import('../../../../../../test/mocks/rootMock').then(module => module.default)\n          await this.fetchWidgetPage('root.html'),\n        );\n        await this.loadDescopeUiComponents(template);\n        this.contentRootElement.append(template.content.cloneNode(true));\n      }\n\n      // eslint-disable-next-line class-methods-use-this, @typescript-eslint/no-empty-function\n      async onWidgetRootReady() {}\n\n      async init() {\n        await super.init?.();\n\n        await Promise.all([\n          this.#initWidgetRoot(),\n          this.actions.searchUsers(),\n          this.actions.getTenantRoles(),\n          this.actions.getCustomAttributes(),\n        ]);\n\n        this.onWidgetRootReady();\n      }\n    },\n);\n","import {\n  ButtonDriver,\n  ModalDriver,\n  MultiSelectDriver,\n} from '@descope/sdk-component-drivers';\nimport {\n  compose,\n  createSingletonMixin,\n  createTemplate,\n} from '@descope/sdk-helpers';\nimport { formMixin, loggerMixin, modalMixin } from '@descope/sdk-mixins';\nimport { getCustomAttributes, getTenantRoles } from '../../../state/selectors';\nimport { stateManagementMixin } from '../../stateManagementMixin';\nimport { initWidgetRootMixin } from './initWidgetRootMixin';\n\nexport const initCreateUserModalMixin = createSingletonMixin(\n  <T extends CustomElementConstructor>(superclass: T) =>\n    class InitCreateUserModalMixinClass extends compose(\n      stateManagementMixin,\n      modalMixin,\n      formMixin,\n      loggerMixin,\n      initWidgetRootMixin,\n    )(superclass) {\n      createUserModal: ModalDriver;\n\n      #rolesMultiSelect: MultiSelectDriver;\n\n      async #initCreateUserModal() {\n        this.createUserModal = this.createModal();\n        this.createUserModal.setContent(\n          createTemplate(\n            // await import('../../../../../../test/mocks/createUserModalMock').then(module => module.default)\n            await this.fetchWidgetPage('create-user-modal.html'),\n          ),\n        );\n\n        const cancelButton = new ButtonDriver(\n          () =>\n            this.createUserModal.ele?.querySelector('[data-id=\"modal-cancel\"]'),\n          { logger: this.logger },\n        );\n        cancelButton.onClick(() => {\n          this.createUserModal.close();\n          this.resetFormData(this.createUserModal.ele);\n        });\n\n        const submitButton = new ButtonDriver(\n          () =>\n            this.createUserModal.ele?.querySelector('[data-id=\"modal-submit\"]'),\n          { logger: this.logger },\n        );\n        submitButton.onClick(async () => {\n          if (this.validateForm(this.createUserModal.ele)) {\n            this.actions.createUser({\n              ...this.getFormData(this.createUserModal.ele),\n              invite: true,\n              verifiedEmail: true,\n              verifiedPhone: true,\n            });\n            this.createUserModal.close();\n            this.resetFormData(this.createUserModal.ele);\n          }\n        });\n\n        this.#rolesMultiSelect = new MultiSelectDriver(\n          () =>\n            this.createUserModal.ele?.querySelector(\n              '[data-id=\"roles-multiselect\"]',\n            ),\n          { logger: this.logger },\n        );\n\n        this.#updateRolesMultiSelect();\n\n        this.createUserModal.beforeOpen = async () => {\n          await this.#updateRolesMultiSelect();\n          this.#updateCustomFields();\n        };\n      }\n\n      // hide and disable fields according to user permissions\n      #updateCustomFields() {\n        const customAttrs = getCustomAttributes(this.state);\n\n        this.getFormFieldNames(this.createUserModal.ele).forEach(\n          (fieldName: string) => {\n            const [prefix, name] = fieldName.split('.');\n\n            if (prefix !== 'customAttributes') {\n              return;\n            }\n\n            const matchingCustomAttr = customAttrs.find(\n              (attr) => attr.name === name,\n            );\n\n            if (!matchingCustomAttr) {\n              this.removeFormField(this.createUserModal.ele, fieldName);\n            } else if (!matchingCustomAttr.editable) {\n              this.disableFormField(this.createUserModal.ele, fieldName);\n            }\n          },\n        );\n      }\n\n      #updateRolesMultiSelect = async () => {\n        await this.#rolesMultiSelect.setData(\n          getTenantRoles(this.state).map(({ name }) => ({\n            value: name,\n            label: name,\n          })),\n        );\n      };\n\n      async onWidgetRootReady() {\n        await super.onWidgetRootReady?.();\n\n        this.#initCreateUserModal();\n      }\n    },\n);\n","import { ButtonDriver } from '@descope/sdk-component-drivers';\nimport { compose, createSingletonMixin } from '@descope/sdk-helpers';\nimport { loggerMixin } from '@descope/sdk-mixins';\nimport { initCreateUserModalMixin } from './initCreateUserModalMixin';\nimport { initWidgetRootMixin } from './initWidgetRootMixin';\n\nexport const initCreateUserButtonMixin = createSingletonMixin(\n  <T extends CustomElementConstructor>(superclass: T) =>\n    class InitCreateUserButtonMixinClass extends compose(\n      loggerMixin,\n      initCreateUserModalMixin,\n      initWidgetRootMixin,\n    )(superclass) {\n      createButton: ButtonDriver;\n\n      #initCreateButton() {\n        this.createButton = new ButtonDriver(\n          this.shadowRoot?.querySelector('[data-id=\"create-user\"]'),\n          { logger: this.logger },\n        );\n        this.createButton.onClick(() => this.createUserModal.open());\n      }\n\n      async onWidgetRootReady() {\n        await super.onWidgetRootReady?.();\n\n        this.#initCreateButton();\n      }\n    },\n);\n","import {\n  ButtonDriver,\n  ModalDriver,\n  TextDriver,\n} from '@descope/sdk-component-drivers';\nimport {\n  compose,\n  createSingletonMixin,\n  createTemplate,\n} from '@descope/sdk-helpers';\nimport { loggerMixin, modalMixin } from '@descope/sdk-mixins';\nimport {\n  getSelectedUsersDetailsForDisplay,\n  getSelectedUsersUserIds,\n} from '../../../state/selectors';\nimport { stateManagementMixin } from '../../stateManagementMixin';\nimport { initWidgetRootMixin } from './initWidgetRootMixin';\n\nexport const initDeleteUsersModalMixin = createSingletonMixin(\n  <T extends CustomElementConstructor>(superclass: T) =>\n    class InitDeleteUsersModalMixinClass extends compose(\n      stateManagementMixin,\n      modalMixin,\n      loggerMixin,\n      initWidgetRootMixin,\n    )(superclass) {\n      deleteUsersModal: ModalDriver;\n\n      async #initDeleteUserModal() {\n        this.deleteUsersModal = this.createModal();\n        this.deleteUsersModal.setContent(\n          createTemplate(\n            // await import('../../../../../../test/mocks/deleteUserModalMock').then(module => module.default)\n            await this.fetchWidgetPage('delete-users-modal.html'),\n          ),\n        );\n\n        const cancelButton = new ButtonDriver(\n          () =>\n            this.deleteUsersModal.ele?.querySelector(\n              '[data-id=\"modal-cancel\"]',\n            ),\n          { logger: this.logger },\n        );\n        cancelButton.onClick(() => this.deleteUsersModal.close());\n\n        const submitButton = new ButtonDriver(\n          () =>\n            this.deleteUsersModal.ele?.querySelector(\n              '[data-id=\"modal-submit\"]',\n            ),\n          { logger: this.logger },\n        );\n        submitButton.onClick(() => {\n          const selectedUsersUserIds = getSelectedUsersUserIds(this.state);\n          this.actions.deleteUsers(selectedUsersUserIds);\n          this.deleteUsersModal.close();\n        });\n\n        const description = new TextDriver(\n          this.deleteUsersModal.ele?.querySelector('[data-id=\"body-text\"]'),\n          { logger: this.logger },\n        );\n\n        this.deleteUsersModal.beforeOpen = () => {\n          const userDetails = getSelectedUsersDetailsForDisplay(this.state);\n          description.text = `Delete ${userDetails}?`;\n        };\n      }\n\n      async onWidgetRootReady() {\n        await super.onWidgetRootReady?.();\n\n        await this.#initDeleteUserModal();\n      }\n    },\n);\n","import { ButtonDriver } from '@descope/sdk-component-drivers';\nimport {\n  compose,\n  createSingletonMixin,\n  withMemCache,\n} from '@descope/sdk-helpers';\nimport { loggerMixin } from '@descope/sdk-mixins';\nimport { getCanDelete } from '../../../state/selectors';\nimport { stateManagementMixin } from '../../stateManagementMixin';\nimport { initDeleteUsersModalMixin } from './initDeleteUsersModalMixin';\nimport { initWidgetRootMixin } from './initWidgetRootMixin';\n\nexport const initDeleteUsersButtonMixin = createSingletonMixin(\n  <T extends CustomElementConstructor>(superclass: T) =>\n    class InitDeleteUsersButtonMixinClass extends compose(\n      loggerMixin,\n      initWidgetRootMixin,\n      stateManagementMixin,\n      initDeleteUsersModalMixin,\n    )(superclass) {\n      deleteButton: ButtonDriver;\n\n      #initDeleteButton() {\n        this.deleteButton = new ButtonDriver(\n          this.shadowRoot?.querySelector('[data-id=\"delete-users\"]'),\n          { logger: this.logger },\n        );\n        this.deleteButton.disable();\n        this.deleteButton.onClick(() => {\n          this.deleteUsersModal.open();\n        });\n      }\n\n      #onIsUserSelectedUpdate = withMemCache(\n        (canDelete: ReturnType<typeof getCanDelete>) => {\n          if (canDelete) {\n            this.deleteButton.enable();\n          } else {\n            this.deleteButton.disable();\n          }\n        },\n      );\n\n      async onWidgetRootReady() {\n        this.#initDeleteButton();\n\n        await super.onWidgetRootReady?.();\n\n        this.subscribe(this.#onIsUserSelectedUpdate.bind(this), getCanDelete);\n      }\n    },\n);\n","import {\n  ButtonDriver,\n  ModalDriver,\n  TextDriver,\n} from '@descope/sdk-component-drivers';\nimport {\n  compose,\n  createSingletonMixin,\n  createTemplate,\n} from '@descope/sdk-helpers';\nimport { formMixin, loggerMixin, modalMixin } from '@descope/sdk-mixins';\nimport {\n  getSelectedUserLoginId,\n  getSelectedUsersDetailsForDisplay,\n} from '../../../state/selectors';\nimport { stateManagementMixin } from '../../stateManagementMixin';\nimport { initWidgetRootMixin } from './initWidgetRootMixin';\n\nexport const initDisableUserModalMixin = createSingletonMixin(\n  <T extends CustomElementConstructor>(superclass: T) =>\n    class InitDisableUserModalMixinClass extends compose(\n      stateManagementMixin,\n      modalMixin,\n      loggerMixin,\n      formMixin,\n      initWidgetRootMixin,\n    )(superclass) {\n      disableUserModal: ModalDriver;\n\n      #initCancelButton() {\n        const cancelButton = new ButtonDriver(\n          () =>\n            this.disableUserModal.ele?.querySelector(\n              '[data-id=\"modal-cancel\"]',\n            ),\n          { logger: this.logger },\n        );\n        cancelButton.onClick(() => this.disableUserModal.close());\n      }\n\n      #initSubmitButton() {\n        const submitButton = new ButtonDriver(\n          () =>\n            this.disableUserModal.ele?.querySelector(\n              '[data-id=\"modal-submit\"]',\n            ),\n          { logger: this.logger },\n        );\n\n        submitButton.onClick(() => {\n          const selectedUsersLoginId = getSelectedUserLoginId(this.state);\n          this.actions.disableUser(selectedUsersLoginId);\n          this.disableUserModal.close();\n        });\n      }\n\n      async #initDisableUserModal() {\n        this.disableUserModal = this.createModal();\n        this.disableUserModal.setContent(\n          createTemplate(\n            // await import('../../../../../../test/mocks/disableUserModalMock').then(module => module.default)\n            await this.fetchWidgetPage('disable-user-modal.html'),\n          ),\n        );\n\n        this.#initCancelButton();\n        this.#initSubmitButton();\n\n        const description = new TextDriver(\n          this.disableUserModal.ele?.querySelector('[data-id=\"body-text\"]'),\n          { logger: this.logger },\n        );\n\n        this.disableUserModal.beforeOpen = async () => {\n          const userDetails = getSelectedUsersDetailsForDisplay(this.state);\n          description.text = `Disable ${userDetails}?`;\n        };\n      }\n\n      async onWidgetRootReady() {\n        await super.onWidgetRootReady?.();\n\n        await this.#initDisableUserModal();\n      }\n    },\n);\n","import { ButtonDriver } from '@descope/sdk-component-drivers';\nimport {\n  compose,\n  createSingletonMixin,\n  withMemCache,\n} from '@descope/sdk-helpers';\nimport { formMixin, loggerMixin } from '@descope/sdk-mixins';\nimport { getCanDisable } from '../../../state/selectors';\nimport { stateManagementMixin } from '../../stateManagementMixin';\nimport { initDisableUserModalMixin } from './initDisableUserModalMixin';\nimport { initWidgetRootMixin } from './initWidgetRootMixin';\n\nexport const initDisableUserButtonMixin = createSingletonMixin(\n  <T extends CustomElementConstructor>(superclass: T) =>\n    class InitDisableUserButtonMixinClass extends compose(\n      loggerMixin,\n      initWidgetRootMixin,\n      stateManagementMixin,\n      initDisableUserModalMixin,\n      formMixin,\n    )(superclass) {\n      disableButton: ButtonDriver;\n\n      #initDisableButton() {\n        this.disableButton = new ButtonDriver(\n          this.shadowRoot?.querySelector('[data-id=\"disable-user\"]'),\n          { logger: this.logger },\n        );\n\n        this.disableButton.disable();\n        this.disableButton.onClick(() => {\n          this.disableUserModal.open();\n        });\n      }\n\n      #onIsUserSelectedUpdate = withMemCache(\n        (canDisable: ReturnType<typeof getCanDisable>) => {\n          if (canDisable) {\n            this.disableButton.enable();\n          } else {\n            this.disableButton.disable();\n          }\n        },\n      );\n\n      async onWidgetRootReady() {\n        this.#initDisableButton();\n\n        await super.onWidgetRootReady?.();\n\n        this.subscribe(this.#onIsUserSelectedUpdate.bind(this), getCanDisable);\n      }\n    },\n);\n","import {\n  ButtonDriver,\n  ModalDriver,\n  MultiSelectDriver,\n  TextFieldDriver,\n} from '@descope/sdk-component-drivers';\nimport {\n  compose,\n  createSingletonMixin,\n  createTemplate,\n} from '@descope/sdk-helpers';\nimport { formMixin, loggerMixin, modalMixin } from '@descope/sdk-mixins';\nimport parsePhone from 'libphonenumber-js/min';\nimport { User } from '../../../api/types';\nimport { stateManagementMixin } from '../../stateManagementMixin';\nimport { initWidgetRootMixin } from './initWidgetRootMixin';\nimport {\n  getCustomAttributes,\n  getSelectedUsers,\n  getTenantRoles,\n} from '../../../state/selectors';\n\nconst unflattenKeys = ['customAttributes'];\n\nconst unflatten = (formData: Partial<User>) =>\n  Object.entries(formData).reduce((acc, [key, value]) => {\n    const [prefix, ...rest] = key.split('.');\n\n    if (!unflattenKeys.includes(prefix)) {\n      return Object.assign(acc, { [key]: value });\n    }\n\n    if (!acc[prefix]) {\n      acc[prefix] = {};\n    }\n\n    acc[prefix][rest.join('.')] = value;\n\n    return acc;\n  }, {});\n\nconst flatten = (\n  vals: Record<string, string | boolean | number>,\n  keyPrefix: string,\n) =>\n  Object.fromEntries(\n    Object.entries(vals || {}).map(([key, val]) => [`${keyPrefix}${key}`, val]),\n  );\n\nconst formatPhoneNumber = (phoneNumber: string) => {\n  if (!phoneNumber) return phoneNumber;\n\n  const parsedPhone = parsePhone(phoneNumber);\n  const splitCodeRegex = new RegExp(\n    `(\\\\+?${parsedPhone?.countryCallingCode})(.*)`,\n  );\n\n  return parsedPhone.number.replace(splitCodeRegex, '$1-$2');\n};\n\nexport const initEditUserModalMixin = createSingletonMixin(\n  <T extends CustomElementConstructor>(superclass: T) =>\n    class InitEditUserModalMixinClass extends compose(\n      stateManagementMixin,\n      modalMixin,\n      loggerMixin,\n      formMixin,\n      initWidgetRootMixin,\n    )(superclass) {\n      editUserModal: ModalDriver;\n\n      #idInput: TextFieldDriver;\n\n      #rolesMultiSelect: MultiSelectDriver;\n\n      #initCancelButton() {\n        const cancelButton = new ButtonDriver(\n          () =>\n            this.editUserModal.ele?.querySelector('[data-id=\"modal-cancel\"]'),\n          { logger: this.logger },\n        );\n        cancelButton.onClick(() => this.editUserModal.close());\n      }\n\n      #initSubmitButton() {\n        const submitButton = new ButtonDriver(\n          () =>\n            this.editUserModal.ele?.querySelector('[data-id=\"modal-submit\"]'),\n          { logger: this.logger },\n        );\n\n        submitButton.onClick(() => {\n          if (this.validateForm(this.editUserModal.ele)) {\n            const { loginId, ...formData } = this.getFormData(\n              this.editUserModal.ele,\n            );\n            this.actions.updateUser({\n              // we are joining the ids in order to display it so we need to split it back\n              loginId: loginId.split(', ')[0],\n              ...unflatten(formData),\n            });\n            this.editUserModal.close();\n            this.resetFormData(this.editUserModal.ele);\n          }\n        });\n      }\n\n      #updateRolesMultiSelect = async () => {\n        await this.#rolesMultiSelect.setData(\n          getTenantRoles(this.state).map(({ name }) => ({\n            value: name,\n            label: name,\n          })),\n        );\n      };\n\n      // hide and disable fields according to user permissions\n      #updateCustomFields() {\n        const customAttrs = getCustomAttributes(this.state);\n\n        this.getFormFieldNames(this.editUserModal.ele).forEach(\n          (fieldName: string) => {\n            const [prefix, name] = fieldName.split('.');\n\n            if (prefix !== 'customAttributes') {\n              return;\n            }\n\n            const matchingCustomAttr = customAttrs.find(\n              (attr) => attr.name === name,\n            );\n\n            if (!matchingCustomAttr) {\n              this.removeFormField(this.editUserModal.ele, fieldName);\n            } else if (!matchingCustomAttr.editable) {\n              this.disableFormField(this.editUserModal.ele, fieldName);\n            }\n          },\n        );\n      }\n\n      #updateModalData = () => {\n        const userDetails = getSelectedUsers(this.state)?.[0];\n\n        const formData = {\n          loginId: userDetails?.loginIds?.join(', '),\n          displayName: userDetails?.name,\n          email: userDetails?.email,\n          phone: formatPhoneNumber(userDetails?.phone),\n          roles: userDetails?.roles,\n          ...flatten(userDetails.customAttributes, 'customAttributes.'),\n        };\n\n        this.setFormData(this.editUserModal.ele, formData);\n      };\n\n      async #initEditUserModal() {\n        this.editUserModal = this.createModal();\n        this.editUserModal.setContent(\n          createTemplate(\n            // await import('../../../../../../test/mocks/editUserModalMock').then(module => module.default)\n            await this.fetchWidgetPage('edit-user-modal.html'),\n          ),\n        );\n\n        this.#initCancelButton();\n        this.#initSubmitButton();\n\n        this.#idInput = new TextFieldDriver(\n          this.editUserModal.ele?.querySelector('[name=\"loginId\"]'),\n          { logger: this.logger },\n        );\n\n        this.#rolesMultiSelect = new MultiSelectDriver(\n          () =>\n            this.editUserModal.ele?.querySelector(\n              '[data-id=\"roles-multiselect\"]',\n            ),\n          { logger: this.logger },\n        );\n\n        this.editUserModal.beforeOpen = async () => {\n          await this.#updateRolesMultiSelect();\n          this.#idInput.disable();\n          this.#updateModalData();\n          this.#updateCustomFields();\n        };\n      }\n\n      async onWidgetRootReady() {\n        await super.onWidgetRootReady?.();\n\n        await this.#initEditUserModal();\n      }\n    },\n);\n","import { ButtonDriver } from '@descope/sdk-component-drivers';\nimport {\n  compose,\n  createSingletonMixin,\n  withMemCache,\n} from '@descope/sdk-helpers';\nimport { formMixin, loggerMixin } from '@descope/sdk-mixins';\nimport { getCanEdit } from '../../../state/selectors';\nimport { stateManagementMixin } from '../../stateManagementMixin';\nimport { initEditUserModalMixin } from './initEditUserModalMixin';\nimport { initWidgetRootMixin } from './initWidgetRootMixin';\n\nexport const initEditUserButtonMixin = createSingletonMixin(\n  <T extends CustomElementConstructor>(superclass: T) =>\n    class InitEditUserButtonMixinClass extends compose(\n      loggerMixin,\n      initWidgetRootMixin,\n      stateManagementMixin,\n      initEditUserModalMixin,\n      formMixin,\n    )(superclass) {\n      editButton: ButtonDriver;\n\n      #initEditButton() {\n        this.editButton = new ButtonDriver(\n          this.shadowRoot?.querySelector('[data-id=\"edit-user\"]'),\n          { logger: this.logger },\n        );\n        this.editButton.disable();\n        this.editButton.onClick(() => {\n          this.editUserModal.open();\n        });\n      }\n\n      #onIsUserSelectedUpdate = withMemCache(\n        (canEdit: ReturnType<typeof getCanEdit>) => {\n          if (canEdit) {\n            this.editButton.enable();\n          } else {\n            this.editButton.disable();\n          }\n        },\n      );\n\n      async onWidgetRootReady() {\n        this.#initEditButton();\n\n        await super.onWidgetRootReady?.();\n\n        this.subscribe(this.#onIsUserSelectedUpdate.bind(this), getCanEdit);\n      }\n    },\n);\n","import {\n  ButtonDriver,\n  ModalDriver,\n  TextDriver,\n} from '@descope/sdk-component-drivers';\nimport {\n  compose,\n  createSingletonMixin,\n  createTemplate,\n} from '@descope/sdk-helpers';\nimport { formMixin, loggerMixin, modalMixin } from '@descope/sdk-mixins';\nimport {\n  getSelectedUserLoginId,\n  getSelectedUsersDetailsForDisplay,\n} from '../../../state/selectors';\nimport { stateManagementMixin } from '../../stateManagementMixin';\nimport { initWidgetRootMixin } from './initWidgetRootMixin';\n\nexport const initEnableUserModalMixin = createSingletonMixin(\n  <T extends CustomElementConstructor>(superclass: T) =>\n    class InitEnableUserModalMixinClass extends compose(\n      stateManagementMixin,\n      modalMixin,\n      loggerMixin,\n      formMixin,\n      initWidgetRootMixin,\n    )(superclass) {\n      enableUserModal: ModalDriver;\n\n      #initCancelButton() {\n        const cancelButton = new ButtonDriver(\n          () =>\n            this.enableUserModal.ele?.querySelector('[data-id=\"modal-cancel\"]'),\n          { logger: this.logger },\n        );\n        cancelButton.onClick(() => this.enableUserModal.close());\n      }\n\n      #initSubmitButton() {\n        const submitButton = new ButtonDriver(\n          () =>\n            this.enableUserModal.ele?.querySelector('[data-id=\"modal-submit\"]'),\n          { logger: this.logger },\n        );\n\n        submitButton.onClick(() => {\n          const selectedUsersLoginId = getSelectedUserLoginId(this.state);\n          this.actions.enableUser(selectedUsersLoginId);\n          this.enableUserModal.close();\n        });\n      }\n\n      async #initEnableUserModal() {\n        this.enableUserModal = this.createModal();\n        this.enableUserModal.setContent(\n          createTemplate(\n            // await import('../../../../../../test/mocks/enableUserModalMock').then(module => module.default)\n            await this.fetchWidgetPage('enable-user-modal.html'),\n          ),\n        );\n\n        this.#initCancelButton();\n        this.#initSubmitButton();\n\n        const description = new TextDriver(\n          this.enableUserModal.ele?.querySelector('[data-id=\"body-text\"]'),\n          { logger: this.logger },\n        );\n\n        this.enableUserModal.beforeOpen = async () => {\n          const userDetails = getSelectedUsersDetailsForDisplay(this.state);\n          description.text = `Activate ${userDetails}?`;\n        };\n      }\n\n      async onWidgetRootReady() {\n        await super.onWidgetRootReady?.();\n\n        await this.#initEnableUserModal();\n      }\n    },\n);\n","import { ButtonDriver } from '@descope/sdk-component-drivers';\nimport {\n  compose,\n  createSingletonMixin,\n  withMemCache,\n} from '@descope/sdk-helpers';\nimport { formMixin, loggerMixin } from '@descope/sdk-mixins';\nimport { getCanEnable } from '../../../state/selectors';\nimport { stateManagementMixin } from '../../stateManagementMixin';\nimport { initEnableUserModalMixin } from './initEnableUserModalMixin';\nimport { initWidgetRootMixin } from './initWidgetRootMixin';\n\nexport const initEnableUserButtonMixin = createSingletonMixin(\n  <T extends CustomElementConstructor>(superclass: T) =>\n    class InitEnableUserButtonMixinClass extends compose(\n      loggerMixin,\n      initWidgetRootMixin,\n      stateManagementMixin,\n      initEnableUserModalMixin,\n      formMixin,\n    )(superclass) {\n      enableButton: ButtonDriver;\n\n      #initEnableButton() {\n        this.enableButton = new ButtonDriver(\n          this.shadowRoot?.querySelector('[data-id=\"enable-user\"]'),\n          { logger: this.logger },\n        );\n\n        this.enableButton.disable();\n        this.enableButton.onClick(() => {\n          this.enableUserModal.open();\n        });\n      }\n\n      #onIsUserSelectedUpdate = withMemCache(\n        (canEnable: ReturnType<typeof getCanEnable>) => {\n          if (canEnable) {\n            this.enableButton.enable();\n          } else {\n            this.enableButton.disable();\n          }\n        },\n      );\n\n      async onWidgetRootReady() {\n        this.#initEnableButton();\n\n        await super.onWidgetRootReady?.();\n\n        this.subscribe(this.#onIsUserSelectedUpdate.bind(this), getCanEnable);\n      }\n    },\n);\n","import { TextFieldDriver } from '@descope/sdk-component-drivers';\nimport { compose, createSingletonMixin, debounce } from '@descope/sdk-helpers';\nimport { loggerMixin } from '@descope/sdk-mixins';\nimport { stateManagementMixin } from '../../stateManagementMixin';\nimport { initWidgetRootMixin } from './initWidgetRootMixin';\n\nexport const initFilterUsersInputMixin = createSingletonMixin(\n  <T extends CustomElementConstructor>(superclass: T) =>\n    class InitFilterUsersInputMixinClass extends compose(\n      loggerMixin,\n      initWidgetRootMixin,\n      stateManagementMixin,\n    )(superclass) {\n      searchInput: TextFieldDriver;\n\n      #onInput = debounce(() => {\n        this.actions.searchUsers({ text: this.searchInput.value });\n      });\n\n      #initSearchInput() {\n        // currently we are doing it on client side because we assume there will not be more than 10000 users per tenant\n        this.searchInput = new TextFieldDriver(\n          this.shadowRoot?.querySelector('[data-id=\"search-input\"]'),\n          { logger: this.logger },\n        );\n        this.searchInput.onInput(this.#onInput);\n      }\n\n      async onWidgetRootReady() {\n        await super.onWidgetRootReady?.();\n\n        this.#initSearchInput();\n      }\n    },\n);\n","import {\n  compose,\n  createSingletonMixin,\n  withMemCache,\n} from '@descope/sdk-helpers';\nimport {\n  initLifecycleMixin,\n  loggerMixin,\n  notificationsMixin,\n} from '@descope/sdk-mixins';\nimport checkmark from '../../../../assets/checkmark.svg';\nimport close from '../../../../assets/close.svg';\nimport warning from '../../../../assets/warning.svg';\nimport { getNotifications } from '../../../state/selectors';\nimport { stateManagementMixin } from '../../stateManagementMixin';\n\ntype Notifications = ReturnType<typeof getNotifications>;\ntype Notification = Notifications[0];\n\nconst SUCCESS_NOTIFICATION_DURATION = 3000;\nconst ERROR_NOTIFICATION_DURATION = 0;\n\nconst notificationTypesIcons = {\n  success: checkmark(),\n  error: warning(),\n};\n\nexport const initNotificationsMixin = createSingletonMixin(\n  <T extends CustomElementConstructor>(superclass: T) =>\n    class InitNotificationsMixinClass extends compose(\n      loggerMixin,\n      stateManagementMixin,\n      notificationsMixin,\n      initLifecycleMixin,\n    )(superclass) {\n      // eslint-disable-next-line class-methods-use-this\n      #createNotificationContent({ type, msg }: Notification) {\n        const icon = notificationTypesIcons[type];\n\n        const closeIcon = Object.assign(close(), { slot: 'close' });\n\n        return `${icon?.outerHTML || ''}${msg}${closeIcon.outerHTML}`;\n      }\n\n      #createNotification(type: Notification['type']) {\n        return this.createNotification({\n          mode: type,\n          duration:\n            type === 'error'\n              ? ERROR_NOTIFICATION_DURATION\n              : SUCCESS_NOTIFICATION_DURATION,\n          position: 'bottom-start',\n          size: 'sm',\n        });\n      }\n\n      #onNotificationsUpdate = withMemCache((notifications: Notifications) => {\n        if (notifications.length) {\n          notifications.forEach(({ type, msg }) => {\n            const notification = this.#createNotification(type);\n\n            notification.setContent(\n              this.#createNotificationContent({ type, msg }),\n            );\n\n            notification.show();\n          });\n\n          // when there is a selection update from the table we get a double notification\n          // this is why we are wrapping the clearNotifications action with timeout;\n          setTimeout(() => this.actions.clearNotifications());\n        }\n      });\n\n      async init() {\n        await super.init?.();\n\n        this.subscribe(\n          this.#onNotificationsUpdate.bind(this),\n          getNotifications,\n        );\n      }\n    },\n);\n","import {\n  ButtonDriver,\n  ModalDriver,\n  TextDriver,\n} from '@descope/sdk-component-drivers';\nimport {\n  compose,\n  createSingletonMixin,\n  createTemplate,\n} from '@descope/sdk-helpers';\nimport { formMixin, loggerMixin, modalMixin } from '@descope/sdk-mixins';\nimport {\n  getSelectedUserLoginId,\n  getSelectedUsersDetailsForDisplay,\n} from '../../../state/selectors';\nimport { stateManagementMixin } from '../../stateManagementMixin';\nimport { initWidgetRootMixin } from './initWidgetRootMixin';\n\nexport const initRemovePasskeyModalMixin = createSingletonMixin(\n  <T extends CustomElementConstructor>(superclass: T) =>\n    class InitRemovePasskeyModalMixinClass extends compose(\n      stateManagementMixin,\n      modalMixin,\n      loggerMixin,\n      formMixin,\n      initWidgetRootMixin,\n    )(superclass) {\n      removePasskeyModal: ModalDriver;\n\n      #initCancelButton() {\n        const cancelButton = new ButtonDriver(\n          () =>\n            this.removePasskeyModal.ele?.querySelector(\n              '[data-id=\"modal-cancel\"]',\n            ),\n          { logger: this.logger },\n        );\n        cancelButton.onClick(() => this.removePasskeyModal.close());\n      }\n\n      #initSubmitButton() {\n        const submitButton = new ButtonDriver(\n          () =>\n            this.removePasskeyModal.ele?.querySelector(\n              '[data-id=\"modal-submit\"]',\n            ),\n          { logger: this.logger },\n        );\n\n        submitButton.onClick(() => {\n          const selectedUsersLoginId = getSelectedUserLoginId(this.state);\n          this.actions.removePasskey(selectedUsersLoginId);\n          this.removePasskeyModal.close();\n        });\n      }\n\n      async #initRemovePasskeyModal() {\n        this.removePasskeyModal = this.createModal();\n        this.removePasskeyModal.setContent(\n          createTemplate(\n            // await import('../../../../../../test/mocks/removePasskeyModalMock').then(module => module.default)\n            await this.fetchWidgetPage('remove-passkey-modal.html'),\n          ),\n        );\n\n        this.#initCancelButton();\n        this.#initSubmitButton();\n\n        const description = new TextDriver(\n          this.removePasskeyModal.ele?.querySelector('[data-id=\"body-text\"]'),\n          { logger: this.logger },\n        );\n\n        this.removePasskeyModal.beforeOpen = async () => {\n          const userDetails = getSelectedUsersDetailsForDisplay(this.state);\n          description.text = `Remove passkey for ${userDetails}?`;\n        };\n      }\n\n      async onWidgetRootReady() {\n        await super.onWidgetRootReady?.();\n\n        await this.#initRemovePasskeyModal();\n      }\n    },\n);\n","import { ButtonDriver } from '@descope/sdk-component-drivers';\nimport {\n  compose,\n  createSingletonMixin,\n  withMemCache,\n} from '@descope/sdk-helpers';\nimport { formMixin, loggerMixin } from '@descope/sdk-mixins';\nimport { getCanRemovePasskey } from '../../../state/selectors';\nimport { stateManagementMixin } from '../../stateManagementMixin';\nimport { initRemovePasskeyModalMixin } from './initRemovePasskeyModalMixin';\nimport { initWidgetRootMixin } from './initWidgetRootMixin';\n\nexport const initRemovePasskeyButtonMixin = createSingletonMixin(\n  <T extends CustomElementConstructor>(superclass: T) =>\n    class InitRemovePasskeyButtonMixinClass extends compose(\n      loggerMixin,\n      initWidgetRootMixin,\n      stateManagementMixin,\n      initRemovePasskeyModalMixin,\n      formMixin,\n    )(superclass) {\n      removePasskeyButton: ButtonDriver;\n\n      #initRemovePasskeyButton() {\n        this.removePasskeyButton = new ButtonDriver(\n          this.shadowRoot?.querySelector('[data-id=\"remove-passkey\"]'),\n          { logger: this.logger },\n        );\n\n        this.removePasskeyButton.disable();\n        this.removePasskeyButton.onClick(() => {\n          this.removePasskeyModal.open();\n        });\n      }\n\n      #onIsUserSelectedUpdate = withMemCache(\n        (canRemovePasskey: ReturnType<typeof getCanRemovePasskey>) => {\n          if (canRemovePasskey) {\n            this.removePasskeyButton.enable();\n          } else {\n            this.removePasskeyButton.disable();\n          }\n        },\n      );\n\n      async onWidgetRootReady() {\n        this.#initRemovePasskeyButton();\n\n        await super.onWidgetRootReady?.();\n\n        this.subscribe(\n          this.#onIsUserSelectedUpdate.bind(this),\n          getCanRemovePasskey,\n        );\n      }\n    },\n);\n","import { GridDriver } from '@descope/sdk-component-drivers';\nimport {\n  compose,\n  createSingletonMixin,\n  debounce,\n  withMemCache,\n} from '@descope/sdk-helpers';\nimport { loggerMixin } from '@descope/sdk-mixins';\nimport { User } from '../../../api/types';\nimport { getUsersList, getCustomAttributes } from '../../../state/selectors';\nimport { stateManagementMixin } from '../../stateManagementMixin';\nimport { initWidgetRootMixin } from './initWidgetRootMixin';\n\nexport const initUsersTableMixin = createSingletonMixin(\n  <T extends CustomElementConstructor>(superclass: T) =>\n    class InitUsersTableMixinClass extends compose(\n      stateManagementMixin,\n      loggerMixin,\n      initWidgetRootMixin,\n    )(superclass) {\n      usersTable: GridDriver<User>;\n\n      // we want to keep the column configuration to make sure the table is rendered in the same way\n      #setCustomRenderer() {\n        const getColumnByPath = (path: string) =>\n          this.usersTable.ele?.querySelector(`[path=\"${path}\"]`);\n        // relevant for selection column which does not have a path\n        const getColumnByType = (type: string) => {\n          const tagName = `descope-grid-${type}-column`;\n\n          return this.usersTable.ele?.querySelector(tagName);\n        };\n\n        const origRenderColumn = this.usersTable.renderColumn;\n\n        this.usersTable.renderColumn = ({ path, header, type, attrs }) => {\n          const currentColumn = getColumnByPath(path) || getColumnByType(type);\n\n          if (!currentColumn) {\n            return origRenderColumn({ path, header, type, attrs });\n          }\n\n          const newColumn = currentColumn.cloneNode(true) as HTMLElement;\n\n          const newAttrs: Record<string, string> = {\n            ...attrs,\n            header,\n          };\n\n          // update the column with the new attributes\n          Object.entries(newAttrs).forEach(([key, value]) => {\n            newColumn.setAttribute(key, value);\n          });\n\n          return newColumn.outerHTML;\n        };\n      }\n\n      #initUsersTable() {\n        this.usersTable = new GridDriver(\n          this.shadowRoot?.querySelector('[data-id=\"users-table\"]'),\n          { logger: this.logger },\n        );\n\n        this.usersTable.onSelectedItemsChange((e) => {\n          this.actions.setSelectedUsersIds(\n            e.detail.value.map(({ loginIds }) => loginIds),\n          );\n        });\n\n        // every time the columns change, we are re-rendering the table, so we need to re-register the sort event\n        this.usersTable.onColumnsChange(\n          this.#registerSortColumnEvent.bind(this),\n        );\n\n        this.#setCustomRenderer();\n\n        this.#registerSortColumnEvent();\n      }\n\n      #onUsersListUpdate = withMemCache(\n        (usersList: ReturnType<typeof getUsersList>) => {\n          this.usersTable.data = usersList as User[];\n        },\n      );\n\n      #onColumnSortChange = debounce(\n        (\n          ele: HTMLElement & { path: string },\n          detail: { value: 'asc' | 'desc' | null },\n        ) => {\n          const sort = [];\n          const { value } = detail;\n          if (value) {\n            const field = ele.path;\n            sort.push({ field, desc: value === 'desc' });\n          }\n          this.actions.searchUsers({ sort });\n        },\n      );\n\n      #onCustomAttrsUpdate = withMemCache(\n        (customAttrs: ReturnType<typeof getCustomAttributes>) => {\n          this.usersTable.filterColumns((col) => {\n            const [prefix, name] = col.path?.split('.') || [];\n            return (\n              prefix !== 'customAttributes' ||\n              !!customAttrs?.find((attr) => attr.name === name)\n            );\n          });\n        },\n      );\n\n      #registerSortColumnEvent() {\n        this.usersTable.columns.forEach((column) => {\n          column.onSortDirectionChange((e: MouseEvent) => {\n            this.#onColumnSortChange(e.target, e.detail);\n          });\n        });\n      }\n\n      async onWidgetRootReady() {\n        await super.onWidgetRootReady?.();\n\n        this.#initUsersTable();\n\n        // because we are not waiting for the rest calls,\n        // we need to make sure the table is updated with the received users\n        this.#onUsersListUpdate(getUsersList(this.state));\n        this.#onCustomAttrsUpdate(getCustomAttributes(this.state));\n        this.subscribe(\n          this.#onCustomAttrsUpdate.bind(this),\n          getCustomAttributes,\n        );\n        this.subscribe(this.#onUsersListUpdate.bind(this), getUsersList);\n      }\n    },\n);\n","import { ButtonDriver, ModalDriver } from '@descope/sdk-component-drivers';\nimport {\n  compose,\n  createSingletonMixin,\n  createTemplate,\n} from '@descope/sdk-helpers';\nimport { formMixin, loggerMixin, modalMixin } from '@descope/sdk-mixins';\nimport { stateManagementMixin } from '../../stateManagementMixin';\nimport { initWidgetRootMixin } from './initWidgetRootMixin';\n\nexport const initGeneratedPasswordModalMixin = createSingletonMixin(\n  <T extends CustomElementConstructor>(superclass: T) =>\n    class InitGeneratedPasswordModalMixinClass extends compose(\n      stateManagementMixin,\n      modalMixin,\n      loggerMixin,\n      formMixin,\n      initWidgetRootMixin,\n    )(superclass) {\n      generatedPasswordModal: ModalDriver;\n\n      async #initGeneratedPasswordModal() {\n        this.generatedPasswordModal = this.createModal();\n        this.generatedPasswordModal.setContent(\n          createTemplate(\n            // await import('../../../../../../test/mocks/generatedPasswordModalMock').then(module => module.default)\n            await this.fetchWidgetPage('generated-password-modal.html'),\n          ),\n        );\n\n        const closeButton = new ButtonDriver(\n          () =>\n            this.generatedPasswordModal.ele?.querySelector(\n              '[data-id=\"modal-close\"]',\n            ),\n          { logger: this.logger },\n        );\n        closeButton.onClick(() => {\n          navigator.clipboard.writeText(\n            this.getFormData(this.generatedPasswordModal.ele)[\n              'generated-password'\n            ],\n          );\n          this.resetFormData(this.generatedPasswordModal.ele);\n          this.generatedPasswordModal.close();\n        });\n      }\n\n      async onWidgetRootReady() {\n        await super.onWidgetRootReady?.();\n\n        await this.#initGeneratedPasswordModal();\n      }\n    },\n);\n","import {\n  ButtonDriver,\n  ModalDriver,\n  TextDriver,\n} from '@descope/sdk-component-drivers';\nimport {\n  compose,\n  createSingletonMixin,\n  createTemplate,\n} from '@descope/sdk-helpers';\nimport { formMixin, loggerMixin, modalMixin } from '@descope/sdk-mixins';\nimport {\n  getSelectedUserLoginId,\n  getSelectedUsersDetailsForDisplay,\n} from '../../../state/selectors';\nimport { stateManagementMixin } from '../../stateManagementMixin';\nimport { initWidgetRootMixin } from './initWidgetRootMixin';\nimport { initGeneratedPasswordModalMixin } from './initGeneratedPasswordModalMixin';\n\nexport const initResetPasswordModalMixin = createSingletonMixin(\n  <T extends CustomElementConstructor>(superclass: T) =>\n    class InitResetPasswordModalMixinClass extends compose(\n      stateManagementMixin,\n      modalMixin,\n      loggerMixin,\n      formMixin,\n      initWidgetRootMixin,\n      initGeneratedPasswordModalMixin,\n    )(superclass) {\n      resetPasswordModal: ModalDriver;\n\n      #initCancelButton() {\n        const cancelButton = new ButtonDriver(\n          () =>\n            this.resetPasswordModal.ele?.querySelector(\n              '[data-id=\"modal-cancel\"]',\n            ),\n          { logger: this.logger },\n        );\n        cancelButton.onClick(() => this.resetPasswordModal.close());\n      }\n\n      #initSubmitButton() {\n        const submitButton = new ButtonDriver(\n          () =>\n            this.resetPasswordModal.ele?.querySelector(\n              '[data-id=\"modal-submit\"]',\n            ),\n          { logger: this.logger },\n        );\n\n        submitButton.onClick(async () => {\n          const selectedUsersLoginId = getSelectedUserLoginId(this.state);\n          const res: Record<string, any> =\n            await this.actions.setTempUserPassword(selectedUsersLoginId);\n          this.resetPasswordModal.close();\n\n          this.setFormData(this.generatedPasswordModal.ele, {\n            'generated-password': res?.payload?.cleartext,\n          });\n          this.generatedPasswordModal.open();\n        });\n      }\n\n      async #initResetPasswordModal() {\n        this.resetPasswordModal = this.createModal();\n        this.resetPasswordModal.setContent(\n          createTemplate(\n            // await import('../../../../../../test/mocks/resetPasswordModalMock').then(module => module.default)\n            await this.fetchWidgetPage('reset-password-modal.html'),\n          ),\n        );\n\n        this.#initCancelButton();\n        this.#initSubmitButton();\n\n        const description = new TextDriver(\n          this.resetPasswordModal.ele?.querySelector('[data-id=\"body-text\"]'),\n          { logger: this.logger },\n        );\n\n        this.resetPasswordModal.beforeOpen = async () => {\n          const userDetails = getSelectedUsersDetailsForDisplay(this.state);\n          description.text = `This will generate a new temporary password for ${userDetails}?`;\n        };\n      }\n\n      async onWidgetRootReady() {\n        await super.onWidgetRootReady?.();\n\n        await this.#initResetPasswordModal();\n      }\n    },\n);\n","import { ButtonDriver } from '@descope/sdk-component-drivers';\nimport {\n  compose,\n  createSingletonMixin,\n  withMemCache,\n} from '@descope/sdk-helpers';\nimport { formMixin, loggerMixin } from '@descope/sdk-mixins';\nimport { getCanResetPassword } from '../../../state/selectors';\nimport { stateManagementMixin } from '../../stateManagementMixin';\nimport { initResetPasswordModalMixin } from './initResetPasswordModalMixin';\nimport { initWidgetRootMixin } from './initWidgetRootMixin';\n\nexport const initResetPasswordButtonMixin = createSingletonMixin(\n  <T extends CustomElementConstructor>(superclass: T) =>\n    class InitResetPasswordButtonMixinClass extends compose(\n      loggerMixin,\n      initWidgetRootMixin,\n      stateManagementMixin,\n      initResetPasswordModalMixin,\n      formMixin,\n    )(superclass) {\n      resetPasswordButton: ButtonDriver;\n\n      #initResetPasswordButton() {\n        this.resetPasswordButton = new ButtonDriver(\n          this.shadowRoot?.querySelector('[data-id=\"reset-password\"]'),\n          { logger: this.logger },\n        );\n\n        this.resetPasswordButton.disable();\n        this.resetPasswordButton.onClick(() => {\n          this.resetPasswordModal.open();\n        });\n      }\n\n      #onIsUserSelectedUpdate = withMemCache(\n        (canResetPassword: ReturnType<typeof getCanResetPassword>) => {\n          if (canResetPassword) {\n            this.resetPasswordButton.enable();\n          } else {\n            this.resetPasswordButton.disable();\n          }\n        },\n      );\n\n      async onWidgetRootReady() {\n        this.#initResetPasswordButton();\n\n        await super.onWidgetRootReady?.();\n\n        this.subscribe(\n          this.#onIsUserSelectedUpdate.bind(this),\n          getCanResetPassword,\n        );\n      }\n    },\n);\n","import { compose, createSingletonMixin } from '@descope/sdk-helpers';\nimport { debuggerMixin, themeMixin } from '@descope/sdk-mixins';\nimport { initCreateUserButtonMixin } from './initComponentsMixins/initCreateUserButtonMixin';\nimport { initDeleteUsersButtonMixin } from './initComponentsMixins/initDeleteUsersButtonMixin';\nimport { initDisableUserButtonMixin } from './initComponentsMixins/initDisableUserButtonMixin';\nimport { initEditUserButtonMixin } from './initComponentsMixins/initEditUsersButtonMixin';\nimport { initEnableUserButtonMixin } from './initComponentsMixins/initEnableUserButtonMixin';\nimport { initFilterUsersInputMixin } from './initComponentsMixins/initFilterUsersInputMixin';\nimport { initNotificationsMixin } from './initComponentsMixins/initNotificationsMixin';\nimport { initRemovePasskeyButtonMixin } from './initComponentsMixins/initRemovePasskeyButtonMixin';\nimport { initUsersTableMixin } from './initComponentsMixins/initUsersTableMixin';\nimport { initResetPasswordButtonMixin } from './initComponentsMixins/initResetPasswordButtonMixin';\n\nexport const initMixin = createSingletonMixin(\n  <T extends CustomElementConstructor>(superclass: T) =>\n    /* @ts-ignore */\n    class InitMixinClass extends compose(\n      debuggerMixin,\n      themeMixin,\n      initUsersTableMixin,\n      initCreateUserButtonMixin,\n      initDeleteUsersButtonMixin,\n      initEditUserButtonMixin,\n      initEnableUserButtonMixin,\n      initDisableUserButtonMixin,\n      initResetPasswordButtonMixin,\n      initRemovePasskeyButtonMixin,\n      initFilterUsersInputMixin,\n      initNotificationsMixin,\n    )(superclass) {\n      async init() {\n        await super.init?.();\n      }\n    },\n);\n","import { compose } from '@descope/sdk-helpers';\nimport { initMixin } from './mixins/initMixin/initMixin';\n\nconst rootMixin = (superclass: CustomElementConstructor) =>\n  class RootMixinClass extends initMixin(superclass) {};\n\nexport const UserManagementWidget = compose(rootMixin)(HTMLElement);\n","// eslint-disable-next-line @typescript-eslint/no-unused-vars\nimport type { Unsubscribe } from 'redux'; //  workaround for https://github.com/microsoft/TypeScript/issues/42873\nimport { UserManagementWidget } from './widget';\n\ndeclare global {\n  interface HTMLElement {\n    attributeChangedCallback(\n      attrName: string,\n      oldValue: string | null,\n      newValue: string | null,\n    ): void;\n    connectedCallback(): void;\n  }\n}\n\nexport default UserManagementWidget;\n\ncustomElements.define('descope-user-management-widget', UserManagementWidget);\n"],"names":["logLevels","loggerMixin","createSingletonMixin","superclass","_LoggerMixinClass_instances","_LoggerMixinClass_logger","_LoggerMixinClass_wrapLogger","_a","constructor","set","this","__classPrivateFieldGet","call","console","logger","__classPrivateFieldSet","onLogEvent","logLevel","data","_this","reduce","acc","args","Array","_len","_key","arguments","IS_LOCAL_STORAGE","localStorage","BASE_CONTENT_URL","getItem","missingAttrValidator","attrName","value","concat","initLifecycleMixin","_InitLifecycleMixinClass_isInit","connectedCallback","super","_b","shadowRoot","isConnected","init","observeAttributesMixin","BaseClass","compose","_ObserveAttributesMixinClass_observeMappings","ele","callback","forEach","cb","getAttribute","from","attributes","attr","name","MutationObserver","mutationsList","mutation","type","attributeName","observe","observeAttribute","onAttrChange","idx","push","splice","observeAttributes","attrs","unobserveList","unobserve","createValidateAttributesMixin","mappings","mappingsNames","Object","keys","_ValidateAttributesMixinClass_instances","_ValidateAttributesMixinClass_handleError","bind","newValue","onError","error","projectIdMixin","projectId","staticResourcesMixin","fetchStaticResource","filename","format","resourceUrl","assetsFolder","length","undefined","url","URL","pathname","pathJoin","toString","getResourceUrl","res","fetch","cache","ok","status","body","headers","fromEntries","entries","configMixin","_ConfigMixinClass__configResource","_ConfigMixinClass_fetchConfig","async","projectConfig","executionContext","geo","e","config","debuggerMixin","_DebuggerMixinClass_instances","_DebuggerMixinClass_debuggerEle","_DebuggerMixinClass_disableDebugger","_DebuggerMixinClass_enableDebugger","_DebuggerMixinClass_handleDebugMode","_DebuggerMixinClass_updateDebuggerMessages","attributeChangedCallback","oldValue","debug","remove","document","createElement","assign","style","position","top","right","height","width","pointerEvents","zIndex","Promise","resolve","then","debuggerWc","appendChild","title","description","updateData","DESCOPE_UI_SCRIPT_ID","UI_COMPONENTS_URL_KEY","UI_COMPONENTS_URL","UI_COMPONENTS_FALLBACK_URL","setupScript","id","scriptEle","generateScriptUrl","urlTemplate","componentsVersion","replace","descopeUiMixin","_DescopeUiMixinClass_errorCbsSym","Symbol","_DescopeUiMixinClass_loadCbsSym","_DescopeUiMixinClass_descopeUi","descopeUi","_DescopeUiMixinClass_instances","_DescopeUiMixinClass_getDescopeUi","loadDescopeUiComponents","templateOrComponentNames","descopeUiComponentsList","isArray","template","content","querySelectorAll","el","localName","startsWith","add","Set","getDescopeUiComponentsList","all","map","componentName","_DescopeUiMixinClass_loadDescopeUiComponent","errorCbsSym","loadCbsSym","defineProperty","errorCbs","loadCbs","fallbackScriptEle","append","addEventListener","src","_DescopeUiMixinClass_getComponentsVersion","_DescopeUiMixinClass_handleFallbackScript","querySelector","_DescopeUiMixinClass_exposeAlternateEvents","_DescopeUiMixinClass_registerEvents","getElementById","customElements","get","descopeUI","join","globalThis","DescopeUI","_DescopeUiMixinClass_getDescopeUiLoadingScript","onerror","onload","setTimeout","CONTENT_ROOT_ID","ROOT_ID","initElementMixin","attachShadow","mode","innerHTML","contentRootElement","rootElement","MODAL_ELE_TAG","modalMixin","_ModalMixinClass_ModalDriverWrapper","ModalDriver","setContent","createModal","modal","key","setAttribute","createModalEle","NOTIFICATION_ELE_TAG","notificationsMixin","_NotificationsMixinClass_NotificationDriverWrapper","NotificationDriver","templateOrString","createTemplate","createNotification","notification","createNotificationEle","themeValidation","_","theme","themeMixin","_ThemeMixinClass__themeResource","window","matchMedia","matches","_ThemeMixinClass_instances","_ThemeMixinClass_loadGlobalStyle","_ThemeMixinClass_loadComponentsStyle","_ThemeMixinClass_loadFonts","_ThemeMixinClass_applyTheme","_ThemeMixinClass_fetchTheme","_ThemeMixinClass_themeResource_get","styleEle","innerText","light","globals","dark","componentsThemeManager","themes","components","fonts","cssTemplate","values","font","href","rel","head","loadFont","currentThemeName","createStateManagementMixin","options","slice","createSlice","allActions","actions","asyncActions","_this2","store","configureStore","reducer","middleware","getDefaultMiddleware","thunk","extraArgument","serializableCheck","devTools","actionName","action","result","dispatch","unwrapResult","message","stack","subscribe","selector","state","getState","formMixin","validateForm","rootEle","getFormInputs","every","input","reportValidity","checkValidity","getFormData","setFormData","hasOwnProperty","resetFormData","checked","getFormFieldNames","disableFormField","find","removeFormField","limitCoordinateToScreenBoundaries","x","y","boundaries","Math","min","max","left","offsetWidth","innerWidth","offsetHeight","_c","innerHeight","bottom","_d","INITIAL_POS_THRESHOLD","Debugger","HTMLElement","_Debugger_messagesState","State","messages","_Debugger_rootEle","_Debugger_contentEle","_Debugger_headerEle","_Debugger_eventsCbRefs","resize","_Debugger_instances","_Debugger_onWindowResize","cloneNode","update","dragElement","triggerEle","keepVisible","deltaX","deltaY","currentX","currentY","elementDrag","preventDefault","clientX","clientY","offsetLeft","offsetTop","closeDragElement","onmouseup","onmousemove","dragMouseDown","onmousedown","target","w","h","onresize","_Debugger_setCollapsibleMessages","_Debugger_onNewMessages","disconnectedCallback","unsubscribeAll","removeEventListener","_Debugger_renderMessages","element","descEle","isScroll","scrollWidth","clientWidth","isMultiLine","clientHeight","classList","onclick","contains","toggle","Number","parseInt","define","objectConstructor","isObject","object","normalizeArguments","text","metadata","_Array$prototype$slic2","_slicedToArray","prototype","arg_1","arg_2","arg_3","arg_4","TypeError","Error","_objectSpread","defaultCountry","MIN_LENGTH_FOR_NSN","MAX_LENGTH_FOR_NSN","MAX_LENGTH_COUNTRY_CODE","VALID_DIGITS","VALID_PUNCTUATION","ParseError","code","_classCallCheck","_super","setPrototypeOf","_assertThisInitialized","a","b","split","pa","pb","i","na","nb","isNaN","DEFAULT_EXT_PREFIX","CALLING_CODE_REG_EXP","Metadata","countries","typeOf","validateMetadata","setVersion","filter","countryCode","v1","v2","v3","nonGeographic","nonGeographical","country","getCountryMetadata","callingCode","getCountryCodesForCallingCode","countryCodes","countryCallingCodes","selectNumberingPlan","test","hasCountry","numberingPlan","NumberingPlan","hasCallingCode","getNumberingPlanMetadata","getCountryCodeForCallingCode","IDDPrefix","defaultIDDPrefix","nationalNumberPattern","possibleLengths","formats","nationalPrefixForParsing","nationalPrefixTransformRule","leadingDigits","hasTypes","_type","ext","country_phone_code_to_countries","country_calling_codes","globalMetadataObject","_getFormats","getDefaultCountryMetadataForRegion","Format","_getNationalPrefixFormattingRule","_nationalPrefixForParsing","nationalPrefix","_getNationalPrefixIsOptionalWhenFormatting","types","_type2","getType","Type","_format","nationalPrefixFormattingRule","nationalPrefixIsOptionalWhenFormattingInNationalFormat","usesNationalPrefix","FIRST_GROUP_ONLY_PREFIX_PATTERN","_typeof","getCountryCallingCode","countryCallingCode","version","v4","compare","getExtensionDigitsPattern","maxLength","createExtensionPattern","purpose","possibleSeparatorsBetweenNumberAndExtLabel","possibleCharsAfterExtLabel","optionalExtnSuffix","possibleSeparatorsNumberExtLabelNoComma","MIN_LENGTH_PHONE_NUMBER_PATTERN","VALID_PHONE_NUMBER","VALID_PHONE_NUMBER_START_REG_EXP","RegExp","VALID_PHONE_NUMBER_WITH_EXTENSION","VALID_PHONE_NUMBER_PATTERN","EXTN_PATTERN","DIGITS","parseDigit","character","parseIncompletePhoneNumber","string","_step","_iterator","_createForOfIteratorHelperLoose","done","parsePhoneNumberCharacter","prevParsedCharacters","emitEvent","checkNumberLength","nationalNumber","checkNumberLengthForType","type_info","possible_lengths","mobile_type","merged","indexOf","sort","mergeArrays","actual_length","minimum_length","isPossibleNumber","matchesEntirely","regular_expression","NON_FIXED_LINE_PHONE_TYPES","getNumberType","phone","isNumberTypeEqualTo","pattern","getPossibleCountriesForNumber","possibleCountries","_metadata","couldNationalNumberBelongToCountry","FIRST_GROUP_PATTERN","formatNationalNumberUsingFormat","number","_ref","useInternationalFormat","withNationalPrefix","formattedNumber","carrierCode","internationalFormat","trim","applyInternationalSeparatorStyle","SINGLE_IDD_PREFIX_REG_EXP","DEFAULT_OPTIONS","formatExtension","extension","formatNumber","addExtension","formatNationalNumber","formatRFC3966","fromCountry","fromCountryCallingCode","iddPrefix","countryMetadata","getIddPrefix","formatIDD","formatAs","availableFormats","nationalNnumber","leadingDigitsPatterns","lastLeadingDigitsPattern","search","chooseFormatForNumber","PhoneNumber","countryOrCountryCallingCode","_getCountryAndCountry","metadataJson","isCountryCode","getCountryAndCountryCallingCode","getMetadata","isNonGeographicCallingCode","phoneNumber","CAPTURING_DIGIT_PATTERN","extractNationalNumber","_extractNationalNumbe","prefixPattern","prefixMatch","exec","capturedGroupsCount","hasCapturedGroups","prefixBeforeNationalNumber","possiblePositionOfTheFirstCapturedGroup","extractNationalNumberFromPossiblyIncompleteNumber","nationalNumberBefore","nationalNumberAfter","shouldHaveExtractedNationalPrefix","isPossibleIncompleteNationalNumber","extractCountryCallingCode","isNumberWithIddPrefix","numberWithoutIDD","IDDPrefixPattern","matchedGroups","match","stripIddPrefix","_extractCountryCallin","possibleShorterNumber","possibleShorterNationalNumber","extractCountryCallingCodeFromInternationalNumberWithoutPlusSign","shorterNumber","countryCallingCodeSource","_countryCallingCode","USE_NON_GEOGRAPHIC_COUNTRY_CODE","getCountryByCallingCode","nationalPhoneNumber","matchingCountries","getCountryByNationalNumber","PLUS_SIGN","RFC3966_PHONE_DIGIT_","RFC3966_GLOBAL_NUMBER_DIGITS_PATTERN_","RFC3966_DOMAINNAME_PATTERN_","RFC3966_PREFIX_","RFC3966_PHONE_CONTEXT_","RFC3966_ISDN_SUBADDRESS_","extractFormattedPhoneNumberFromPossibleRfc3966NumberUri","numberToParse","phoneNumberString","extractFormattedPhoneNumber","phoneContext","numberToExtractFrom","indexOfPhoneContext","phoneContextStart","phoneContextEnd","substring","extractPhoneContext","isPhoneContextValid","charAt","indexOfNationalNumber","indexOfRfc3966Prefix","indexOfIsdn","MAX_INPUT_STRING_LENGTH","PHONE_NUMBER_START_PATTERN","AFTER_PHONE_NUMBER_END_PATTERN","parse","_parseInput","extract","throwOnError","startsAt","_extractFormattedPhoneNumber","isViablePhoneNumber","isViablePhoneNumberStart","withExtensionStripped","start","numberWithoutExtension","extractExtension","parseInput","formattedPhoneNumber","_parsePhoneNumber","defaultCallingCode","exactCountry","parsePhoneNumber","hasSelectedNumberingPlan","__countryCallingCodeSource","valid","extended","possible","isSupportedCountry","parsePhoneNumberWithError","_normalizeArguments","parsePhoneNumber_","func","_arguments","apply","withMetadataArgument","O","enabled","disabled","invited","T","tenantRoles","F","selectedUsersLoginIds","q","notifications","A","customAttributes","$","I","usersList","roles","roleNames","B","t","includes","loginIds","E","userId","D","H","editable","Z","V","z","J","G","K","email","Q","s","X","Y","ee","te","se","addCase","pending","onPending","fulfilled","_ref2","onFulfilled","rejected","_ref3","onRejected","ie","loading","oe","_ref4","getErrorMsg","getSuccessMsg","msg","re","j","_ref5","extra","api","user","create","ne","unshift","payload","createUser","de","_ref6","deleteBatch","ue","meta","arg","deleteUser","_templateObject","_taggedTemplateLiteral","_templateObject2","ce","_ref7","setTempPassword","ve","setTempUserPassword","ge","_ref8","getCustomAttributes","pe","ye","_ref9","searchParams","be","we","_ref10","tenant","getTenantRoles","Me","We","_ref11","Ue","findIndex","updateUser","ke","_ref12","enable","Se","o","enableUser","xe","_ref13","disable","je","disableUser","Ne","_ref14","removePasskey","Le","Oe","Te","Fe","qe","n","JSON","errorDescription","errorMessage","statusText","json","Ge","_ref18","httpClient","mock","page","limit","r","statuses","emails","d","phones","l","u","c","_ref15","externalIds","verifiedEmail","verifiedPhone","userTenants","createdTime","Date","getTime","familyName","givenName","middleName","picture","password","SAML","TOTP","webauthn","desc","field","localeCompare","toLowerCase","Ae","post","withTestUser","queryParams","users","userIds","_ref19","loginId","displayName","v","g","m","additionalLoginIds","p","sendSMS","sendMail","f","inviteUrl","invite","_ref16","random","$e","tenantId","_ref20","_ref17","Be","Ze","Ve","cleartext","Ke","_ref21","permissionNames","Je","Qe","baseUrl","WeakMap","WeakSet","N","persistTokens","Xe","initialState","reducers","setSelectedUsersIds","_ref22","clearNotifications","extraReducers","searchUsers","deleteUsers","Ye","widgetId","fetchWidgetPage","_e","onWidgetRootReady","et","R","setData","_ref23","label","createUserModal","U","onClick","close","k","beforeOpen","tt","createButton","open","st","deleteUsersModal","C","it","deleteButton","ot","disableUserModal","rt","disableButton","at","nt","L","dt","_ref24","_ref25","editUserModal","_ref26","S","lt","editButton","ut","enableUserModal","ct","enableButton","ht","searchInput","onInput","vt","success","DOMParser","parseFromString","firstChild","gt","M","_ref27","show","_ref28","slot","outerHTML","duration","size","mt","removePasskeyModal","pt","removePasskeyButton","yt","usersTable","path","filterColumns","renderColumn","_ref29","header","_ref30","onSelectedItemsChange","detail","_ref31","onColumnsChange","columns","onSortDirectionChange","ft","generatedPasswordModal","navigator","clipboard","writeText","bt","resetPasswordModal","wt","resetPasswordButton","Rt","W","P","Mt"],"sourceRoot":""}